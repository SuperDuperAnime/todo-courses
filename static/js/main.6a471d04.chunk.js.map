{"version":3,"sources":["store/LayoutStore.ts","store/store.ts","components/AppBar/AppBar.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Results/input/AnimeSearchInput.tsx","components/Results/CardSmall/CardSmall.tsx","components/Results/CardSmall/TextBlock.tsx","components/Results/CardSmall/CardSmallContainer.tsx","components/Results/Results.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/ContentContainer.tsx","components/MobPanel.tsx","App.tsx","index.tsx"],"names":["activeView","mobPanel","categoryView","makeAutoObservable","this","isOpen","store","category","textInput","action","content","data","favorite","canIStartSearch","loading","startProgram","locStorage","localStorage","getItem","JSON","parse","console","log","toJS","input","select","LayoutStore","pos","map","e","mal_id","indexOf","isFavorite","splice","unshift","setItem","stringify","setTimeout","a","axios","get","then","res","results","forEach","event","includes","catch","error","response","apiDelay4second","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","button","width","backgroundColor","buttonActive","CategoryButton","observer","Button","value","setCategory","text","root","margin","rootRow","container","categories","border","flexDirection","categoriesRow","Category","categoriesButton","el","Paper","ButtonGroup","cursor","marginLeft","flex","divider","label","top","left","fontSize","opacity","iconButton","AnimeSearchInput","useState","setTextInput","onSubmit","preventDefault","startSearch","setActiveCategory","InputBase","onChange","target","placeholder","inputProps","aria-label","media","borderRadius","fav","CardSmall","img","textDescription","Card","CardMedia","image","title","Box","useStyle","textWrapper","justifyContent","overflow","padding","textOverflow","subtitle","onlyTitle","TextBlock","description","gutterBottom","CardContent","CardSmallContainer","name","image_url","style","synopsis","layoutStore","setContent","toggleActiveView","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","cardList","maxWidth","contentWrapper","maxHeight","header","float","textAlign","fab","minWidth","minHeight","Content","prefixTitle","prefixSubtitle","favoriteIcon","smUp","Fab","setFavorite","alt","src","Placeholder","ContentContainer","alternative_names","SmsFailedOutlined","MobPanel","SwipeableDrawer","anchor","open","onClose","onOpen","backdrop","loader","zIndex","App","CssBaseline","Backdrop","CircularProgress","smDown","xsDown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a471d04.chunk.js","sourcesContent":["import { makeAutoObservable, toJS } from \"mobx\";\nimport { CategoriesType, ActiveViewType } from \"./types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  \n  activeView: ActiveViewType = \"results\";\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView:CategoriesType = \"anime\";\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\n\n  toggleActiveView(activeView: ActiveViewType) {\n    this.activeView = activeView;\n  }\n}\n\nexport default new LayoutStore();\n","import { makeAutoObservable } from \"mobx\";\nimport axios from \"axios\";\nimport { toJS } from \"mobx\";\nimport { animeData } from \"./Category/anime\";\nimport { naruto } from \"./Category/q=Naruto\";\nimport { CardType, CategoriesType, IResponse } from \"./types\";\nimport LayoutStore from \"./LayoutStore\";\n\n\nclass store {\n  textInput = \"\";\n  action = \"search\";\n  category: CategoriesType = \"anime\";\n  content: CardType | null = null;\n  data: CardType[] = [];\n  favorite: CardType[] = [];\n  canIStartSearch = true;\n  loading = false;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.startProgram();\n  }\n\n  startProgram() {\n    let locStorage = localStorage.getItem(\"favoriteArr\");\n    if (locStorage !== null) {\n      this.favorite = JSON.parse(locStorage);\n    }\n    console.log(toJS(this.favorite));\n  }\n\n  setTextInput(input: string) {\n    this.textInput = input;\n    console.log(this.textInput);\n  }\n\n  setCategory(select: CategoriesType) {\n    this.content = null;\n    this.data = [];\n    if (select === \"favorite\") {\n      this.data = this.favorite;\n      LayoutStore.categoryView = \"favorite\";\n    }\n    this.category = select;\n    console.log(this.category);\n  }\n\n  setContent(content: CardType) {\n    this.content = content;\n    console.log(toJS(this.content));\n  }\n\n  setFavorite() {\n    if (this.content === null) return;\n    //todo тут лучше использовать метод findIndex\n    let pos = this.favorite\n      .map(function(e) {\n        return e.mal_id;\n      })\n      .indexOf(this.content.mal_id);\n    //let indexOfCheck2 = this.favorite.filter(item => item.mal_id !== this.content.mal_id)\n\n    //todo ts ignore тут не нужен, все ж и без него работает\n\n    // @ts-ignore\n    if (pos !== -1 || pos === 0) {\n      this.content.isFavorite = false;\n      this.favorite.splice(pos, 1);\n    } else {\n      this.content.isFavorite = true;\n      this.favorite.unshift(this.content);\n    }\n    localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite));\n  }\n\n\n  apiDelay4second() {\n    setTimeout(() => {\n      this.canIStartSearch = true;\n    }, 4000);\n  }\n\n\n  async startSearch(textInput: string) {\n    console.log(\"Кнопка нажата\");\n    if (this.category === \"favorite\") {\n      return;\n    }\n    if (!this.canIStartSearch) return;\n    this.loading = true;\n\n\n    await axios\n      .get<IResponse>(\n        `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=5&page=1`\n      )\n      .then((res) => {\n        res.data.results.forEach((e) => {\n          console.log(e);\n          this.favorite\n            .map((event) => {\n              return event.mal_id;\n            })\n            .includes(e.mal_id)\n            ? (e.isFavorite = true)\n            : (e.isFavorite = false);\n        });\n        this.data = res.data.results;\n        console.log(toJS(this.data));\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        setTimeout(() => {\n          this.loading = false;\n        }, 500);\n      });\n    console.log(\"ответ получен\");\n    this.canIStartSearch = false;\n    this.apiDelay4second();\n  }\n}\n\nexport default new store();\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"64px\",\n    display: \"flex\",\n    background: \"rgba(130, 188, 255, 1)\",\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position={\"static\"}\n      className={classes.wrapper}\n      color={\"transparent\"}\n      elevation={0}\n    >\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\">\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { CategoryButton } from \"./CategoryButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: \"linear-gradient(246.82deg, #FFCADC 0%, #C8FFFD 58.33%)\",\n    height: \"calc(100vh - 96px)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n      </ButtonGroup>\n    </Paper>\n  );\n});\n","import React, {useState} from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport store from \"../../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { animeData } from \"../../../store/Category/anime\";\nimport { naruto } from \"../../../store/Category/q=Naruto\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport { Box, CircularProgress, Typography } from \"@material-ui/core\";\nimport { categories } from \"../../Category/Category\";\n\n\nconst useStyles = makeStyles({\n    root: {\n      display: \"flex\",\n      position: \"relative\",\n      width: 244,\n      height: 64,\n      cursor: \"pointer\",\n      margin: \"8px auto\",\n    },\n    input: {\n      marginLeft: 2,\n      flex: 1,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    label: {\n      position: \"absolute\",\n      top: 2,\n      left: 8,\n      fontSize: 10,\n      opacity: 0.7,\n    },\n\n    iconButton: {},\n  });\n\nexport const AnimeSearchInput = observer(() => {\n  const classes = useStyles();\n  const [textInput, setTextInput] = useState('')\n  return (\n    <Paper  \n    component=\"form\" \n    onSubmit = {(e) => { \n      e.preventDefault();\n      store.startSearch(textInput);\n      LayoutStore.setActiveCategory();\n    }} \n    className={classes.root}>\n      <Typography className={classes.label}>\n        {categories.map((el) => (el.value === store.category ? el.text : null))}\n      </Typography>\n      <InputBase\n        value={textInput}\n        onChange={(e) => {\n          setTextInput(e.target.value)\n        }}\n        className={classes.input}\n        //todo а если не аниме?\n        placeholder=\"Start searching Anime\"\n        inputProps={{ \"aria-label\": \"search Anime\" }}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={() => {\n          store.startSearch(textInput);\n          LayoutStore.setActiveCategory();\n          // store.category === 'anime' ? store.startFakeSearch(animeData.results) : store.category === 'character' ? store.startFakeSearch(naruto.results) : store.startFakeSearch(null)\n        }}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n});\n","import React, {ReactNode} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Grid, Fab, Box} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {observer} from \"mobx-react-lite\";\nimport store from \"../../../store/store\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport {CardType} from \"../../../store/types\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        position: \"relative\",\n        width: 244,\n        background: \"rgba(255,255,255,0.5)\",\n        // minWidth: 250,\n        height: 64,\n        cursor: \"pointer\",\n        margin: \"8px auto\",\n    },\n    media: {\n        border: \"1px solid rgba(255,255,255,0.8)\",\n        width: 56,\n        height: 56,\n        borderRadius: \"100%\",\n        margin: 4,\n    },\n\n\n    fav: {\n        width: 56,\n        height: 56,\n    },\n\n});\n\ninterface ICardSmall {\n    textDescription: ReactNode\n    img: string\n    favorite: JSX.Element | null\n\n    onClick: ()=>void\n}\n\nexport const CardSmall = observer(\n    ({\n         img,  favorite, textDescription, onClick\n     }: ICardSmall) => {\n        const classes = useStyles();\n\n\n        return (\n            <Card\n                className={classes.root}\n                onClick={onClick}\n            >\n                <CardMedia\n                    className={classes.media}\n                    image={img}\n                    title=\"Contemplative Reptile\"\n                />\n                {textDescription}\n                <Box className={classes.fav}>{favorite}</Box>\n            </Card>\n        );\n    }\n);\n","import React, {ReactNode} from 'react';\nimport {CardContentTypeMap, makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {OverridableComponent} from \"@material-ui/core/OverridableComponent\";\nimport {CategoriesType} from \"../../../store/types\";\n\ninterface TextBlockProp {\n    category: CategoriesType\n    title?: string\n    description?: string\n}\n\nconst useStyle = makeStyles({\n    textWrapper: {\n        width: 144,\n        height: 64,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        overflow: \"hidden\",\n        padding: 0,\n    },\n    title: {\n        width: 144,\n        height: 28,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: \"0 4px\",\n    },\n    subtitle: {\n        width: 144,\n        height: 36,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: \"0 4px\",\n    },\n    onlyTitle: {\n        width: 164,\n        height: 64,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: \"0 4px\",\n    },\n})\nexport const TextBlock = ({category, title,description}: TextBlockProp) => {\n    const classes = useStyle()\n    const textDescription = category === \"anime\" ? (\n            <>\n                <Typography\n                    gutterBottom\n                    variant=\"button\"\n                    component=\"h2\"\n                    className={classes.title}\n                >\n                    {title}\n                </Typography>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    className={classes.subtitle}\n                >\n                    {description}\n                </Typography>\n            </>\n        ) : (\n            <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.onlyTitle}\n            >\n                {title}\n            </Typography>\n        );\n    const t = <CardContent/>\n    return (<CardContent className={classes.textWrapper}>{textDescription}</CardContent>\n\n\n    );\n}\n;\n\n","import React from 'react';\nimport {CardSmall} from \"./CardSmall\";\nimport {CardType} from \"../../../store/types\";\nimport {TextBlock} from \"./TextBlock\";\nimport layoutStore from \"../../../store/LayoutStore\";\nimport store from \"../../../store/store\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LayoutStore from \"../../../store/LayoutStore\";\n\n\ninterface CardSmallContainerProp {\n    data: CardType\n\n}\n\nfunction TextDescription() {\n    return null;\n}\n\nexport const CardSmallContainer = ({data}: CardSmallContainerProp) => {\n    const title = data.title || data.name\n    const img = data.image_url\n    const favorite = store.category !== \"favorite\" && data.isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : null\n    const textDescription = <TextBlock description={data.synopsis} category={layoutStore.categoryView} title={title}/>\n    const onClick = () => {\n        store.setContent(data);\n        LayoutStore.toggleActiveView(\"content\");\n    }\n    return (\n        <CardSmall key={data.mal_id} textDescription={textDescription} img={img} favorite={favorite} onClick={onClick}/>\n    );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { CardSmall } from \"./CardSmall/CardSmall\";\nimport { AnimeSearchInput } from \"./input/AnimeSearchInput\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { categories } from \"../Category/Category\";\nimport {CardSmallContainer} from \"./CardSmall/CardSmallContainer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"280px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 8,\n    height: \"calc(100vh - 64px - 32px)\",\n    background: \"linear-gradient(113.18deg, #FFCADC 0%, #C8FFFD 58.33%)\",\n  },\n  cardsList: {\n    position: \"relative\",\n    flexGrow: 1,\n    width: \"260px\",\n  },\n  cardsListScroll: {\n    position: \"absolute\",\n    height: \"calc(100vh - 64px - 128px)\",\n    width: \"260px\",\n    overflowY: \"auto\",\n  },\n}));\n\nexport const Results = observer(() => {\n  const classes = useStyles();\n  //todo если нет поиска, то надо показывать всё подряд\n  const cardList =\n    store.data === null ? (\n      <div>Введите данные</div>\n    ) : (\n      store.data.map(el => {\n        return (\n          // <CardSmall\n          //   key={Math.random() + item.mal_id}\n          //   img={item.image_url}\n          //   title={item.title || item.name}\n          //   name={item.name}\n          //   synopsis={item.synopsis}\n          //   alternative_names={item.alternative_names}\n          //   category={item.synopsis ? \"anime\" : \"character\"}\n          //   isFavorite={item.isFavorite}\n          //   card={item}\n          // />\n            <CardSmallContainer data={el}/>\n        );\n      })\n    );\n  return (\n    <Paper className={classes.root}>\n      <Box className={classes.cardsList}>\n        <AnimeSearchInput />\n\n        <Box>\n          {categories.map((el) =>\n            el.value === LayoutStore.categoryView ? el.text : null\n          )}\n        </Box>\n        <Box className={classes.cardsListScroll}>{cardList}</Box>\n      </Box>\n    </Paper>\n  );\n});\n","import React from \"react\";\nimport {\n  Card,\n  Fab,\n  makeStyles,\n  Grid,\n  Box,\n  colors,\n  Paper,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Hidden} from \"@material-ui/core\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { CategoriesType } from \"../../store/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    maxHeight: \"calc(100% - 32px)\",\n    overflowY: \"auto\",\n  },\n  header: {\n    display: \"flex\",\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n    width: \"100%\",\n    padding: 4,\n    alignItems: \"center\",\n  },\n  img: {\n    height: \"300px\",\n    float: \"left\",\n    margin: 8,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\",\n    textOverflow: \"ellipsis\",\n  },\n  subtitle: {\n    width: \"100%\",\n  },\n  fab: {\n    minWidth: 40,\n    minHeight: 40,\n    maxWidth: 40,\n    maxHeight: 40,\n    margin: 4,\n  },\n}));\n\ninterface IContent {\n  title?: string;\n  prefixTitle: string;\n  subtitle?: string | string[];\n  prefixSubtitle: string;\n  favoriteIcon: JSX.Element;\n  img?: string;\n}\n\nexport const Content = observer(\n  ({\n    title,\n    prefixTitle,\n    subtitle,\n    prefixSubtitle,\n    favoriteIcon,\n    img,\n  }: IContent) => {\n    const classes = useStyles();\n    return (\n      <Paper className={classes.root}>\n        <Box className={classes.contentWrapper}>\n          <Paper className={classes.header}>\n            <Hidden mdUp smUp> \n                <Fab\n                  className={classes.fab}\n                  color=\"primary\"\n                  onClick={() => { \n                    LayoutStore.toggleActiveView(\"results\");\n                  }}\n                >\n                  <ArrowBackIcon />\n                </Fab>\n            </Hidden>\n                <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n                  {favoriteIcon}\n                </Fab>\n\n            <Typography\n              className={classes.title}\n              variant={\"h4\"}\n              component={\"h2\"}\n            >\n              {title}\n            </Typography>\n          </Paper>\n          <Typography\n            className={classes.subtitle}\n            variant={\"body1\"}\n            component={\"p\"}\n          >\n            <img className={classes.img} alt={\"#\"} src={img} />\n            {prefixTitle}: {title} <br />\n            {prefixSubtitle}: {subtitle}\n          </Typography>\n        </Box>\n      </Paper>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root}></Box>;\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { SmsFailedOutlined } from \"@material-ui/icons\";\nimport { Box } from \"@material-ui/core\";\nimport { Placeholder } from \"./Placeholder\";\n\nexport const ContentContainer = observer(() => {\n  if (store.content === null) {\n  }\n  const title = () => {\n    if (store.content === null) return;\n    return store.content.title || store.content.name;\n  };\n  const prefixTitle = store.category === \"anime\" ? \"Title\" : \"Name\";\n  const subtitle = () => {\n    if (store.content === null) return;\n    return store.content.synopsis || store.content.alternative_names;\n  };\n  const prefixSubtitle = store.category === \"anime\" ? \"Description\" : \"AltName\";\n  const img = () => {\n    if (store.content === null) return;\n    return store.content.image_url;\n  };\n  const favorite = () => {\n    if (store.content === null) return <SmsFailedOutlined />;\n    return store.content.isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />;\n  };\n  return (\n    <>\n      {store.content === null ? (\n        <Placeholder />\n      ) : (\n        <Content\n          title={title()}\n          prefixTitle={prefixTitle}\n          subtitle={subtitle()}\n          prefixSubtitle={prefixSubtitle}\n          img={img()}\n          favoriteIcon={favorite()}\n        />\n      )}\n    </>\n  );\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"./Category/Category\";\nimport { Results } from \"./Results/Results\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport store from \"./store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  CssBaseline,\n  makeStyles,\n  Grid,\n  colors,\n  Hidden,\n  CircularProgress,\n  Backdrop\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Content } from \"./components/Content/Content\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/MobPanel\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100vw\",\n    height: \"100vh\",\n    background: \"linear-gradient(315deg, #FFDEE9 0%, #B5FFFC 100%)\",\n    flexDirection: \"column\"\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: \"transparent\"\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\"\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\"\n  }\n});\nconst App = observer(() => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Appbar />\n      {store.loading ? (\n        <Box className={classes.loader}>\n          <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress />\n          </Backdrop>{\" \"}\n        </Box>\n      ) : null}\n      <Hidden smDown>\n        <MobPanel />\n      </Hidden>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <Results />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.activeView === \"content\" ? (\n              <ContentContainer />\n            ) : (\n              <Results />\n            )}\n          </Box>\n        </Hidden>\n        <Hidden xsDown>\n          <Box className={classes.contentWrapper}>\n            <ContentContainer />\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n});\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}