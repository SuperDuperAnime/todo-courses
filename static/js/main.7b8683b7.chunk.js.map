{"version":3,"sources":["store/LayoutStore.ts","store/ErrorStore.ts","store/store.ts","components/AppBar/AppBar.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Results/input/AnimeSearchInput.tsx","components/Results/CardSmall/CardSmall.tsx","components/Results/CardSmall/TextBlock.tsx","components/Results/CardSmall/CardSmallContainer.tsx","components/Results/Results.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/ContentContainer.tsx","components/MobPanel.tsx","components/ErrorAlert.tsx","App.tsx","index.tsx"],"names":["activeView","mobPanel","categoryView","makeAutoObservable","this","isOpen","console","log","store","category","errorStatus","errorText","isOpenError","open","text","status","error","toggleAlertError","changeStatusError","response","changeTextError","data","message","action","content","topAnime","topCharacter","favorite","canIStartSearch","loading","startProgram","getTop","then","LayoutStore","setCategoriesView","locStorage","localStorage","getItem","JSON","parse","toJS","select","pos","findIndex","item","mal_id","isFavorite","splice","unshift","a","axios","get","res","top","catch","setTimeout","textInput","results","forEach","e","map","event","includes","ErrorStore","catchingErrors","apiDelay4second","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","button","width","backgroundColor","buttonActive","CategoryButton","observer","Button","value","setCategory","root","margin","rootRow","container","categories","border","flexDirection","categoriesRow","Category","categoriesButton","el","Paper","ButtonGroup","cursor","input","marginLeft","flex","divider","label","left","fontSize","opacity","iconButton","AnimeSearchInput","useState","setTextInput","validator","length","startSearch","setActiveCategory","onSubmit","preventDefault","InputBase","onChange","target","placeholder","inputProps","aria-label","media","borderRadius","fav","CardSmall","img","textDescription","Card","CardMedia","image","title","Box","useStyle","textWrapper","justifyContent","overflow","padding","textOverflow","subtitle","onlyTitle","TextBlock","description","gutterBottom","CardContent","CardSmallContainer","name","image_url","style","synopsis","layoutStore","setContent","toggleActiveView","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","cardList","maxWidth","contentWrapper","maxHeight","header","float","textAlign","fab","minWidth","minHeight","Content","prefixTitle","prefixSubtitle","favoriteIcon","smUp","Fab","setFavorite","alt","src","Placeholder","ContentContainer","alternative_names","SmsFailedOutlined","MobPanel","SwipeableDrawer","anchor","onClose","onOpen","ErrorAlert","children","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","backdrop","loader","zIndex","App","CssBaseline","Backdrop","CircularProgress","smDown","xsDown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b8683b7.chunk.js","sourcesContent":["import { makeAutoObservable, toJS } from \"mobx\";\nimport {CategoriesType, ActiveViewType, CategoriesViewType} from \"./types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  \n  activeView: ActiveViewType = \"results\";\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView:CategoriesViewType= \"anime\";\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n    console.log(this.mobPanel)\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\nsetCategoriesView(category: CategoriesViewType){\n    this.categoryView = category\n}\n  toggleActiveView(activeView: ActiveViewType) {\n    this.activeView = activeView;\n  }\n}\n\nexport default new LayoutStore();\n","import {makeAutoObservable} from \"mobx\";\n\nclass ErrorStore {\n    errorStatus: number = 0\n    errorText: string = ''\n    isOpenError = false\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    toggleAlertError(open: boolean) {\n        this.isOpenError = open\n    }\n\n    changeTextError(text: string) {\n        this.errorText = text\n    }\n\n    changeStatusError(status: number) {\n        this.errorStatus = status\n    }\n\n    catchingErrors(error: any) {\n\n        this.toggleAlertError(true)\n        this.changeStatusError(error.response.status)\n        this.changeTextError(error.response.data.message)\n    }\n}\n\nexport default new ErrorStore()","import {makeAutoObservable} from \"mobx\";\nimport axios from \"axios\";\nimport {toJS} from \"mobx\";\nimport {animeData} from \"./Category/anime\";\nimport {naruto} from \"./Category/q=Naruto\";\nimport {CardType, CategoriesType, IResponse, IResponseTop} from \"./types\";\nimport LayoutStore from \"./LayoutStore\";\nimport ErrorStore from \"./ErrorStore\";\n\n\nclass store {\n\n\n    action = \"search\";\n    category: CategoriesType = \"anime\";\n    content: CardType | null = null;\n    data: CardType[] = [];\n    topAnime: CardType[] = [];\n    topCharacter: CardType[] = [];\n    favorite: CardType[] = [];\n    canIStartSearch = true;\n    loading = false;\n\n\n    constructor() {\n        makeAutoObservable(this);\n        this.startProgram();\n        this.getTop().then(() => {\n            this.data = this.topAnime\n            LayoutStore.setCategoriesView(\"top\")\n        })\n\n    }\n\n\n    startProgram() {\n        let locStorage = localStorage.getItem(\"favoriteArr\");\n        if (locStorage !== null) {\n            this.favorite = JSON.parse(locStorage);\n        }\n        console.log(toJS(this.favorite));\n    }\n\n\n\n    setCategory(select: CategoriesType) {\n        this.content = null;\n        this.data = [];\n        switch (select) {\n            case \"character\":\n                this.data = this.topCharacter\n                LayoutStore.categoryView = \"top\";\n                break\n            case \"anime\":\n                this.data = this.topAnime\n                LayoutStore.categoryView = \"top\";\n                break\n            case \"favorite\":\n                this.data = this.favorite;\n                LayoutStore.categoryView = \"favorite\";\n                break\n            default:\n                console.error(select)\n        }\n        this.category = select;\n        console.log(this.category);\n\n  }\n\n  setContent(content: CardType) {\n    this.content = content;\n    console.log(toJS(this.content));\n  }\n    setFavorite() {\n        if (this.content === null) return;\n\n        let pos = this.favorite.findIndex(item => item.mal_id == this.content?.mal_id)\n\n        if (pos !== -1) {\n            this.content.isFavorite = false;\n            this.favorite.splice(pos, 1);\n        } else {\n            this.content.isFavorite = true;\n            this.favorite.unshift(this.content);\n\n        }\n    }\n\n    async getTop() {\n        this.loading = true;\n        await axios.get<IResponseTop>(`https://api.jikan.moe/v3/top/anime`)\n            .then((res) => {\n                this.topAnime = res.data.top\n            })\n            .catch((error) => console.log(error.response))\n            .then(() => {\n                this.loading = false;\n            })\n        setTimeout(() => {\n            axios.get<IResponseTop>(`https://api.jikan.moe/v3/top/characters`)\n                .then(res => this.topCharacter = res.data.top)\n                .catch((error) => console.log(error.response))\n        }, 2000)\n    }\n\n\n\n    apiDelay4second() {\n        setTimeout(() => {\n            this.canIStartSearch = true;\n        }, 4000);\n    }\n\n\n    async startSearch(textInput: string) {\n        console.log(\"Кнопка нажата\");\n        if (this.category === \"favorite\") {\n            return;\n        }\n        if (!this.canIStartSearch) return\n        this.loading = true;\n\n\n        await axios\n            .get<IResponse>(\n                `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=5&page=1`\n            )\n            .then((res) => {\n                res.data.results.forEach((e) => {\n                    console.log(e);\n                    this.favorite\n                        .map((event) => {\n                            return event.mal_id;\n                        })\n                        .includes(e.mal_id)\n                        ? (e.isFavorite = true)\n                        : (e.isFavorite = false);\n                });\n                this.data = res.data.results;\n                console.log(toJS(this.data));\n            })\n            .catch((error) => {\n               ErrorStore.catchingErrors(error)\n                console.log(error)\n\n            })\n            .then(() => {\n                setTimeout(() => {\n                    this.loading = false;\n                }, 500);\n            });\n        console.log(\"ответ получен\");\n        this.canIStartSearch = false;\n        this.apiDelay4second();\n    }\n}\n\nexport default new store();\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"64px\",\n    display: \"flex\",\n    background: \"rgba(130, 188, 255, 1)\",\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position={\"static\"}\n      className={classes.wrapper}\n      color={\"transparent\"}\n      elevation={0}\n    >\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\" >\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { CategoryButton } from \"./CategoryButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: \"linear-gradient(246.82deg, #FFCADC 0%, #C8FFFD 58.33%)\",\n    height: \"calc(100vh - 96px)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n      </ButtonGroup>\n    </Paper>\n  );\n});\n","import React, {useState} from \"react\";\nimport {makeStyles, Theme, createStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport store from \"../../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {animeData} from \"../../../store/Category/anime\";\nimport {naruto} from \"../../../store/Category/q=Naruto\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport {Box, CircularProgress, Snackbar, Typography} from \"@material-ui/core\";\nimport {categories} from \"../../Category/Category\";\nimport {Alert} from \"@material-ui/lab\";\nimport ErrorStore from \"../../../store/ErrorStore\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        position: \"relative\",\n        width: 244,\n        height: 64,\n        cursor: \"pointer\",\n        margin: \"8px auto\",\n    },\n    input: {\n        marginLeft: 2,\n        flex: 1,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    label: {\n        position: \"absolute\",\n        top: 2,\n        left: 8,\n        fontSize: 10,\n        opacity: 0.7,\n    },\n\n    iconButton: {},\n});\n\nexport const AnimeSearchInput = observer(() => {\n    const classes = useStyles();\n    const [textInput, setTextInput] = useState('')\n    const validator = () => {\nif(textInput.length<=3){\n    ErrorStore.changeTextError('Введите больше 3 букв')\n    ErrorStore.toggleAlertError(true)\n    return\n} else {\n    store.startSearch(textInput);\n    LayoutStore.setActiveCategory();\n}\n    }\n    return (\n        <Paper\n            component=\"form\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                validator()\n            }}\n            className={classes.root}>\n            <Typography className={classes.label}>\n                {categories.map((el) => (el.value === store.category ? el.text : null))}\n            </Typography>\n            <InputBase\n                value={textInput}\n                onChange={(e) => {\n                    setTextInput(e.target.value)\n                }}\n                className={classes.input}\n                //todo а если не аниме?\n                placeholder=\"Start searching Anime\"\n                inputProps={{\"aria-label\": \"search Anime\"}}\n            />\n\n            <IconButton\n                className={classes.iconButton}\n                aria-label=\"search\"\n                onClick={validator}\n            >\n                <SearchIcon/>\n            </IconButton>\n        </Paper>\n    );\n});\n","import React, {ReactNode} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Grid, Fab, Box} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {observer} from \"mobx-react-lite\";\nimport store from \"../../../store/store\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport {CardType} from \"../../../store/types\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        position: \"relative\",\n        width: 244,\n        background: \"rgba(255,255,255,0.5)\",\n        // minWidth: 250,\n        height: 64,\n        cursor: \"pointer\",\n        margin: \"8px auto\",\n    },\n    media: {\n        border: \"1px solid rgba(255,255,255,0.8)\",\n        width: 56,\n        height: 56,\n        borderRadius: \"100%\",\n        margin: 4,\n    },\n\n\n    fav: {\n        width: 56,\n        height: 56,\n    },\n\n});\n\ninterface ICardSmall {\n    textDescription: ReactNode\n    img: string\n    favorite: JSX.Element | null\n\n    onClick: ()=>void\n}\n\nexport const CardSmall = observer(\n    ({\n         img,  favorite, textDescription, onClick\n     }: ICardSmall) => {\n        const classes = useStyles();\n\n\n        return (\n            <Card\n                className={classes.root}\n                onClick={onClick}\n            >\n                <CardMedia\n                    className={classes.media}\n                    image={img}\n                    title=\"Contemplative Reptile\"\n                />\n                {textDescription}\n                <Box className={classes.fav}>{favorite}</Box>\n            </Card>\n        );\n    }\n);\n","import React, {ReactNode} from 'react';\nimport {CardContentTypeMap, makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {OverridableComponent} from \"@material-ui/core/OverridableComponent\";\nimport {CategoriesType, CategoriesViewType} from \"../../../store/types\";\n\ninterface TextBlockProp {\n    category: CategoriesViewType\n    title?: string\n    description?: string\n}\n\nconst useStyle = makeStyles({\n    textWrapper: {\n        width: 144,\n        height: 64,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        overflow: \"hidden\",\n        padding: 0,\n    },\n    title: {\n        width: 144,\n        height: 28,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: \"0 4px\",\n    },\n    subtitle: {\n        width: 144,\n        height: 36,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: \"0 4px\",\n    },\n    onlyTitle: {\n        width: 164,\n        height: 64,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: \"0 4px\",\n    },\n})\nexport const TextBlock = ({category, title,description}: TextBlockProp) => {\n    const classes = useStyle()\n    const textDescription = category === \"anime\" ? (\n            <>\n                <Typography\n                    gutterBottom\n                    variant=\"button\"\n                    component=\"h2\"\n                    className={classes.title}\n                >\n                    {title}\n                </Typography>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    className={classes.subtitle}\n                >\n                    {description}\n                </Typography>\n            </>\n        ) : (\n            <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.onlyTitle}\n            >\n                {title}\n            </Typography>\n        );\n    const t = <CardContent/>\n    return (<CardContent className={classes.textWrapper}>{textDescription}</CardContent>\n\n\n    );\n}\n;\n\n","import React from 'react';\nimport {CardSmall} from \"./CardSmall\";\nimport {CardType} from \"../../../store/types\";\nimport {TextBlock} from \"./TextBlock\";\nimport layoutStore from \"../../../store/LayoutStore\";\nimport store from \"../../../store/store\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LayoutStore from \"../../../store/LayoutStore\";\n\n\ninterface CardSmallContainerProp {\n    data: CardType\n\n}\n\nfunction TextDescription() {\n    return null;\n}\n\nexport const CardSmallContainer = ({data}: CardSmallContainerProp) => {\n    const title = data.title || data.name\n    const img = data.image_url\n    const favorite = store.category !== \"favorite\" && data.isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : null\n    const textDescription = <TextBlock description={data.synopsis} category={layoutStore.categoryView} title={title}/>\n    const onClick = () => {\n        store.setContent(data);\n        LayoutStore.toggleActiveView(\"content\");\n    }\n    return (\n        <CardSmall key={data.mal_id} textDescription={textDescription} img={img} favorite={favorite} onClick={onClick}/>\n    );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {\n    IconButton,\n    Input,\n    makeStyles,\n    Paper,\n    Box,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport {CardSmall} from \"./CardSmall/CardSmall\";\nimport {AnimeSearchInput} from \"./input/AnimeSearchInput\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport {categories} from \"../Category/Category\";\nimport {CardSmallContainer} from \"./CardSmall/CardSmallContainer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"280px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: 8,\n        height: \"calc(100vh - 64px - 32px)\",\n        background: \"linear-gradient(113.18deg, #FFCADC 0%, #C8FFFD 58.33%)\",\n    },\n    cardsList: {\n        position: \"relative\",\n        flexGrow: 1,\n        width: \"260px\",\n    },\n    cardsListScroll: {\n        position: \"absolute\",\n        height: \"calc(100vh - 64px - 128px)\",\n        width: \"260px\",\n        overflowY: \"auto\",\n    },\n}));\n\nexport const Results = observer(() => {\n    const classes = useStyles();\n    //todo если нет поиска, то надо показывать всё подряд\n    const cardList =\n        store.data === null ? (\n            <div>Введите данные</div>\n        ) : (\n            store.data.map(el => {\n                return (\n                    // <CardSmall\n                    //   key={Math.random() + item.mal_id}\n                    //   img={item.image_url}\n                    //   title={item.title || item.name}\n                    //   name={item.name}\n                    //   synopsis={item.synopsis}\n                    //   alternative_names={item.alternative_names}\n                    //   category={item.synopsis ? \"anime\" : \"character\"}\n                    //   isFavorite={item.isFavorite}\n                    //   card={item}\n                    // />\n                    <CardSmallContainer key={el.mal_id} data={el}/>\n                );\n            })\n        );\n   let text = 'Top'\n    categories.forEach(el => el.value === LayoutStore.categoryView ?  text= el.text : null)\n    return (\n        <Paper className={classes.root}>\n            <Box className={classes.cardsList}>\n                <AnimeSearchInput/>\n\n                <Box>\n                    {text}\n                </Box>\n                <Box className={classes.cardsListScroll}>{cardList}</Box>\n            </Box>\n        </Paper>\n    );\n});\n","import React from \"react\";\nimport {\n  Card,\n  Fab,\n  makeStyles,\n  Grid,\n  Box,\n  colors,\n  Paper,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Hidden} from \"@material-ui/core\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { CategoriesType } from \"../../store/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    maxHeight: \"calc(100% - 32px)\",\n    overflowY: \"auto\",\n  },\n  header: {\n    display: \"flex\",\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n    width: \"100%\",\n    padding: 4,\n    alignItems: \"center\",\n  },\n  img: {\n    height: \"300px\",\n    float: \"left\",\n    margin: 8,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\",\n    textOverflow: \"ellipsis\",\n  },\n  subtitle: {\n    width: \"100%\",\n  },\n  fab: {\n    minWidth: 40,\n    minHeight: 40,\n    maxWidth: 40,\n    maxHeight: 40,\n    margin: 4,\n  },\n}));\n\ninterface IContent {\n  title?: string;\n  prefixTitle: string;\n  subtitle?: string | string[];\n  prefixSubtitle: string;\n  favoriteIcon: JSX.Element;\n  img?: string;\n}\n\nexport const Content = observer(\n  ({\n    title,\n    prefixTitle,\n    subtitle,\n    prefixSubtitle,\n    favoriteIcon,\n    img,\n  }: IContent) => {\n    const classes = useStyles();\n    return (\n      <Paper className={classes.root}>\n        <Box className={classes.contentWrapper}>\n          <Paper className={classes.header}>\n            <Hidden mdUp smUp> \n                <Fab\n                  className={classes.fab}\n                  color=\"primary\"\n                  onClick={() => { \n                    LayoutStore.toggleActiveView(\"results\");\n                  }}\n                >\n                  <ArrowBackIcon />\n                </Fab>\n            </Hidden>\n                <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n                  {favoriteIcon}\n                </Fab>\n\n            <Typography\n              className={classes.title}\n              variant={\"h4\"}\n              component={\"h2\"}\n            >\n              {title}\n            </Typography>\n          </Paper>\n          <Typography\n            className={classes.subtitle}\n            variant={\"body1\"}\n            component={\"p\"}\n          >\n            <img className={classes.img} alt={\"#\"} src={img} />\n            {prefixTitle}: {title} <br />\n            {prefixSubtitle}: {subtitle}\n          </Typography>\n        </Box>\n      </Paper>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root}></Box>;\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { SmsFailedOutlined } from \"@material-ui/icons\";\nimport { Box } from \"@material-ui/core\";\nimport { Placeholder } from \"./Placeholder\";\n\nexport const ContentContainer = observer(() => {\n  if (store.content === null) {\n  }\n  const title = () => {\n    if (store.content === null) return;\n    return store.content.title || store.content.name;\n  };\n  const prefixTitle = store.category === \"anime\" ? \"Title\" : \"Name\";\n  const subtitle = () => {\n    if (store.content === null) return;\n    return store.content.synopsis || store.content.alternative_names;\n  };\n  const prefixSubtitle = store.category === \"anime\" ? \"Description\" : \"AltName\";\n  const img = () => {\n    if (store.content === null) return;\n    return store.content.image_url;\n  };\n  const favorite = () => {\n    if (store.content === null) return <SmsFailedOutlined />;\n    return store.content.isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />;\n  };\n  return (\n    <>\n      {store.content === null ? (\n        <Placeholder />\n      ) : (\n        <Content\n          title={title()}\n          prefixTitle={prefixTitle}\n          subtitle={subtitle()}\n          prefixSubtitle={prefixSubtitle}\n          img={img()}\n          favoriteIcon={favorite()}\n        />\n      )}\n    </>\n  );\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"./Category/Category\";\nimport { Results } from \"./Results/Results\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React from 'react';\nimport {makeStyles, Snackbar} from \"@material-ui/core\";\nimport store from \"../store/store\";\nimport {Alert} from \"@material-ui/lab\";\nimport ErrorStore from \"../store/ErrorStore\";\nimport {observer} from \"mobx-react-lite\";\nimport {toJS} from \"mobx\";\n\ninterface ErrorAlertProp {\n    children?: React.ReactNode\n}\n\nconst useStyle = makeStyles({\n    root: {},\n})\nexport const ErrorAlert = observer(({children}: ErrorAlertProp) => {\n    const classes = useStyle()\n    console.log(toJS(ErrorStore.errorText))\n    return (\n        <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={ErrorStore.isOpenError} autoHideDuration={6000} onClose={() => {\n            ErrorStore.isOpenError = false\n        }}>\n            <Alert severity=\"error\">\n                {ErrorStore.errorText}\n            </Alert>\n        </Snackbar>\n    );\n})\n","import React, { useEffect, useState } from \"react\";\nimport store from \"./store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  CssBaseline,\n  makeStyles,\n  Grid,\n  colors,\n  Hidden,\n  CircularProgress,\n  Backdrop, Snackbar\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Content } from \"./components/Content/Content\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/MobPanel\";\nimport {Alert} from \"@material-ui/lab\";\nimport {ErrorAlert} from \"./components/ErrorAlert\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100vw\",\n    height: \"100vh\",\n    background: \"linear-gradient(315deg, #FFDEE9 0%, #B5FFFC 100%)\",\n    flexDirection: \"column\"\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: \"transparent\"\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\"\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\"\n  }\n});\nconst App = observer(() => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Appbar />\n      {store.loading ? (\n        <Box className={classes.loader}>\n          <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress />\n          </Backdrop>{\" \"}\n        </Box>\n      ) : null}\n      <Hidden mdUp>\n        <MobPanel />\n      </Hidden>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <Results />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.activeView === \"content\" ? (\n              <ContentContainer />\n            ) : (\n              <Results />\n            )}\n          </Box>\n        </Hidden>\n        <Hidden xsDown>\n          <Box className={classes.contentWrapper}>\n            <ContentContainer />\n          </Box>\n        </Hidden>\n      </Container>\n     <ErrorAlert/>\n    </div>\n  );\n});\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}