{"version":3,"sources":["store/store.ts","store/layoutStore.ts","newComponents/AppBar/AppBar.tsx","newComponents/Results/CardSmall.tsx","newComponents/Category/Category.tsx","newComponents/Results/input/AnimeSearchInput.tsx","newComponents/Results/Results.tsx","newComponents/Content/Content.tsx","newComponents/Content/Placeholder.tsx","newComponents/Content/ContentContainer.tsx","newComponents/MobPanel.tsx","App.js","index.js"],"names":["textInput","action","category","content","data","favorite","canIStartSearch","makeAutoObservable","this","input","console","log","select","toJS","pos","map","e","mal_id","indexOf","isFavorite","splice","localStorage","setItem","JSON","stringify","unshift","locStorage","getItem","parse","axios","get","then","res","results","forEach","event","includes","catch","error","response","activeView","mobPanel","isOpen","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","layoutStore","toggleMobPanel","Typography","variant","component","root","width","cursor","margin","media","border","borderRadius","textWrapper","flexDirection","justifyContent","overflow","padding","title","textOverflow","subtitle","fav","onlyTitle","CardSmall","observer","img","synopsis","alternative_names","name","card","style","fontSize","text","gutterBottom","Card","store","setContent","toggleActiveView","CardMedia","image","CardContent","Box","rootRow","container","categories","categoriesRow","button","backgroundColor","buttonActive","value","Category","categoriesButton","el","Button","setCategory","Paper","ButtonGroup","createStyles","marginLeft","spacing","flex","divider","label","top","left","opacity","iconButton","AnimeSearchInput","InputBase","onChange","setTextInput","target","placeholder","inputProps","aria-label","startSearch","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","cardList","item","image_url","Math","random","maxWidth","contentWrapper","maxHeight","header","float","textAlign","fab","Content","prefixTitle","prefixSubtitle","favoriteIcon","Fab","setFavorite","alt","src","Placeholder","ContentContainer","SmsFailedOutlined","MobPanel","SwipeableDrawer","anchor","open","onClose","onOpen","direction","App","useEffect","setTimeout","apiDelay4second","startProgram","CssBaseline","smDown","xsDown","smUp","styled","div","props","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67dedc65.chunk.js","sourcesContent":["import {makeAutoObservable} from \"mobx\";\nimport axios from \"axios\";\nimport {toJS} from 'mobx'\nimport {animeData} from \"./Category/anime\";\nimport {naruto} from \"./Category/q=Naruto\";\nimport {CardType, CategoriesType, IResponse} from \"./types\";\n\nclass store {\n    textInput = ''\n    action = 'search'\n    category: CategoriesType = \"anime\"\n    content: CardType | null = null\n    data: CardType[] = []\n    favorite: CardType[] = []\n    canIStartSearch = true\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setTextInput(input: string) {\n        this.textInput = input\n        console.log(this.textInput)\n    }\n\n    setCategory(select: CategoriesType) {\n        this.content = null\n        this.data = []\n        if (select === 'favorite') {\n            this.data = this.favorite || null\n        }\n        this.category = select\n        console.log(this.category)\n\n    }\n\n    setContent(content: CardType) {\n        this.content = content\n        console.log(toJS(this.content))\n    }\n\n\n    setFavorite() {\n        if (this.content === null) return\n        let pos = this.favorite.map(function (e) {\n            return e.mal_id;\n        }).indexOf(this.content.mal_id)\n        //let indexOfCheck2 = this.favorite.filter(item => item.mal_id !== this.content.mal_id)\n\n        // @ts-ignore\n        if (pos !== -1 || pos === 0) {\n            this.content.isFavorite = false;\n            this.favorite.splice(pos, 1)\n            localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite))\n        } else {\n            this.content.isFavorite = true;\n            this.favorite.unshift(this.content)\n            localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite))\n        }\n    }\n\n    startProgram() {\n        let locStorage = localStorage.getItem(\"favoriteArr\")\n        if (locStorage !== null) {\n            this.favorite = JSON.parse(locStorage)\n        }\n        console.log(toJS(this.favorite))\n    }\n\n\n    apiDelay4second() {\n        this.canIStartSearch = true\n    }\n\n    //\n    // startSearch(array) {\n    //     if (this.category === 'favorite') {\n    //         return\n    //     }\n    //     if (this.canIStartSearch === false) return\n    //     console.log('запрос отправлен')\n    //     this.data = array\n    //     console.log(toJS(this.data))\n    //     console.log('ответ получен')\n    //     this.canIStartSearch = false\n    // }\n\n    startSearch() {\n        if (this.category === 'favorite') {\n            return\n        }\n\n        axios.get<IResponse>(`https://api.jikan.moe/v3/${this.action}/${this.category}?q=${this.textInput}&limit=5&page=1`).then(res => {\n            res.data.results.forEach(e => {\n                console.log(e)\n                this.favorite.map(event => {\n                    return event.mal_id\n                }).includes(e.mal_id)\n                    ? e.isFavorite = true\n                    : e.isFavorite = false\n            })\n            this.data = res.data.results\n            console.log(toJS(this.data))\n        }).catch(error => console.log(error.response))\n        this.canIStartSearch = false\n    }\n}\n\nexport default new store()\n\n","import {makeAutoObservable, toJS} from \"mobx\";\nimport {CategoriesType} from \"./types\";\n\nclass layoutStore {\n    activeView = 'results'\n    mobPanel = false\n\n    constructor() {\n\t   makeAutoObservable(this)\n    }\n\n    toggleMobPanel(isOpen: boolean) {\n\t   this.mobPanel = isOpen\n    }\n\n    toggleActiveView(activeView:string) {\n\t   this.activeView = activeView\n    }\n}\n\nexport default new layoutStore()","import React, {useState} from 'react';\nimport {\n    AppBar,\n\tContainer,\n\tHidden,\n    IconButton,\n    makeStyles,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport layoutStore from \"../../store/layoutStore\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        height: '64px',\n\t   display: \"flex\",\n\t   background: \"rgba(130, 188, 255, 1)\",\n    },\n    toolbar: {}\n\n\n}))\n\nexport const Appbar = () => {\n    const classes = useStyles()\n    return (\n\t   <AppBar position={\"static\"} className={classes.wrapper} color={'transparent'} elevation={0}>\n\t\t  <Container>\n\t\t\t <Toolbar className={classes.toolbar}>\n\t\t\t\t<Hidden mdUp>\n\t\t\t\t<IconButton onClick={()=>{\n\t\t\t\tlayoutStore.toggleMobPanel(true)\n\t\t\t\t}}>\n\t\t\t\t    <MenuIcon/>\n\t\t\t\t</IconButton>\n\t\t\t\t</Hidden>\n\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t    SuperDuperAnime\n\t\t\t\t</Typography>\n\t\t\t </Toolbar>\n\t\t  </Container>\n\t   </AppBar>\n    )\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Grid, Fab, Box} from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {observer} from \"mobx-react-lite\";\nimport store from \"../../store/store\";\nimport layoutStore from \"../../store/layoutStore\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport {CardType} from \"../../store/types\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        position: \"relative\",\n        width: 244,\n        background: 'rgba(255,255,255,0.5)',\n        // minWidth: 250,\n        height: 64,\n        cursor: \"pointer\",\n        margin: \"8px auto\"\n    },\n    media: {\n        border: \"1px solid rgba(255,255,255,0.8)\",\n        width: 56,\n        height: 56,\n        borderRadius: \"100%\",\n        margin: 4\n\n    },\n    textWrapper: {\n        width: 144,\n        height: 64,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        overflow: \"hidden\",\n        padding: 0\n    },\n    title: {\n        width: 144,\n        height: 28,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: '0 4px'\n    },\n    subtitle: {\n        width: 144,\n        height: 36,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: '0 4px'\n    },\n    fav: {\n        width: 56,\n        height: 56,\n    },\n    onlyTitle: {\n        width: 164,\n        height: 64,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: '0 4px'\n    }\n});\n\n\ninterface ICardSmall {\n    img: string\n    title?: string\n    synopsis?: string\n    isFavorite?: boolean\n    alternative_names?: string []\n    name?: string\n    card: CardType\n    category: string\n}\n\nexport const CardSmall = observer(({\n                                       img,\n                                       title,\n                                       synopsis,\n                                       alternative_names,\n                                       name,\n                                       isFavorite,\n                                       card,\n                                       category\n                                   }: ICardSmall) => {\n    const classes = useStyles();\n    const favorite = isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : <FavoriteBorderIcon style={{fontSize: 54}}/>\n\n    const text = category === 'anime' ? <>\n        <Typography gutterBottom variant=\"button\" component=\"h2\" className={classes.title}>\n            {title || name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.subtitle}>\n            {synopsis || alternative_names}\n        </Typography>\n    </> : <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.onlyTitle}>\n        {title || name}\n    </Typography>\n    return (\n        <Card className={classes.root} onClick={() => {\n            store.setContent(card)\n            layoutStore.toggleActiveView('content')\n        }}>\n            <CardMedia\n                className={classes.media}\n                image={img}\n                title=\"Contemplative Reptile\"\n            />\n            <CardContent className={classes.textWrapper}>\n                {text}\n            </CardContent>\n            <Box className={classes.fav}>\n                {favorite}\n            </Box>\n\n        </Card>\n    );\n})","import React from 'react';\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, Button, ButtonGroup, Container, CssBaseline, makeStyles, Paper, } from \"@material-ui/core\";\nimport {CategoriesType} from \"../../store/types\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\twidth:\"150px\",\n\t   margin: 8,\n\t   background: 'linear-gradient(246.82deg, #FFCADC 0%, #C8FFFD 58.33%)',\n\t   height: \"calc(100vh - 96px)\"\n    },\n    rootRow: {\n        width: 280\n    },\n    container: {\n\t   display: \"flex\"\n    },\n    categories: {\n\t   display: \"flex\",\n\t   height: \"100%\",\n\t   width: \"100%\",\n\t   border: \"none\",\n\t   flexDirection: \"column\"\n\n    },\n    categoriesRow:{\n      flexDirection: \"row\",\n    },\n\n    button: {\n\t   width: \"100%\",\n\t   \"&:hover\": {\n\t\t  backgroundColor: \"rgba(0, 0, 0, .35)\"\n\t   }\n    },\n    buttonActive: {\n\t   backgroundColor: \"rgba(0, 0, 0, .35)\",\n\n    }\n\n\n}))\nexport const categories:{value: CategoriesType, text: string}[] = [\n    {value: 'favorite', text: \"Favorite\"},\n    {value: 'anime', text: \"Anime\"},\n    {value: 'character', text: \"Characters\"},\n]\nexport const Category = observer(() => {\n    const classes = useStyles()\n\n    const categoriesButton = categories.map(el => {\n\t  return <Button\n\t\t key={el.value} variant=\"outlined\"\n\t\t\t className={`${classes.button} ${store.category === el.value ? classes.buttonActive : null}`}\n\t\t\t onClick={(e) => {\n\t\t\t\tstore.setCategory(el.value)\n\t\t\t }}>{el.text}</Button>\n    })\n    return (\n\t   <Paper className={classes.root}>\n\t\t  <ButtonGroup className={classes.categories}>\n\t\t\t {categoriesButton}\n\t\t  </ButtonGroup>\n\n\n\t   </Paper>\n\n    );\n})\n\n","import React from 'react';\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport store from \"../../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {animeData} from \"../../../store/Category/anime\";\nimport {naruto} from \"../../../store/Category/q=Naruto\";\nimport layoutStore from \"../../../store/layoutStore\";\nimport {Typography} from \"@material-ui/core\";\nimport {categories} from \"../../Category/Category\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n\t   root: {\n\t\t  display: \"flex\",\n\t\t  position: \"relative\",\n\t\t  width: 244,\n\t\t  height: 64,\n\t\t  cursor: \"pointer\",\n\t\t  margin: \"8px auto\"\n\n\t   },\n\t   input: {\n\t\t  marginLeft: theme.spacing(1),\n\t\t  flex: 1,\n\t   },\n\t   divider: {\n\t\t  height: 28,\n\t\t  margin: 4,\n\t   },\n\t   label:{\n\t       position: \"absolute\",\n\t\t  top:2,\n\t\t  left:8,\n\t       fontSize:10,\n\t\t  opacity: 0.7\n\t   },\n\t   iconButton: {},\n    }),\n);\n\nexport const AnimeSearchInput = observer(() => {\n    const classes = useStyles();\n\n    return (\n\t   <Paper component=\"form\" className={classes.root}>\n\t\t  <Typography className={classes.label}>{categories.map(el => el.value === store.category ? el.text : null)}</Typography>\n\t\t  <InputBase\n\t\t\t value={store.textInput} onChange={(e) => {\n\t\t\t store.setTextInput(e.target.value)\n\n\t\t  }}\n\t\t\t className={classes.input}\n\t\t\t placeholder=\"Start searching Anime\"\n\t\t\t inputProps={{'aria-label': 'search Anime'}}\n\t\t  />\n\t\t  <IconButton className={classes.iconButton}\n\t\t\t\t    aria-label=\"search\"\n\t\t\t\t    onClick={() => {\n\t\t\t\t    \tstore.startSearch()\n\t\t\t\t\t   // store.category === 'anime' ? store.startFakeSearch(animeData.results) : store.category === 'character' ? store.startFakeSearch(naruto.results) : store.startFakeSearch(null)\n\t\t\t\t    }}>\n\t\t\t <SearchIcon/>\n\t\t  </IconButton>\n\n\t   </Paper>\n    );\n})","import React from 'react';\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {IconButton, Input, makeStyles, Paper, Box} from \"@material-ui/core\";\nimport {CardSmall} from \"./CardSmall\";\nimport {AnimeSearchInput} from \"./input/AnimeSearchInput\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t   display: \"flex\",\n\t   flexDirection: \"column\",\n\t   width: \"280px\",\n\t   justifyContent: \"center\",\n\t   alignItems: \"center\",\n\t   margin:8,\n\t   height: \"calc(100vh - 64px - 32px)\",\n\t   background: 'linear-gradient(113.18deg, #FFCADC 0%, #C8FFFD 58.33%)'\n    },\n    cardsList: {\n\t   position: \"relative\",\n\t   flexGrow: 1,\n\t   width: \"260px\"\n    },\n    cardsListScroll: {\n\t   position: \"absolute\",\n\t   height: \"calc(100vh - 64px - 128px)\",\n\t   width: \"260px\",\n\t   overflowY: \"auto\",\n    }\n}))\n\nexport const Results = observer(() => {\n\t   const classes = useStyles()\n\t   const cardList = store.data === null ? <div>Введите данные</div> : store.data.map(item => {\n\n\t   \treturn <CardSmall\n\t\t  key={Math.random() + item.mal_id}\n\t\t  img={item.image_url}\n\t\t  title={item.title|| item.name}\n\t\t  name={item.name }\n\t\t  synopsis={item.synopsis}\n\t\t  alternative_names={item.alternative_names}\n\t\t  category={item.synopsis ? \"anime\" : \"character\"\t\t  }\n\t\t  isFavorite={item.isFavorite}\n\t\t  card={item}\n\t   />})\n\t   return <Paper className={classes.root}>\n\n\t\t  <Box className={classes.cardsList}>\n\t\t\t <AnimeSearchInput/>\n\t\t\t <Box className={classes.cardsListScroll}>\n\t\t\t\t{cardList}\n\t\t\t </Box>\n\t\t  </Box>\n\n\n\t   </Paper>\n    }\n)\n\n","import React from 'react';\nimport {Card, Fab, makeStyles, Grid, Box, colors, Paper} from \"@material-ui/core\";\nimport {observer} from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport layoutStore from \"../../store/layoutStore\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport {CategoriesType} from \"../../store/types\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    \tposition:\"absolute\",\n\t\twidth: \"100%\",\n\t   maxWidth: \"100%\",\n\t   height: \"calc(100% - 32px)\",\n\t   margin: 8,\n\t   background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n\n    },\n    contentWrapper: {\n\t   display: \"flex\",\n\t   flexDirection: \"column\",\n\t   justifyContent: \"center\",\n\t   alignItems: \"center\",\n\t   maxHeight: \"calc(100% - 32px)\",\n\t   overflowY: \"auto\",\n\n    },\n    header: {\n\t   display: \"flex\",\n\t   background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n\t   width: \"100%\",\n\t   padding: 4,\n\t   alignItems: \"center\",\n    },\n    img: {\n\t   height: \"300px\",\n\t   float: \"left\",\n\t   margin: 8,\n    },\n    title: {\n\t   flexGrow: 1,\n\t   textAlign: \"center\"\n    },\n    subtitle: {\n\t   width: \"100%\",\n    },\n    fab:{\n        width:48,\n\t   height:48,\n\t   margin: 6\n    }\n\n}))\ninterface IContent {\n\ttitle?: string\n\tprefixTitle: string\n\tsubtitle?: string | string[]\n\tprefixSubtitle: string\n\tfavoriteIcon: JSX.Element\n\timg?: string\n}\nexport const Content = observer(({title, prefixTitle, subtitle, prefixSubtitle,favoriteIcon, img}: IContent) => {\n    const classes = useStyles()\n    return (\n\t   <Paper className={classes.root}>\n\t\t  <Box className={classes.contentWrapper}>\n\t\t\t <Paper className={classes.header}>\n\n\n\t\t\t\t<Fab className={classes.fab} color=\"primary\" onClick={() => {\n\t\t\t\t    layoutStore.toggleActiveView(\"results\")\n\t\t\t\t}}><ArrowBackIcon/>\n\t\t\t\t</Fab>\n\t\t\t\t<Fab className={classes.fab} onClick={() => store.setFavorite()}>\n\t\t\t\t    {favoriteIcon}\n\t\t\t\t</Fab>\n\n\n\t\t\t\t<Typography className={classes.title} variant={'h4'}\n\t\t\t\t\t\t  component={'h2'}>\n\t\t\t\t    {title}\n\t\t\t\t</Typography>\n\n\n\t\t\t </Paper>\n\t\t\t <Typography className={classes.subtitle} variant={'body1'} component={'p'}>\n\t\t\t\t<img className={classes.img}\n\t\t\t\t\talt={'#'}\n\t\t\t\t\tsrc={img}/>\n\t\t\t\t{prefixTitle}: {title} <br/>\n\t\t\t\t{prefixSubtitle}: {subtitle}\n\t\t\t </Typography>\n\t\t  </Box>\n\t   </Paper>\n    );\n})\n","import React from 'react';\nimport {Box, makeStyles} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        position: \"absolute\",\n        width: \"100%\",\n        maxWidth: \"100%\",\n        height: \"calc(100% - 32px)\",\n        margin: 8,\n        background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n    }\n}))\n\nexport const Placeholder = () => {\n    const classes = useStyles()\n    return (\n        <Box className={classes.root}>\n        </Box>\n\n    );\n};","import React from 'react';\nimport {Content} from \"./Content\";\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport {SmsFailedOutlined} from \"@material-ui/icons\";\nimport {Box} from \"@material-ui/core\";\nimport {Placeholder} from \"./Placeholder\";\n\nexport const ContentContainer = observer(() => {\n    if (store.content === null) {\n\n    }\n    const title = () => {\n        if (store.content === null) return\n        return store.content.title || store.content.name\n    }\n    const prefixTitle = store.category === 'anime' ? \"Title\" : 'Name'\n    const subtitle = () => {\n        if (store.content === null) return\n        return store.content.synopsis || store.content.alternative_names\n    }\n    const prefixSubtitle = store.category === 'anime' ? 'Description' : 'AltName'\n    const img = () => {\n        if (store.content === null) return\n        return store.content.image_url\n    }\n    const favorite = () => {\n        if (store.content === null) return <SmsFailedOutlined/>\n        return store.content.isFavorite ? <FavoriteIcon/> : <FavoriteBorderIcon/>\n    }\n    return (<>\n            {\n                store.content === null ? <Placeholder/> : <Content\n                    title={title()}\n                    prefixTitle={prefixTitle}\n                    subtitle={subtitle()}\n                    prefixSubtitle={prefixSubtitle}\n                    img={img()}\n                    favoriteIcon={favorite()}\n                />\n            }\n        </>\n    );\n})\n\n","import React from 'react';\nimport {Box, Hidden, makeStyles, SwipeableDrawer} from \"@material-ui/core\";\nimport layoutStore from \"../store/layoutStore\";\nimport {observer} from \"mobx-react-lite\";\nimport {Category} from \"./Category/Category\";\nimport {Results} from \"./Results/Results\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t   width: \"fit-content\",\n    },\n    container: {\n\t   background: \"rgba(65, 94, 127, 1)\",\n\t   padding: '60px 8px',\n\t   height: \"100vh\",\n\t   display: \"flex\",\n\t   alignItems: \"stretch\"\n    }\n}))\n\nexport const MobPanel = observer(() => {\n\n    const classes = useStyles()\n    return (\n\t   <SwipeableDrawer\n\t\t  anchor={\"left\"}\n\t\t  open={layoutStore.mobPanel}\n\t\t  onClose={() => {\n\t\t\t layoutStore.toggleMobPanel(false)\n\t\t  }}\n\t\t  onOpen={() => {\n\t\t\t layoutStore.toggleMobPanel(true)\n\t\t  }}\n\t\t  className={classes.root}\n\t   >\n\t\t  <Box className={classes.container}>\n\t\t\t <Hidden mdUp>\n\t\t\t\t<Category/>\n\t\t\t </Hidden>\n\n\t\t  </Box>\n\t   </SwipeableDrawer>\n    );\n})","import React, {useEffect, useState} from 'react'\nimport styled from \"styled-components\";\nimport store from \"./store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, Button, ButtonGroup, Container, CssBaseline, makeStyles, Grid, colors, Hidden} from \"@material-ui/core\";\nimport {Appbar} from \"./newComponents/AppBar/AppBar\";\nimport layoutStore from \"./store/layoutStore\";\nimport {Results} from \"./newComponents/Results/Results\";\nimport {Content} from \"./newComponents/Content/Content\";\nimport {Category} from \"./newComponents/Category/Category\";\nimport {ContentContainer} from \"./newComponents/Content/ContentContainer\";\nimport {MobPanel} from \"./newComponents/MobPanel\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t   display: \"flex\",\n\t   position: \"relative\",\n\t   width: \"100vw\",\n\t   height: \"100vh\",\n\t   background: \"linear-gradient(315deg, #FFDEE9 0%, #B5FFFC 100%)\",\n\t   flexDirection: \"column\",\n    },\n    container: {\n\t   position: \"relative\",\n\t   display: \"flex\",\n\t   justifyContent: \"center\"\n    },\n\n    button: {\n\t   display: \"flex\",\n\t   direction: \"column\",\n\t   width: \"100%\"\n    },\n    contentWrapper: {\n        position:\"relative\",\n        flexGrow: 1,\n\t   height: \"calc(100vh - 64px)\",\n\t   background: \"transparent\",\n    }\n\n}))\nconst App = observer(() => {\n    const classes = useStyles()\n\n    useEffect(() => {\n\t   setTimeout(() => {\n\t\t  store.apiDelay4second()\n\t   }, 4000)\n    }, [store.canIStartSearch]);\n    useEffect(() => {\n\t   store.startProgram();\n    }, []);\n\n    return (\n\t   <div className={classes.root}>\n\t\t  <CssBaseline/>\n\t\t  <Appbar/>\n\t\t  <Hidden>\n\t\t\t <MobPanel smDown/>\n\t\t  </Hidden>\n\t\t  <Container maxWidth=\"lg\" className={classes.container}>\n\t\t\t <Hidden smDown>\n\t\t\t <Category/>\n\t\t\t </Hidden>\n\t\t\t <Hidden xsDown>\n\t\t\t <Results/>\n\t\t\t </Hidden>\n\t\t\t <Hidden smUp>\n\t\t\t <Box className={classes.contentWrapper}>\n\t\t\t     {layoutStore.activeView === 'content' ?\n\t\t\t \t   <ContentContainer/> : <Results/> }\n\t\t\t </Box>\n\t\t\t </Hidden>\n\t\t\t <Hidden xsDown>\n\t\t\t <Box className={classes.contentWrapper}>\n\t\t\t   <ContentContainer/>\n\t\t\t </Box>\n\t\t\t </Hidden>\n\n\t\t  </Container>\n\n\t   </div>\n\n    );\n})\n\nexport default App;\n\nexport const Typography = styled.div`\n\n  font-size: ${props => props.fontSize || \"40px\"};\n  font-family: Roboto;\n  cursor: pointer;\n  font-weight: ${props => props.fontWeight || \"100\"};\n  color: ${props => props.color || 'rgba(255,255,255,1)'}`\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}