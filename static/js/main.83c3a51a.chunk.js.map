{"version":3,"sources":["store/LayoutStore.ts","store/store.ts","components/AppBar/AppBar.tsx","components/Results/CardSmall.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Results/input/AnimeSearchInput.tsx","components/Results/Results.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/ContentContainer.tsx","components/MobPanel.tsx","App.tsx","index.tsx"],"names":["activeView","mobPanel","categoryView","makeAutoObservable","this","isOpen","store","category","textInput","action","content","data","favorite","canIStartSearch","loading","startProgram","locStorage","localStorage","getItem","JSON","parse","console","log","toJS","input","select","LayoutStore","pos","map","e","mal_id","indexOf","isFavorite","splice","unshift","setItem","stringify","setTimeout","a","axios","get","then","res","results","forEach","event","includes","catch","error","response","apiDelay4second","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","root","width","cursor","margin","media","border","borderRadius","textWrapper","flexDirection","justifyContent","overflow","padding","title","textOverflow","subtitle","fav","onlyTitle","CardSmall","observer","img","synopsis","alternative_names","name","card","style","fontSize","text","gutterBottom","Card","setContent","toggleActiveView","CardMedia","image","CardContent","Box","button","backgroundColor","buttonActive","CategoryButton","Button","value","setCategory","rootRow","container","categories","categoriesRow","Category","categoriesButton","el","Paper","ButtonGroup","marginLeft","flex","divider","label","top","left","opacity","iconButton","AnimeSearchInput","useState","setTextInput","onSubmit","preventDefault","startSearch","setActiveCategory","InputBase","onChange","target","placeholder","inputProps","aria-label","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","cardList","item","image_url","Math","random","maxWidth","contentWrapper","maxHeight","header","float","textAlign","fab","minWidth","minHeight","Content","prefixTitle","prefixSubtitle","favoriteIcon","smUp","Fab","setFavorite","alt","src","Placeholder","ContentContainer","SmsFailedOutlined","MobPanel","SwipeableDrawer","anchor","open","onClose","onOpen","backdrop","loader","zIndex","App","CssBaseline","Backdrop","CircularProgress","smDown","xsDown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83c3a51a.chunk.js","sourcesContent":["import { makeAutoObservable, toJS } from \"mobx\";\nimport { CategoriesType, ActiveViewType } from \"./types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  \n  activeView: ActiveViewType = \"results\";\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView = \"anime\";\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\n\n  toggleActiveView(activeView: ActiveViewType) {\n    this.activeView = activeView;\n  }\n}\n\nexport default new LayoutStore();\n","import { makeAutoObservable } from \"mobx\";\nimport axios from \"axios\";\nimport { toJS } from \"mobx\";\nimport { animeData } from \"./Category/anime\";\nimport { naruto } from \"./Category/q=Naruto\";\nimport { CardType, CategoriesType, IResponse } from \"./types\";\nimport LayoutStore from \"./LayoutStore\";\n\n\nclass store {\n  textInput = \"\";\n  action = \"search\";\n  category: CategoriesType = \"anime\";\n  content: CardType | null = null;\n  data: CardType[] = [];\n  favorite: CardType[] = [];\n  canIStartSearch = true;\n  loading = false;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.startProgram();\n  }\n\n  startProgram() {\n    let locStorage = localStorage.getItem(\"favoriteArr\");\n    if (locStorage !== null) {\n      this.favorite = JSON.parse(locStorage);\n    }\n    console.log(toJS(this.favorite));\n  }\n\n  setTextInput(input: string) {\n    this.textInput = input;\n    console.log(this.textInput);\n  }\n\n  setCategory(select: CategoriesType) {\n    LayoutStore.categoryView = \"\";\n    this.content = null;\n    this.data = [];\n    if (select === \"favorite\") {\n      this.data = this.favorite;\n      LayoutStore.categoryView = \"favorite\";\n    }\n    this.category = select;\n    console.log(this.category);\n  }\n\n  setContent(content: CardType) {\n    this.content = content;\n    console.log(toJS(this.content));\n  }\n\n  setFavorite() {\n    if (this.content === null) return;\n    //todo тут лучше использовать метод findIndex\n    let pos = this.favorite\n      .map(function(e) {\n        return e.mal_id;\n      })\n      .indexOf(this.content.mal_id);\n    //let indexOfCheck2 = this.favorite.filter(item => item.mal_id !== this.content.mal_id)\n\n    //todo ts ignore тут не нужен, все ж и без него работает\n\n    // @ts-ignore\n    if (pos !== -1 || pos === 0) {\n      this.content.isFavorite = false;\n      this.favorite.splice(pos, 1);\n    } else {\n      this.content.isFavorite = true;\n      this.favorite.unshift(this.content);\n    }\n    localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite));\n  }\n\n\n  apiDelay4second() {\n    setTimeout(() => {\n      this.canIStartSearch = true;\n    }, 4000);\n  }\n\n\n  async startSearch(textInput: string) {\n    console.log(\"Кнопка нажата\");\n    if (this.category === \"favorite\") {\n      return;\n    }\n    if (!this.canIStartSearch) return;\n    this.loading = true;\n\n\n    await axios\n      .get<IResponse>(\n        `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=5&page=1`\n      )\n      .then((res) => {\n        res.data.results.forEach((e) => {\n          console.log(e);\n          this.favorite\n            .map((event) => {\n              return event.mal_id;\n            })\n            .includes(e.mal_id)\n            ? (e.isFavorite = true)\n            : (e.isFavorite = false);\n        });\n        this.data = res.data.results;\n        console.log(toJS(this.data));\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        setTimeout(() => {\n          this.loading = false;\n        }, 500);\n      });\n    console.log(\"ответ получен\");\n    this.canIStartSearch = false;\n    this.apiDelay4second();\n  }\n}\n\nexport default new store();\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"64px\",\n    display: \"flex\",\n    background: \"rgba(130, 188, 255, 1)\",\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position={\"static\"}\n      className={classes.wrapper}\n      color={\"transparent\"}\n      elevation={0}\n    >\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\">\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Fab, Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { observer } from \"mobx-react-lite\";\nimport store from \"../../store/store\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { CardType } from \"../../store/types\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 244,\n    background: \"rgba(255,255,255,0.5)\",\n    // minWidth: 250,\n    height: 64,\n    cursor: \"pointer\",\n    margin: \"8px auto\",\n  },\n  media: {\n    border: \"1px solid rgba(255,255,255,0.8)\",\n    width: 56,\n    height: 56,\n    borderRadius: \"100%\",\n    margin: 4,\n  },\n  textWrapper: {\n    width: 144,\n    height: 64,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    overflow: \"hidden\",\n    padding: 0,\n  },\n  title: {\n    width: 144,\n    height: 28,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  subtitle: {\n    width: 144,\n    height: 36,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  fav: {\n    width: 56,\n    height: 56,\n  },\n  onlyTitle: {\n    width: 164,\n    height: 64,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n});\n\ninterface ICardSmall {\n  img: string;\n  title?: string;\n  synopsis?: string;\n  isFavorite?: boolean;\n  alternative_names?: string[];\n  name?: string;\n  card: CardType;\n  category: string;\n}\n\nexport const CardSmall = observer(\n  ({\n    img,\n    title,\n    synopsis,\n    alternative_names,\n    name,\n    isFavorite,\n    card,\n    category,\n  }: ICardSmall) => {\n    const classes = useStyles();\n    //todo если не favorite, то вообще не надо иконку показывать, а в favorites вообще никогда её не надо показывать\n    const favorite = isFavorite ? (\n      <FavoriteIcon style={{ fontSize: 54 }} />\n    ) : (\n      <FavoriteBorderIcon style={{ fontSize: 54 }} />\n    );\n\n    const text =\n      category === \"anime\" ? (\n        <>\n          <Typography\n            gutterBottom\n            variant=\"button\"\n            component=\"h2\"\n            className={classes.title}\n          >\n            {title || name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            className={classes.subtitle}\n          >\n            {synopsis || alternative_names}\n          </Typography>\n        </>\n      ) : (\n        <Typography\n          gutterBottom\n          variant=\"h5\"\n          component=\"h2\"\n          className={classes.onlyTitle}\n        >\n          {title || name}\n        </Typography>\n      );\n    return (\n      <Card\n        className={classes.root}\n        onClick={() => {\n          store.setContent(card);\n          LayoutStore.toggleActiveView(\"content\");\n        }}\n      >\n        <CardMedia\n          className={classes.media}\n          image={img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent className={classes.textWrapper}>{text}</CardContent>\n        <Box className={classes.fav}>{favorite}</Box>\n      </Card>\n    );\n  }\n);\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { CategoryButton } from \"./CategoryButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: \"linear-gradient(246.82deg, #FFCADC 0%, #C8FFFD 58.33%)\",\n    height: \"calc(100vh - 96px)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n      </ButtonGroup>\n    </Paper>\n  );\n});\n","import React, {useState} from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport store from \"../../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { animeData } from \"../../../store/Category/anime\";\nimport { naruto } from \"../../../store/Category/q=Naruto\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport { Box, CircularProgress, Typography } from \"@material-ui/core\";\nimport { categories } from \"../../Category/Category\";\n\n\nconst useStyles = makeStyles({\n    root: {\n      display: \"flex\",\n      position: \"relative\",\n      width: 244,\n      height: 64,\n      cursor: \"pointer\",\n      margin: \"8px auto\",\n    },\n    input: {\n      marginLeft: 2,\n      flex: 1,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    label: {\n      position: \"absolute\",\n      top: 2,\n      left: 8,\n      fontSize: 10,\n      opacity: 0.7,\n    },\n\n    iconButton: {},\n  });\n\nexport const AnimeSearchInput = observer(() => {\n  const classes = useStyles();\n  const [textInput, setTextInput] = useState('')\n  return (\n    <Paper  \n    component=\"form\" \n    onSubmit = {(e) => { \n      e.preventDefault();\n      store.startSearch(textInput);\n      LayoutStore.setActiveCategory();\n    }} \n    className={classes.root}>\n      <Typography className={classes.label}>\n        {categories.map((el) => (el.value === store.category ? el.text : null))}\n      </Typography>\n      <InputBase\n        value={textInput}\n        onChange={(e) => {\n          setTextInput(e.target.value)\n        }}\n        className={classes.input}\n        //todo а если не аниме?\n        placeholder=\"Start searching Anime\"\n        inputProps={{ \"aria-label\": \"search Anime\" }}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={() => {\n          store.startSearch(textInput);\n          LayoutStore.setActiveCategory();\n          // store.category === 'anime' ? store.startFakeSearch(animeData.results) : store.category === 'character' ? store.startFakeSearch(naruto.results) : store.startFakeSearch(null)\n        }}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n});\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { CardSmall } from \"./CardSmall\";\nimport { AnimeSearchInput } from \"./input/AnimeSearchInput\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { categories } from \"../Category/Category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"280px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 8,\n    height: \"calc(100vh - 64px - 32px)\",\n    background: \"linear-gradient(113.18deg, #FFCADC 0%, #C8FFFD 58.33%)\",\n  },\n  cardsList: {\n    position: \"relative\",\n    flexGrow: 1,\n    width: \"260px\",\n  },\n  cardsListScroll: {\n    position: \"absolute\",\n    height: \"calc(100vh - 64px - 128px)\",\n    width: \"260px\",\n    overflowY: \"auto\",\n  },\n}));\n\nexport const Results = observer(() => {\n  const classes = useStyles();\n  //todo если нет поиска, то надо показывать всё подряд\n  const cardList =\n    store.data === null ? (\n      <div>Введите данные</div>\n    ) : (\n      store.data.map((item) => {\n        return (\n          <CardSmall\n            key={Math.random() + item.mal_id}\n            img={item.image_url}\n            title={item.title || item.name}\n            name={item.name}\n            synopsis={item.synopsis}\n            alternative_names={item.alternative_names}\n            category={item.synopsis ? \"anime\" : \"character\"}\n            isFavorite={item.isFavorite}\n            card={item}\n          />\n        );\n      })\n    );\n  return (\n    <Paper className={classes.root}>\n      <Box className={classes.cardsList}>\n        <AnimeSearchInput />\n\n        <Box>\n          {categories.map((el) =>\n            el.value === LayoutStore.categoryView ? el.text : null\n          )}\n        </Box>\n        <Box className={classes.cardsListScroll}>{cardList}</Box>\n      </Box>\n    </Paper>\n  );\n});\n","import React from \"react\";\nimport {\n  Card,\n  Fab,\n  makeStyles,\n  Grid,\n  Box,\n  colors,\n  Paper,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Hidden} from \"@material-ui/core\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { CategoriesType } from \"../../store/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    maxHeight: \"calc(100% - 32px)\",\n    overflowY: \"auto\",\n  },\n  header: {\n    display: \"flex\",\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n    width: \"100%\",\n    padding: 4,\n    alignItems: \"center\",\n  },\n  img: {\n    height: \"300px\",\n    float: \"left\",\n    margin: 8,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\",\n    textOverflow: \"ellipsis\",\n  },\n  subtitle: {\n    width: \"100%\",\n  },\n  fab: {\n    minWidth: 40,\n    minHeight: 40,\n    maxWidth: 40,\n    maxHeight: 40,\n    margin: 4,\n  },\n}));\n\ninterface IContent {\n  title?: string;\n  prefixTitle: string;\n  subtitle?: string | string[];\n  prefixSubtitle: string;\n  favoriteIcon: JSX.Element;\n  img?: string;\n}\n\nexport const Content = observer(\n  ({\n    title,\n    prefixTitle,\n    subtitle,\n    prefixSubtitle,\n    favoriteIcon,\n    img,\n  }: IContent) => {\n    const classes = useStyles();\n    return (\n      <Paper className={classes.root}>\n        <Box className={classes.contentWrapper}>\n          <Paper className={classes.header}>\n            <Hidden mdUp smUp> \n                <Fab\n                  className={classes.fab}\n                  color=\"primary\"\n                  onClick={() => { \n                    LayoutStore.toggleActiveView(\"results\");\n                  }}\n                >\n                  <ArrowBackIcon />\n                </Fab>\n            </Hidden>\n                <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n                  {favoriteIcon}\n                </Fab>\n\n            <Typography\n              className={classes.title}\n              variant={\"h4\"}\n              component={\"h2\"}\n            >\n              {title}\n            </Typography>\n          </Paper>\n          <Typography\n            className={classes.subtitle}\n            variant={\"body1\"}\n            component={\"p\"}\n          >\n            <img className={classes.img} alt={\"#\"} src={img} />\n            {prefixTitle}: {title} <br />\n            {prefixSubtitle}: {subtitle}\n          </Typography>\n        </Box>\n      </Paper>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root}></Box>;\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { SmsFailedOutlined } from \"@material-ui/icons\";\nimport { Box } from \"@material-ui/core\";\nimport { Placeholder } from \"./Placeholder\";\n\nexport const ContentContainer = observer(() => {\n  if (store.content === null) {\n  }\n  const title = () => {\n    if (store.content === null) return;\n    return store.content.title || store.content.name;\n  };\n  const prefixTitle = store.category === \"anime\" ? \"Title\" : \"Name\";\n  const subtitle = () => {\n    if (store.content === null) return;\n    return store.content.synopsis || store.content.alternative_names;\n  };\n  const prefixSubtitle = store.category === \"anime\" ? \"Description\" : \"AltName\";\n  const img = () => {\n    if (store.content === null) return;\n    return store.content.image_url;\n  };\n  const favorite = () => {\n    if (store.content === null) return <SmsFailedOutlined />;\n    return store.content.isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />;\n  };\n  return (\n    <>\n      {store.content === null ? (\n        <Placeholder />\n      ) : (\n        <Content\n          title={title()}\n          prefixTitle={prefixTitle}\n          subtitle={subtitle()}\n          prefixSubtitle={prefixSubtitle}\n          img={img()}\n          favoriteIcon={favorite()}\n        />\n      )}\n    </>\n  );\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"./Category/Category\";\nimport { Results } from \"./Results/Results\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport store from \"./store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  CssBaseline,\n  makeStyles,\n  Grid,\n  colors,\n  Hidden,\n  CircularProgress,\n  Backdrop\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Content } from \"./components/Content/Content\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/MobPanel\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100vw\",\n    height: \"100vh\",\n    background: \"linear-gradient(315deg, #FFDEE9 0%, #B5FFFC 100%)\",\n    flexDirection: \"column\"\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: \"transparent\"\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\"\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\"\n  }\n});\nconst App = observer(() => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Appbar />\n      {store.loading ? (\n        <Box className={classes.loader}>\n          <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress />\n          </Backdrop>{\" \"}\n        </Box>\n      ) : null}\n      <Hidden smDown>\n        <MobPanel />\n      </Hidden>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <Results />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.activeView === \"content\" ? (\n              <ContentContainer />\n            ) : (\n              <Results />\n            )}\n          </Box>\n        </Hidden>\n        <Hidden xsDown>\n          <Box className={classes.contentWrapper}>\n            <ContentContainer />\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n});\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}