{"version":3,"sources":["store/ErrorStore.ts","store/loaderStore.ts","store/types/zod.ts","store/favoriteStore.ts","store/factory.ts","store/types/guards.ts","store/pagination.ts","store/store.ts","store/LayoutStore.ts","store/colors.ts","components/AppBar/AppBar.tsx","components/Category/CategoryButton.tsx","components/Category/favoriteFilterBtn/favoriteBtnFilter.tsx","components/Category/Category.tsx","components/Content/jsx/GeneralInfo.tsx","components/Content/jsx/Specific/Specific.tsx","components/Content/jsx/Footer.tsx","components/Content/Content.tsx","components/Content/jsx/Placeholder.tsx","components/Content/jsx/ToggleTypeCard.tsx","components/Content/jsx/Specific/TopAnime.tsx","components/Content/jsx/Specific/TopCharacter.tsx","components/Content/jsx/Specific/ShortCharacter.tsx","components/Content/jsx/Specific/ShortAnime.tsx","components/Content/ContentContainer.tsx","components/AppBar/MobPanel.tsx","components/ErrorAlert.tsx","components/Loader/Loader.tsx","components/Loader/LoaderContainer.tsx","components/Results/CardSmall/CardSmall.tsx","components/Results/CardSmall/CardSmallContainer.tsx","components/Results/Search/Search.tsx","components/Results/Search/SearchContainer.tsx","components/Results/Results.tsx","components/Results/ResultsContainer.tsx","App.tsx","index.tsx"],"names":["errorStatus","errorText","isOpenError","makeAutoObservable","this","open","text","status","error","toggleAlertError","changeStatusError","response","changeTextError","data","message","loading","AnimeFromCharacterResponseZod","z","object","mal_id","number","type","literal","name","string","url","CharacterZod","episodes","score","title","rank","image_url","name_kanji","alternative_names","array","anime","AnimeZod","synopsis","nicknames","about","animeography","aired","prop","from","day","month","year","to","initialCheckFavorite","store","favorite","map","el","includes","animeShortFactory","console","log","parse","isFavorite","favoriteStore","entity","body","characterShortFactory","characterTopFactory","animeTopFactory","characterGuard","undefined","animeGuard","topAnimeGuard","paginationStore","fetching","active","currentPage","topAnime","topCharacters","characters","fetchingBoolean","forEach","e","event","action","textSearch","a","category","loaderStore","axios","get","createPaginationString","then","res","top","results","setFetching","newCards","LayoutStore","categoryView","lastAnime","concat","lastCharacter","topCharacter","favoriteCheck","catch","setTimeout","finally","isThrottle","startPagination","favoriteBtnFilter","content","isWaiting","startProgram","getTopCharacters","getTopAnime","setCategoriesView","locStorage","localStorage","getItem","JSON","select","startSearch","toJS","pos","findIndex","item","splice","unshift","setItem","stringify","newCard","textInput","filterFavorite","filter","toLowerCase","ErrorStore","catchingErrors","ms","mobPanel","isContentOpen","isOpen","colors","useStyles","makeStyles","theme","wrapper","background","toolbar","Appbar","classes","AppBar","position","className","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","button","width","color","backgroundColor","buttonActive","CategoryButton","observer","Button","value","setCategory","root","marginLeft","FavoriteFilterBtn","FormControl","RadioGroup","defaultValue","aria-label","onChange","target","FormControlLabel","control","Radio","label","margin","height","boxShadow","rootRow","container","display","categories","border","flexDirection","categoriesRow","Category","categoriesButton","Paper","ButtonGroup","useStyle","generalInfo","img","minHeight","minWidth","borderRadius","block","flexGrow","alignItems","overflow","fabButton","right","bottom","GeneralInfo","favoriteIcon","toggleFavorite","CardMedia","image","smUp","xsDown","Fab","specificInfo","overflowY","padding","Specific","children","footer","justifyContent","borderBottomRightRadius","borderBottomLeftRadius","fab","Footer","toggleContent","style","contentWrapper","gridTemplateRows","maxWidth","Content","Placeholder","Box","ToggleTypeCard","TopAnime","TopCharacter","ShortCharacter","Array","isArray","ShortAnime","ContentContainer","setFavorite","specificBody","MobPanel","SwipeableDrawer","anchor","onClose","onOpen","ErrorAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","backdrop","loader","zIndex","left","Loader","Backdrop","CircularProgress","LoaderContainer","media","maxHeight","titleBox","borderBottom","whiteSpace","textOverflow","fontWeight","fav","CardSmall","CardSmallContainer","fontSize","setContent","input","divider","iconButton","Search","activeCategory","setTextInput","activeCategoryText","onSubmit","preventDefault","InputBase","onChangeText","placeholder","inputProps","SearchContainer","useState","useEffect","length","startSearchWithDelay","setActiveCategory","validator","cardsList","resultsLabel","cardsListScroll","Results","resultsTitle","toResultRef","scrollResult","cardList","Math","random","ref","onScroll","ResultsContainer","useRef","current","scrollTo","scrollHeight","scrollTop","window","innerHeight","getBoundingClientRect","App","CssBaseline","smDown","createTheme","breakpoints","values","xs","sm","md","lg","xl","ReactDOM","render","document","getElementById"],"mappings":"kWA+Be,M,WAxBX,aAAe,yBAJfA,YAAsB,EAIR,KAHdC,UAAoB,GAGN,KAFdC,aAAc,EAGVC,YAAmBC,M,oDAGvB,SAAiBC,GACbD,KAAKF,YAAcG,I,6BAGvB,SAAgBC,GACZF,KAAKH,UAAYK,I,+BAGrB,SAAkBC,GACdH,KAAKJ,YAAcO,I,4BAGvB,SAAeC,GAEXJ,KAAKK,kBAAiB,GACtBL,KAAKM,kBAAkBF,EAAMG,SAASJ,QACtCH,KAAKQ,gBAAgBJ,EAAMG,SAASE,KAAKC,a,MCZlC,M,WAXb,aAAe,yBADfC,SAAU,EAERZ,YAAmBC,M,+CAErB,WACEA,KAAKW,SAAU,I,wBAEjB,WACEX,KAAKW,SAAU,M,aCHNC,GANgCC,IAAEC,OAAO,CACpDC,OAAQF,IAAEG,SACVC,KAAMJ,IAAEK,QAAQ,SAChBC,KAAMN,IAAEO,SACRC,IAAKR,IAAEO,WAEoCP,IAAEC,OAAO,CACpDC,OAAQF,IAAEG,SACVC,KAAMJ,IAAEK,QAAQ,SAChBC,KAAMN,IAAEO,SACRC,IAAKR,IAAEO,YAmBIE,GAjBcT,IAAEC,OAAO,CAClCC,OAAQF,IAAEG,SACVO,SAAUV,IAAEG,SACZQ,MAAOX,IAAEG,SACTS,MAAOZ,IAAEO,SACTM,KAAMb,IAAEG,SACRK,IAAKR,IAAEO,SACPO,UAAWd,IAAEO,WAEiBP,IAAEC,OAAO,CACvCC,OAAQF,IAAEG,SACVY,WAAYf,IAAEO,SACdK,MAAOZ,IAAEO,SACTM,KAAMb,IAAEG,SACRK,IAAKR,IAAEO,SACPO,UAAWd,IAAEO,WAEaP,IAAEC,OAAO,CACnCC,OAAQF,IAAEG,SACVK,IAAKR,IAAEO,SACPO,UAAWd,IAAEO,SACbD,KAAMN,IAAEO,SACRS,kBAAmBhB,IAAEO,SAASU,QAC9BC,MAAOlB,IAAEiB,MAAMlB,MAGJoB,EAAWnB,IAAEC,OAAO,CAC/BC,OAAQF,IAAEG,SACVK,IAAKR,IAAEO,SACPO,UAAWd,IAAEO,SACbK,MAAOZ,IAAEO,SACTa,SAAUpB,IAAEO,WC9BC,GDgCiBP,IAAEC,OAAO,CACvCC,OAAQF,IAAEG,SACVK,IAAKR,IAAEO,SACPO,UAAWd,IAAEO,SACbD,KAAMN,IAAEO,SACRQ,WAAYf,IAAEO,SACdc,UAAWrB,IAAEiB,MAAMjB,IAAEO,UACrBe,MAAOtB,IAAEO,SACTgB,aAAcvB,IAAEiB,MAAMlB,KAEIC,IAAEC,OAAO,CACnCC,OAAQF,IAAEG,SACVK,IAAKR,IAAEO,SACPO,UAAWd,IAAEO,SACbK,MAAOZ,IAAEO,SACTG,SAAUV,IAAEG,SACZqB,MAAOxB,IAAEC,OAAO,CACdwB,KAAMzB,IAAEC,OAAO,CACbyB,KAAM1B,IAAEC,OAAO,CAAE0B,IAAK3B,IAAEG,SAAUyB,MAAO5B,IAAEG,SAAU0B,KAAM7B,IAAEG,WAC7D2B,GAAI9B,IAAEC,OAAO,CAAE0B,IAAK3B,IAAEG,SAAUyB,MAAO5B,IAAEG,SAAU0B,KAAM7B,IAAEG,eAG/DiB,SAAUpB,IAAEO,SACZI,MAAOX,IAAEG,SACTU,KAAMb,IAAEG,WCxDK,IAXb,aAAe,yBAGf4B,qBAAuB,SAAC7B,GACtB,OAAO8B,EAAMC,SACVC,KAAI,SAACC,GACJ,OAAOA,EAAGjC,UAEXkC,SAASlC,IAPZhB,YAAmBC,QCWVkD,EAAoB,SAACzC,GAYhC,OAXA0C,QAAQC,IAAI,qBACZpB,EAASqB,MAAM5C,GACS,CACtB6C,WAAYC,EAAcX,qBAAqBnC,EAAKM,QACpDE,KAAM,QACNuC,OAAQ,QACRzC,OAAQN,EAAKM,OACbY,UAAWlB,EAAKkB,UAChBF,MAAOhB,EAAKgB,MACZgC,KAAMhD,EAAKwB,WAIFyB,EAAwB,SAACjD,GAWpC,OAVAa,EAAa+B,MAAM5C,GACK,CACtB6C,WAAYC,EAAcX,qBAAqBnC,EAAKM,QACpDE,KAAM,QACNuC,OAAQ,YACRzC,OAAQN,EAAKM,OACbY,UAAWlB,EAAKkB,UAChBF,MAAOhB,EAAKU,KACZsC,KAAMhD,EAAKsB,QAIF4B,EAAsB,SAAClD,GAUlC,MATwB,CACtB6C,WAAYC,EAAcX,qBAAqBnC,EAAKM,QACpDE,KAAM,MACNuC,OAAQ,YACRzC,OAAQN,EAAKM,OACbY,UAAWlB,EAAKkB,UAChBF,MAAOhB,EAAKgB,MACZgC,KAAMhD,EAAKmB,aAKFgC,EAAkB,SAACnD,GAc9B,MAbwB,CACtB6C,WAAYC,EAAcX,qBAAqBnC,EAAKM,QACpDE,KAAM,MACNuC,OAAQ,QACRzC,OAAQN,EAAKM,OACbY,UAAWlB,EAAKkB,UAChBF,MAAOhB,EAAKgB,MACZgC,KAAM,CACJ/B,KAAMjB,EAAKiB,KACXF,MAAOf,EAAKe,MACZD,SAAUd,EAAKc,YCnDd,SAASsC,EAAepD,GAC7B,YAAqDqD,IAA7CrD,EAAuBoB,kBAG1B,SAASkC,EAAWtD,GACzB,YAAwCqD,IAAhCrD,EAAmBwB,SAGtB,SAAS+B,EAAcvD,GAC5B,YAAwCqD,IAAhCrD,EAAsBe,M,IC0KnByC,EAAkB,I,WApK7B,aAAe,yBAVfC,UAAW,EAUG,KATdC,OAA6B,WASf,KARdC,YAAc,CACZC,SAAU,EACVC,cAAe,EACfC,WAAY,EACZxC,MAAO,EACPe,SAAU,GAIV/C,YAAmBC,M,+CAGrB,SAAYwE,GACVxE,KAAKkE,SAAWM,I,2BAGlB,SAAc/D,GACZA,EAAKgE,SAAQ,SAACC,GACZ7B,EAAMC,SACHC,KAAI,SAAC4B,GACJ,OAAOA,EAAM5D,UAEdkC,SAASyB,EAAE3D,QACT2D,EAAEpB,YAAa,EACfoB,EAAEpB,YAAa,O,oCAIxB,WAEE,OADAH,QAAQC,IAAI,0FACJpD,KAAKmE,QACX,IAAK,WACH,MAAM,sCAAN,OAA6CnE,KAAKoE,YAAYC,UAEhE,IAAK,gBACH,MAAM,2CAAN,OAAkDrE,KAAKoE,YAAYE,eAErE,IAAK,YAEH,OADAnB,QAAQC,IAAI,6JACN,4BAAN,OAAmCP,EAAM+B,OAAzC,wBAA+D/B,EAAMgC,WAArE,0BAAiG7E,KAAKoE,YAAYG,YAEpH,IAAK,QAEH,OADApB,QAAQC,IAAI,+HACN,4BAAN,OAAmCP,EAAM+B,OAAzC,oBAA2D/B,EAAMgC,WAAjE,0BAA6F7E,KAAKoE,YAAYrC,OAEhH,IAAK,WACH,MAAO,M,oEAKb,iCAAA+C,EAAA,6DACE3B,QAAQC,IAAI,oBACW,aAAnBP,EAAMkC,WAAyBC,EAAYrE,SAAU,GAF3D,SAGQsE,IACHC,IAEClF,KAAKmF,0BAENC,MAAK,SAACC,GAEL,OADAlC,QAAQC,IAAI,EAAK+B,+BACIrB,IAAjBuB,EAAI5E,KAAK6E,IACJD,EAAI5E,KAAK6E,SAEOxB,IAArBuB,EAAI5E,KAAK8E,QACJF,EAAI5E,KAAK8E,aADlB,KAIDH,MAAK,SAACC,GACL,QAAYvB,IAARuB,EAAJ,CACA,EAAKG,aAAY,GACjBrC,QAAQC,IAAI,oDACZP,EAAMpC,KAAO,GACb,IAAIgF,EAAWJ,EAAItC,KAAI,SAACC,GACtB,OAAIe,EAAWf,GACNE,EAAkBF,GAEvBa,EAAeb,GACVU,EAAsBV,QDxEWc,IC0EnBd,ED1EIpB,WC2ElB+B,EAAoBX,GAEzBgB,EAAchB,GACTY,EAAgBZ,QADzB,KAIFG,QAAQC,IAAIqC,GACqB,UAA7BC,EAAYC,eACdxC,QAAQC,IAAI,wCACZP,EAAM+C,UAAY/C,EAAM+C,UAAUC,OAAOJ,GACzC5C,EAAMpC,KAAOoC,EAAM+C,UACnB,EAAKxB,YAAYrC,OAAS,GAGK,cAA7B2D,EAAYC,eAEd9C,EAAMiD,cAAgBjD,EAAMiD,cAAcD,OACxCJ,GAEF5C,EAAMpC,KAAOoC,EAAMiD,cACnB,EAAK1B,YAAYG,YAAc,GAEA,aAA7BmB,EAAYC,eACdxC,QAAQC,IAAI,+HACZP,EAAMwB,SAAWxB,EAAMwB,SAASwB,OAAOJ,GACvC5C,EAAMpC,KAAOoC,EAAMwB,SACnB,EAAKD,YAAYC,UAAY,GAEE,kBAA7BqB,EAAYC,eACdxC,QAAQC,IAAI,6JACZP,EAAMkD,aAAelD,EAAMkD,aAAaF,OACtCJ,GAEF5C,EAAMpC,KAAOoC,EAAMkD,aACnB,EAAK3B,YAAYE,eAAiB,GAEpC,EAAK0B,cAAcnD,EAAMpC,UAE1BwF,OAAM,SAAC7F,GAEN+C,QAAQC,IAAIhD,MAEbgF,MAAK,WACJc,YAAW,WACTlB,EAAYrE,SAAU,IACrB,QAEJwF,SAAQ,kBAAM,EAAKX,aAAY,MA7EpC,gD,mIAgFA,iCAAAV,EAAA,6DACE3B,QAAQC,IAAI,SADd,SAEQ8C,WAAU,sBAAC,sBAAApB,EAAA,0DACXjC,EAAMuD,WADK,uBAEbF,YAAW,WACTrD,EAAMuD,YAAa,IAClB,KAJU,0CAOT,EAAKC,kBAPI,2CAQd,KAVL,OAWExD,EAAMuD,YAAa,EAXrB,2C,8DC0Ga,M,WAhOb,aAAe,yBAdfvB,WAAa,GAcC,KAbdyB,kBAAoB,MAaN,KAZd1B,OAAS,SAYK,KAXdG,SAA2B,QAWb,KAVdwB,QAA8B,KAUhB,KATd9F,KAAsB,GASR,KARd4D,SAA0B,GAQZ,KAPd0B,aAA8B,GAOhB,KANdH,UAA2B,GAMb,KALdE,cAA+B,GAKjB,KAJdhD,SAA0B,GAIZ,KAHdsD,YAAa,EAGC,KAFdI,WAAY,EAGVzG,YAAmBC,MACnBA,KAAKyG,eACLzG,KAAK0G,mBACL1G,KAAK2G,cAAcvB,MAAK,WAGtBM,EAAYkB,kBAAkB,e,gDAIlC,WACE,IAAIC,EAAaC,aAAaC,QAAQ,eACnB,OAAfF,IACF7G,KAAK8C,SAAWkE,KAAK3D,MAAMwD,M,gEAK/B,WAAkBI,GAAlB,SAAAnC,EAAA,sDACE9E,KAAKuG,QAAU,KACfvG,KAAKS,KAAO,GACZT,KAAK+E,SAAWkC,EAHlB,KAIUA,EAJV,OAKS,cALT,OAYS,UAZT,QAkBS,aAlBT,+BAMMjH,KAAKS,KAAOT,KAAK+F,aAEjB9B,EAAgBE,OAAS,gBACzBuB,EAAYC,aAAe,gBAC3B3F,KAAK6E,WAAa,GAVxB,oCAaM7E,KAAKS,KAAOT,KAAKqE,SACjBJ,EAAgBE,OAAS,WACzBuB,EAAYC,aAAe,WAC3B3F,KAAK6E,WAAa,GAhBxB,oCAoBMa,EAAYC,aAAe,WAC3B3F,KAAK6E,WAAa,GAClB7E,KAAKkH,YAAYlH,KAAK6E,YAtB5B,6BAyBM1B,QAAQ/C,MAAM6G,GAzBpB,iD,+EA6BA,SAAWV,GACTvG,KAAKuG,QAAUA,EACfpD,QAAQC,IAAI+D,YAAKnH,KAAKuG,Y,yBAGxB,WAAe,IAAD,OACZ,GAAqB,OAAjBvG,KAAKuG,QAAT,CACA,IAAIa,EAAMpH,KAAK8C,SAASuE,WACtB,SAACC,GAAD,aAAUA,EAAKvG,SAAL,UAAe,EAAKwF,eAApB,aAAe,EAAcxF,YAG5B,IAATqG,GACFpH,KAAKuG,QAAQjD,YAAa,EAC1BtD,KAAK8C,SAASyE,OAAOH,EAAK,KAE1BpH,KAAKuG,QAAQjD,YAAa,EAC1BtD,KAAK8C,SAAS0E,QAAQxH,KAAKuG,UAE7BO,aAAaW,QAAb,cAAoCT,KAAKU,UAAU1H,KAAK8C,c,gEAG1D,iCAAAgC,EAAA,6DACEE,EAAYrE,SAAU,EADxB,SAEQsE,IACHC,IADG,wCAGHE,MAAqB,SAACC,GAAD,OAASA,EAAI5E,KAAK6E,OAEvCF,MAAK,SAACC,GACL,IAAIsC,EAAUtC,EAAItC,KAAI,SAACC,GAAD,OAAQY,EAAgBZ,MAO9C,OANA,EAAKqB,SAAWsD,EAChB,EAAKlH,KAAO,EAAK4D,SACjBJ,EAAgBE,OAAS,WACzBF,EAAgBG,YAAYC,SAAW,EAEvC,EAAK2B,cAAc,EAAK3B,UACjBsD,KAER1B,OAAM,SAAC7F,GAAD,OAAW+C,QAAQC,IAAIhD,EAAMG,aACnC6E,MAAK,WACJJ,EAAYrE,SAAU,KAnB5B,2C,2HAuBA,iCAAAmE,EAAA,6DACEE,EAAYrE,SAAU,EADxB,SAEQsE,IACHC,IADG,6CAEHE,MAA0B,SAACC,GAAD,OAASA,EAAI5E,KAAK6E,OAC5CF,MAAK,SAACC,GACL,IAAIsC,EAAUtC,EAAItC,KAAI,SAACC,GAAD,OAAQW,EAAoBX,MAMlD,OALA,EAAK+C,aAAe4B,EACpB,EAAKlH,KAAO,EAAKsF,aACjB9B,EAAgBE,OAAS,gBACzBF,EAAgBG,YAAYE,cAAgB,EAC5C,EAAK0B,cAAc,EAAKD,cACjB4B,KAER1B,OAAM,SAAC7F,GAAD,OAAW+C,QAAQC,IAAIhD,EAAMG,aACnC6E,MAAK,WACJJ,EAAYrE,SAAU,KAhB5B,2C,iFAoBA,SAAcF,GAAsB,IAAD,OACjCA,EAAKgE,SAAQ,SAACC,GACZ,EAAK5B,SACFC,KAAI,SAAC4B,GACJ,OAAOA,EAAM5D,UAEdkC,SAASyB,EAAE3D,QACT2D,EAAEpB,YAAa,EACfoB,EAAEpB,YAAa,O,gEAIxB,WAAkBsE,GAAlB,sBAAA9C,EAAA,yDACwB,aAAlB9E,KAAK+E,SADX,iBAEQ8C,EAAiC,GAFzC,KAGW7H,KAAKsG,kBAHhB,OAIW,QAJX,OAQW,UARX,OAYW,cAZX,8BAIoBuB,EAAiB7H,KAAK8C,SAASgF,QAAO,SAACR,GACnD,OAAOA,EAAK7F,MAAMsG,cAAc9E,SAAS2E,EAAUG,kBAL3D,mCAQqBF,EAAiB7H,KAAK8C,SAASgF,QAAO,SAACR,GACpD,MAAuB,UAAhBA,EAAK9D,QAAsB8D,EAAK7F,MAAMsG,cAAc9E,SAAS2E,EAAUG,kBATtF,mCAYyBF,EAAiB7H,KAAK8C,SAASgF,QAAO,SAACR,GAEvD,MAAuB,cAAhBA,EAAK9D,QAA0B8D,EAAK7F,MAAMsG,cAAc9E,SAAS2E,EAAUG,kBAd3F,oCAwBI5E,QAAQC,IAAIyE,GACZ7H,KAAKS,KAAOoH,EAzBhB,kCA4BE7C,EAAYrE,SAAU,EA5BxB,UA8BQsE,IACHC,IADG,mCAE0BlF,KAAK4E,OAF/B,YAEyC5E,KAAK+E,SAF9C,cAE4D6C,EAF5D,qBAIHxC,MAAmB,SAACC,GAAD,OAASA,EAAI5E,QAChC2E,MAAK,SAACC,GACL,EAAK5E,KAAO,GACZ,IAAIgF,EAAWJ,EAAIE,QAAQxC,KAAI,SAACC,GAC9B,OAAIe,EAAWf,GACNE,EAAkBF,GAEvBa,EAAeb,GACVU,EAAsBV,QAD/B,KAKoB,UAAlB,EAAK+B,WACP,EAAKa,UAAYH,EACjB,EAAKhF,KAAO,EAAKmF,UACjB3B,EAAgBE,OAAS,QACzBF,EAAgBG,YAAYrC,MAAQ,GAEhB,cAAlB,EAAKgD,WACP,EAAKe,cAAgBL,EACrB,EAAKhF,KAAO,EAAKqF,cACjB7B,EAAgBE,OAAS,YACzBF,EAAgBG,YAAYG,WAAa,GAG3C,EAAKyB,cAAc,EAAKvF,SAEzBwF,OAAM,SAAC7F,GACN4H,EAAWC,eAAe7H,MAE3BgF,MAAK,WACJnB,EAAgBuB,aAAY,GAC5BU,YAAW,WACTlB,EAAYrE,SAAU,IACrB,QApET,iD,yFAwEA,SAAqBuH,EAAYN,GAAoB,IAAD,OAElD,GADA5H,KAAK6E,WAAa+C,EACd5H,KAAKoG,WAIP,OAHAjD,QAAQC,IAAI,kCACZpD,KAAKwG,WAAY,OACjBrD,QAAQC,IAAI,oIAGZD,QAAQC,IAAI,eACZpD,KAAKoG,YAAa,EAClBpG,KAAKkH,YAAYU,GAEnB1B,YAAW,WACT/C,QAAQC,IAAI,0KACZ,EAAKgD,YAAa,EACd,EAAKI,WACPrD,QAAQC,IAAI,kMACZ,EAAK8D,YAAYU,IAEjBzE,QAAQC,IAAI,6NAGb8E,GAEHlI,KAAKwG,WAAY,M,MC/NN,M,WAnBb,aAAe,yBAJf2B,UAAW,EAIG,KAFdxC,aAAmC,QAErB,KADdyC,eAAgB,EAEdrI,YAAmBC,M,iDAErB,SAAcqI,GACZrI,KAAKoI,cAAgBC,I,4BAEvB,SAAeA,GACbrI,KAAKmI,SAAWE,EAChBlF,QAAQC,IAAIpD,KAAKmI,Y,+BAGnB,WACEnI,KAAK2F,aAAe9C,EAAMkC,W,+BAE5B,SAAkBA,GAChB/E,KAAK2F,aAAeZ,M,MC7BXuD,EACP,sBADOA,EAEH,sBAFGA,EAGA,sBAHAA,EAKC,uBALDA,EAOI,yBAPJA,EASH,wBATGA,EAYJ,wBAZIA,EAaL,wBAbKA,EAcJ,sB,OCAHC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,WAAYL,GAEdM,QAAS,OAGEC,GAAS,WACpB,IAAMC,EAAUP,IAChB,OACE,cAACQ,EAAA,EAAD,CAAQC,SAAU,SAAUC,UAAWH,EAAQJ,QAASQ,UAAW,EAAnE,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASH,UAAWH,EAAQF,QAA5B,UACE,cAACS,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACP9D,EAAY+D,gBAAe,IAF/B,SAKE,cAAC,IAAD,QAGJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,qC,8BC5BJrB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,OAAQ,CACNC,MAAO,OACPC,MAAOzB,EAEP,UAAW,CACT0B,gBAAiB,uBAGrBC,aAAc,CACZD,gBAAiB,0BAGRE,GAAiBC,aAAS,YAAmC,IAAhC1J,EAA+B,EAA/BA,KAClCqI,EAAUP,KAChB,OACE,cAAC6B,GAAA,EAAD,CACET,QAAQ,WACRV,UAAS,UAAKH,EAAQe,OAAb,YACPhH,EAAMkC,WAAatE,EAAK4J,MAAQvB,EAAQmB,aAAe,MAEzDT,QAAS,SAAC9E,GACR7B,EAAMyH,YAAY7J,EAAK4J,OACvBlH,QAAQC,IAAIP,EAAMkC,SAAW,oBAC7B5B,QAAQC,IAAIsC,EAAYC,aAAe,+BAR3C,SAWGlF,EAAKP,U,wCCzBNqI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,KAAM,CACJC,WAAY,YAMHC,GAAoBN,aAAS,WACxC,IAAMrB,EAAUP,KAchB,OACE,cAACmC,GAAA,EAAD,CAAad,UAAU,WAAvB,SACE,eAACe,GAAA,EAAD,CAAYC,aAAc/H,EAAMyD,kBAAmB2C,UAAWH,EAAQyB,KAAMM,aAAW,SAAS1J,KAAK,UAAUkJ,MAASxH,EAAMyD,kBAAmBwE,SAdhI,SAACnG,GACpB9B,EAAMyD,kBAAoB3B,EAAMoG,OAAOV,MACvCxH,EAAMqE,YAAYrE,EAAMgC,aAYtB,UACE,cAACmG,GAAA,EAAD,CAAkBX,MAAM,MAAMY,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,QACxD,cAACH,GAAA,EAAD,CAAkBX,MAAM,QAAQY,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,UAC1D,cAACH,GAAA,EAAD,CAAkBX,MAAM,YAAYY,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,sBC7BhE5C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,KAAM,CACJT,MAAO,QACPsB,OAAQ,EACRzC,WAAYL,EACZ+C,OAAQ,qBACRC,UAAW,0CAEbC,QAAS,CACPzB,MAAO,KAET0B,UAAW,CACTC,QAAS,QAEXC,WAAY,CACVD,QAAS,OACTJ,OAAQ,OACRvB,MAAO,OACP6B,OAAQ,OACRC,cAAe,UAEjBC,cAAe,CACbD,cAAe,WAGNF,GAAwD,CACnE,CAAErB,MAAO,WAAYnK,KAAM,YAC3B,CAAEmK,MAAO,QAASnK,KAAM,SACxB,CAAEmK,MAAO,YAAanK,KAAM,eAEjB4L,GAAW3B,aAAS,WAC/B,IAAMrB,EAAUP,KACVwD,EAAmBL,GAAW3I,KAAI,SAACC,GACvC,OAAO,cAACkH,GAAD,CAA+BzJ,KAAMuC,GAAhBA,EAAGqH,UAEjC,OACE,cAAC2B,GAAA,EAAD,CAAO/C,UAAWH,EAAQyB,KAA1B,SACE,eAAC0B,GAAA,EAAD,CAAahD,UAAWH,EAAQ4C,WAAhC,UACGK,EAEoB,aAAnBlJ,EAAMkC,SACN,cAAC0F,GAAD,IAAwB,W,oBCxC5ByB,GAAW1D,YAAW,CAC1B2D,YAAa,CACXV,QAAS,OACTJ,OAAQ,QAEVe,IAAK,CACHf,OAAQ,OACRvB,MAAO,OACPuC,UAAW,OACXC,SAAU,OACVC,aAAc,IAEhBC,MAAO,CACLC,SAAU,EACVhB,QAAS,OACTG,cAAe,SACfc,WAAY,UACZ1D,SAAU,WACV2D,SAAU,UAEZlL,MAAO,CACLgL,SAAU,EACVE,SAAU,SACVvB,OAAQ,GAEVwB,UAAW,CACT5D,SAAU,WACV6D,MAAO,GACPC,OAAQ,MAGCC,GAAc,SAAC,GAKJ,IAJtBX,EAIqB,EAJrBA,IACA3K,EAGqB,EAHrBA,MACAuL,EAEqB,EAFrBA,aACAC,EACqB,EADrBA,eAEMnE,EAAUoD,KAChB,OACE,sBAAKjD,UAAWH,EAAQqD,YAAxB,UACE,cAACe,GAAA,EAAD,CAAWC,MAAOf,EAAKnD,UAAWH,EAAQsD,MAC1C,sBAAKnD,UAAWH,EAAQ0D,MAAxB,UACE,cAACnD,EAAA,EAAD,CAAQ+D,MAAI,EAAZ,SACE,cAAC1D,EAAA,EAAD,CACET,UAAWH,EAAQrH,MACnBkI,QAAS,QACTC,UAAW,KAHb,SAKGnI,MAGL,eAAC4H,EAAA,EAAD,CAAQgE,QAAM,EAAd,UACE,cAAC3D,EAAA,EAAD,CAAYT,UAAWH,EAAQrH,MAAOkI,QAAS,KAAMC,UAAW,KAAhE,SACGnI,IAEH,cAAC6L,GAAA,EAAD,CACErE,UAAWH,EAAQ8D,UACnB7C,MAAM,YACNc,aAAW,OACXrB,QAAS,kBAAMyD,KAJjB,SAMGD,cChEPd,GAAW1D,YAAW,CAC1B+E,aAAc,CACZC,UAAW,SACXnC,OAAQ,0CACRoC,QAAS,KAGAC,GAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SACnB7E,EAAUoD,KAChB,OAAO,qBAAKjD,UAAWH,EAAQyE,aAAxB,SAAuCI,K,oBCN1CzB,GAAW1D,YAAW,CAC1BoF,OAAQ,CACNnC,QAAS,OACToC,eAAgB,eAChBlF,WAAY,kBACZmF,wBAAyB,GACzBC,uBAAwB,GACxB1C,OAAQ,IAEV2C,IAAK,GACLpB,UAAW,KAEAqB,GAAS,SAAC,GAIJ,IAHjBjB,EAGgB,EAHhBA,aACAC,EAEgB,EAFhBA,eACAiB,EACgB,EADhBA,cAEMpF,EAAUoD,KAChB,OACE,qBAAKjD,UAAWH,EAAQ8E,OAAxB,SACE,eAACvE,EAAA,EAAD,CAAQ+D,MAAI,EAAZ,UACE,cAACE,GAAA,EAAD,CACErE,UAAWH,EAAQkF,IACnBG,MAAO,CAAE9B,UAAW,OAAQC,SAAU,QACtCvC,MAAM,UACNP,QAAS,WACP0E,KALJ,SAQE,cAAC,KAAD,MAEF,cAACZ,GAAA,EAAD,CACErE,UAAWH,EAAQ8D,UACnB7C,MAAM,YACNc,aAAW,OACXrB,QAAS,kBAAMyD,KAJjB,SAMGD,UC/BLd,GAAW1D,YAAW,CAC1B+B,KAAM,CACJkB,QAAS,OACTG,cAAe,SACf6B,QAAS,EACT3D,MAAO,oBACPwC,SAAU,IACV3D,WAAYL,EACZ+C,OAAQ,qBACRsB,SAAU,SACV3D,SAAU,YAEZoF,eAAgB,CACdpF,SAAU,WACVyC,QAAS,OACT3B,MAAO,oBACPuB,OAAQ,4BACRgD,iBAAkB,WAClB1F,WAAY,yBACZ4D,aAAc,IAGhB9I,KAAM,CACJ2H,OAAQ,EACRpC,SAAU,WACVsF,SAAU,UAGDC,GAAUpE,aACrB,YAOiB,IANf1I,EAMc,EANdA,MACAuL,EAKc,EALdA,aACAW,EAIc,EAJdA,SACAV,EAGc,EAHdA,eACAb,EAEc,EAFdA,IACA8B,EACc,EADdA,cAEMpF,EAAUoD,KAChB,OACE,qBAAKjD,UAAWH,EAAQyB,KAAxB,SACE,sBAAKtB,UAAWH,EAAQsF,eAAxB,UACE,sBAAKnF,UAAWH,EAAQrF,KAAxB,UACE,cAAC,GAAD,CACEuJ,aAAcA,EACdC,eAAgBA,EAChBxL,MAAOA,EACP2K,IAAKA,IAEP,cAAC,GAAD,UAAWuB,OAGb,cAAC,GAAD,CACEO,cAAeA,EACflB,aAAcA,EACdC,eAAgBA,Y,wCClEtB1E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,KAAM,CACJkB,QAAS,OACTG,cAAe,SACf6B,QAAS,EACT3D,MAAO,oBACPwC,SAAU,IACV3D,WAAYL,EACZ+C,OAAQ,qBACRsB,SAAU,SACV3D,SAAU,gBAIDwF,GAAc,WACzB,IAAM1F,EAAUP,KAChB,OAAO,cAACkG,EAAA,EAAD,CAAKxF,UAAWH,EAAQyB,QCd3B2B,GAAW1D,YAAW,CAC1B+B,KAAM,KAEKmE,GAAiB,SAAC,GAAqC,EAAnCf,SACfzB,KAChB,OAAO,cAAC9B,GAAA,EAAD,+BCFIuE,GAAW,SAAC,GAA4B,IAA1BlO,EAAyB,EAAzBA,KACzB,QfmC2CqD,IenCxBrD,EAAKgD,KfmCMlC,SenCC,OAAO,KADY,MAEhBd,EAAKgD,KAA/BlC,EAF0C,EAE1CA,SAAUG,EAFgC,EAEhCA,KAAMF,EAF0B,EAE1BA,MACxB,OACE,4CACYD,EADZ,QAEQG,EAFR,SAGSF,EACP,cAAC,GAAD,QCROoN,GAAe,SAAC,GAAgC,IAA9BnO,EAA6B,EAA7BA,KAC7B,MhB+BmC,kBgB/BRA,EAAKgD,KAAc,KAE5C,6CACahD,EAAKgD,KAChB,cAAC,GAAD,QCFOoL,GAAiB,SAAC,GAAgC,IjBqB7DpL,EiBrB+BhD,EAA6B,EAA7BA,KAC/B,OjBoBAgD,EiBpB6BhD,EAAKgD,KjBsB3BqL,MAAMC,QAAQtL,GiBpBnB,iDAEGhD,EAAKgD,KAAKV,KAAI,SAACC,GAAD,OACb,8BAAMA,EAAGjC,YAEX,cAAC,GAAD,OAP4C,MCJrCiO,GAAa,SAAC,GAAgC,IAA9BvO,EAA6B,EAA7BA,KAC3B,MlB4BmC,kBkB5BVA,EAAKgD,KAAc,KAE1C,yCAEGhD,EAAKgD,KACN,cAAC,GAAD,QCAOwL,GAAmB9E,aAAS,WACvC,IAAM5D,EAAU1D,EAAM0D,QACtB,GAAgB,OAAZA,EAAkB,OAAO,cAAC,GAAD,IAC7B,IAAM9E,EAAQ8E,EAAQ9E,MAChBuL,EAAezG,EAAQjD,WAC3B,cAAC,KAAD,IAEA,cAAC,KAAD,IAGI8I,EAAM7F,EAAQ5E,UA8BpB,OACE,mCACE,cAAC4M,GAAD,CACEL,cA7BgB,WACpBxI,EAAYwI,eAAc,IA6BtB9B,IAAKA,EACL3K,MAAOA,EACPwL,eAnCiB,WACrBpK,EAAMqM,eAmCFlC,aAAcA,EALhB,SAOE,cAAC,GAAD,UA/Be,WACnB,OAAQzG,EAAQtF,MACd,IAAK,OACH,OAAOsF,EAAQ/C,OACb,cAAC,GAAD,CAAU/C,KAAM8F,IAIpB,IAAK,QACH,MAA0B,UAAnBA,EAAQ/C,OACb,cAAC,GAAD,CAAY/C,KAAM8F,IAElB,cAAC,GAAD,CAAgB9F,KAAM8F,IAE1B,IAAK,MACH,MAA0B,UAAnBA,EAAQ/C,OACb,cAAC,GAAD,CAAU/C,KAAM8F,IAEhB,cAAC,GAAD,CAAc9F,KAAM8F,KAaX4I,Y,UC1Db5G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,KAAM,CACJT,MAAO,eAET0B,UAAW,CACT7C,WAAY,uBACZ8E,QAAS,WACTpC,OAAQ,QACRI,QAAS,OACTiB,WAAY,eAIH0C,GAAWjF,aAAS,WAC/B,IAAMrB,EAAUP,KAChB,OACE,cAAC8G,GAAA,EAAD,CACEC,OAAQ,OACRrP,KAAMyF,EAAYyC,SAClBoH,QAAS,WACP7J,EAAY+D,gBAAe,IAE7B+F,OAAQ,WACN9J,EAAY+D,gBAAe,IAE7BR,UAAWH,EAAQyB,KATrB,SAWE,cAACkE,EAAA,EAAD,CAAKxF,UAAWH,EAAQ0C,UAAxB,SACE,cAACnC,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACwC,GAAD,a,oBCxBJI,GAAW1D,YAAW,CAC1B+B,KAAM,KAEKkF,GAAatF,aAAS,YAAkC,EAA/BwD,SACpBzB,KAEhB,OADA/I,QAAQC,IAAI+D,YAAKa,EAAWnI,YAE1B,cAAC6P,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7C5P,KAAM+H,EAAWlI,YACjBgQ,iBAAkB,IAClBP,QAAS,WACPvH,EAAWlI,aAAc,GAL7B,SAQE,cAACiQ,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBhI,EAAWnI,iB,oBClBpCqM,GAAW1D,YAAW,CAC1ByH,SAAU,CACRlG,MAAO,mBAETmG,OAAQ,CACNlH,SAAU,QACVmH,OAAQ,IACR7K,IAAK,MACL8K,KAAM,SAGGC,GAASlG,aAAS,YAA8B,EAA3BwD,SAA4B,IACtD7E,EAAUoD,KAChB,OACE,cAACuC,EAAA,EAAD,CAAKxF,UAAWH,EAAQoH,OAAxB,SACE,cAACI,GAAA,EAAD,CAAUrH,UAAWH,EAAQmH,SAAUhQ,MAAM,EAA7C,SACE,cAACsQ,GAAA,EAAD,WCpBKC,GAAkBrG,aAAS,WACtC,OAAO,cAACkG,GAAD,OCGH9H,GAAYC,YAAW,CAC3B+B,KAAM,CACJkB,QAAS,OACToC,eAAgB,gBAEhB/D,MAAO,IACPuB,OAAQ,GACRD,OAAQ,SACRzC,WAAY,eAEd8H,MAAO,CACL3G,MAAO,GACPuB,OAAQ,GACRiB,SAAU,GACVD,UAAW,GACXiC,SAAU,GACVoC,UAAW,GACXnE,aAAc,IAEhBoE,SAAU,CACR3H,SAAU,WACVyD,SAAU,EACVhB,QAAS,OACTiB,WAAY,SACZe,QAAS,EACTmD,aAAc,aAAetI,GAE/B7G,MAAO,CACLuH,SAAU,WACV2D,SAAU,SACVkE,WAAY,SACZC,aAAc,WACdxC,SAAU,oBACVvE,MAAOzB,EACPyI,WAAY,KAEdC,IAAK,KAUMC,GAAY9G,aACvB,YAAoD,IAAjDiC,EAAgD,EAAhDA,IAAKtJ,EAA2C,EAA3CA,SAAU0G,EAAiC,EAAjCA,QAAS/H,EAAwB,EAAxBA,MACnBqH,EAAUP,KAEhB,OACE,sBAAKU,UAAWH,EAAQyB,KAAMf,QAASA,EAAvC,UACE,cAAC0D,GAAA,EAAD,CAAWjE,UAAWH,EAAQ2H,MAAOtD,MAAOf,EAAK3K,MAAM,QACvD,qBAAKwH,UAAWH,EAAQ6H,SAAxB,SACE,cAACjH,EAAA,EAAD,CAAYT,UAAWH,EAAQrH,MAAOkI,QAAS,KAA/C,SACGlI,MAGL,cAACgN,EAAA,EAAD,CAAKxF,UAAWH,EAAQkI,IAAxB,SAA8BlO,UCrC/B,IAAMoO,GAAqB/G,aAChC,YAAuC,IAApC1J,EAAmC,EAAnCA,KACK2L,EAAM3L,EAAKkB,UACXmB,EACe,aAAnBD,EAAMkC,UAA2BtE,EAAK6C,WACpC,cAAC,KAAD,CAAc6K,MAAO,CAAEgD,SAAU,GAAIpH,MAAO,YAC1C,KAKAtI,EAAQhB,EAAKgB,MAEnB,OACE,cAACwP,GAAD,CAEExP,MAAOA,EACP2K,IAAKA,EACLtJ,SAAUA,EACV0G,QAZY,WACd3G,EAAMuO,WAAW3Q,GACjBiF,EAAYwI,eAAc,KAMnBzN,EAAKM,W,uCC/BZwH,GAAYC,YAAW,CAC3B+B,KAAM,CACJkB,QAAS,OACToC,eAAgB,gBAChB/D,MAAO,IACPuB,OAAQ,IAEVgG,MAAO,CACLvH,MAAO,IACPyC,aAAc,GACd5D,WAAY,sBACZoB,MAAOzB,EACPqD,OAAQ,aAAerD,EACvBmF,QAAS,GAEX6D,QAAS,GACTnG,MAAO,CACLnC,SAAU,YAGZuI,WAAY,CACVzH,MAAO,GACPuB,OAAQ,GACR1C,WAAYL,EACZiE,aAAc,MAaLiF,GAASrH,aACpB,YAMoB,IALlBjD,EAKiB,EALjBA,YACAuK,EAIiB,EAJjBA,eACA/F,EAGiB,EAHjBA,WACAgG,EAEiB,EAFjBA,aAGM5I,GADW,EADjBlB,UAEgBW,MACVoJ,EAAqBjG,EAAW3I,KAAI,SAACC,GAAD,OACxCA,EAAGqH,QAAUoH,EAAiBzO,EAAG9C,KAAO,QAM1C,OACE,uBAAM0R,SAAa,SAAClN,GAChBA,EAAEmN,iBACF3K,KAEF+B,UAAWH,EAAQyB,KAJrB,UAKE,cAACb,EAAA,EAAD,CAAYT,UAAWH,EAAQqC,MAA/B,SAAuCwG,IACvC,cAACG,GAAA,EAAD,CACEzH,MAAOxH,EAAMgC,WACbiG,SAAU,SAACpG,GACTgN,EAAahN,EAAEqG,OAAOV,OAdT,SAAC3F,GACpB7B,EAAMgC,WAAaH,EAcbqN,CAAarN,EAAEqG,OAAOV,QAExBpB,UAAWH,EAAQuI,MAEnBW,YAAW,0BAAqBP,GAChCQ,WAAY,CAAE,aAAc,kBAG9B,cAAC1I,EAAA,EAAD,CACEN,UAAWH,EAAQyI,WACnB1G,aAAW,SACXrB,QAAS,WACPtC,KAJJ,SAOE,cAAC,KAAD,YCnFGgL,GAAkB/H,aAAS,WAAO,IAAD,EACVgI,mBAAS,IADC,oBACrCvK,EADqC,KAC1B8J,EAD0B,KAe5CU,qBAAU,WACe,aAAnBvP,EAAMkC,UAAyBlC,EAAMqE,YAAYrE,EAAMgC,cAC1D,CAAC+C,IACJ,IAAM6J,EAAiB/L,EAAYC,aAMnC,OACE,cAAC,GAAD,CACEiC,UAAWA,EACX8J,aAAcA,EACdxK,YATgB,WAClBjD,EAAgBE,OAASsN,EACN,aAAnB5O,EAAMkC,SAA0BlC,EAAMqE,YAAYU,GAhBlC,WAChB,GAAIA,EAAUyK,QAAU,EAGtB,OAFArK,EAAWxH,gBAAgB,mHAC3BwH,EAAW3H,kBAAiB,GAG5BwC,EAAMyP,qBAAqB,IAAM1K,GACjClC,EAAY6M,oBASiDC,IAQ7Df,eAAgBA,EAChB/F,WAAYA,QC9BZnD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,KAAM,CACJkB,QAAS,OACTG,cAAe,SAEf6B,QAAS,EACTnB,SAAU,IACV3D,WAAYL,EACZ+C,OAAQ,qBACRsB,SAAU,UAEZ8F,UAAW,CACTjF,UAAW,QAEbkF,aAAc,CACZjF,QAAS,EACT1D,MAAOzB,GAETqK,gBAAiB,CACfnF,UAAW,YAIFoF,GAAU,SAAC,GAKJ,IAJlBC,EAIiB,EAJjBA,aACApS,EAGiB,EAHjBA,KACAqS,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,aAEMjK,EAAUP,KAGVyK,EAAWvS,EAAKsC,KAAI,SAACC,GACzB,QAAWc,IAAPd,EACF,OACE,cAACkO,GAAD,CAAyDzQ,KAAMuC,GAA/D,UAA4BA,EAAGjC,QAA/B,OAAwCkS,KAAKC,cAInD,OACE,eAAClH,GAAA,EAAD,CAAO/C,UAAWH,EAAQyB,KAA1B,UACE,cAAC2H,GAAD,IACA,cAACzD,EAAA,EAAD,CAAKxF,UAAWH,EAAQ4J,aAAxB,SACE,cAAChJ,EAAA,EAAD,CAAYC,QAAS,SAArB,SAAgCkJ,MAElC,qBACEM,IAAKL,EACLM,SAAUL,EACV9J,UAAWH,EAAQ6J,gBAHrB,SAKGK,QChDIK,GAAmBlJ,aAC9B,YAAwC,EAArCwD,SAAsC,IACjCmF,EAAcQ,iBAAuB,MAE3ClB,qBAAU,WAAO,IAAD,EACd,UAAAU,EAAYS,eAAZ,SAAqBC,SAAS,EAAG,KAChC,CAAC9N,EAAYC,eAYhByM,qBAAU,WACR,GAAInO,EAAgBC,SAAU,CAC5B,GAAuB,aAAnBrB,EAAMkC,SAER,YADAd,EAAgBuB,aAAY,GAG9BvB,EAAgBoC,qBAEjB,CAACpC,EAAgBC,WACpB,IAAM2O,EAAenN,EAAYC,aAE7BlF,EAAOoC,EAAMpC,KACjB,OACE,cAAC,GAAD,CACEoS,aAAcA,EACdpS,KAAMA,EACNqS,YAAaA,EACbC,aA3BJ,SAAsBrO,GAElBA,EAAEqG,OAAO0I,cACN/O,EAAEqG,OAAO2I,WACPC,OAAOC,YAAclP,EAAEqG,OAAO8I,wBAAwBvO,MAC3D,KAEArB,EAAgBuB,aAAY,SCH9B+C,GAAYC,YAAW,CAC3B+B,KAAM,CACJmG,UAAW,QACX/H,WAAYL,EACZyB,MAAOzB,EACPgG,SAAU,SAEZ9C,UAAW,CACTC,QAAS,OACToC,eAAgB,UAGlBhE,OAAQ,CACN4B,QAAS,OACTG,cAAe,SACf9B,MAAO,QAETsE,eAAgB,CACdpF,SAAU,WACVyD,SAAU,EACVpB,OAAQ,qBACR1C,WAAY,eAEdsH,SAAU,CACRlG,MAAO,mBAETmG,OAAQ,CACNlH,SAAU,QACVmH,OAAQ,IACR7K,IAAK,MACL8K,KAAM,SAsCK0D,GAnCH3J,aAAS,WACnB,IAAMrB,EAAUP,KAChB,OACE,sBAAKU,UAAWH,EAAQyB,KAAxB,UACGvF,EAAYrE,QAAU,cAAC6P,GAAD,IAAsB,KAC7C,cAACuD,EAAA,EAAD,IACA,cAAC,GAAD,IACA,cAAC1K,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAAC8F,GAAD,MAEF,eAACjG,EAAA,EAAD,CAAWF,UAAWH,EAAQ0C,UAA9B,UACE,cAACnC,EAAA,EAAD,CAAQ2K,QAAM,EAAd,SACE,cAAClI,GAAD,MAEF,cAACzC,EAAA,EAAD,CAAQgE,QAAM,EAAd,SACE,cAACgG,GAAD,MAEF,cAAChK,EAAA,EAAD,CAAQ+D,MAAI,EAAZ,SACE,cAACqB,EAAA,EAAD,CAAKxF,UAAWH,EAAQsF,eAAxB,SACG1I,EAAY0C,cACX,cAAC6G,GAAD,IAEA,cAACoE,GAAD,QAIN,cAAChK,EAAA,EAAD,CAAQgE,QAAM,EAAd,SACE,cAAC4B,GAAD,SAGJ,cAACQ,GAAD,U,mBClFAhH,GAAQwL,aAAY,CACxBC,YAAa,CACXC,OAAQ,CACNC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,SAKVC,IAASC,OACP,eAAC,KAAD,CAAkBjM,MAAOA,GAAzB,UACE,cAAC,GAAD,IAAQ,OAEVkM,SAASC,eAAe,W","file":"static/js/main.13a23bb1.chunk.js","sourcesContent":["import {makeAutoObservable} from \"mobx\";\n\nclass ErrorStore {\n    errorStatus: number = 0\n    errorText: string = ''\n    isOpenError = false\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    toggleAlertError(open: boolean) {\n        this.isOpenError = open\n    }\n\n    changeTextError(text: string) {\n        this.errorText = text\n    }\n\n    changeStatusError(status: number) {\n        this.errorStatus = status\n    }\n\n    catchingErrors(error: any) {\n\n        this.toggleAlertError(true)\n        this.changeStatusError(error.response.status)\n        this.changeTextError(error.response.data.message)\n    }\n}\n\nexport default new ErrorStore()","import { makeAutoObservable } from \"mobx\";\n\nclass LoaderStore {\n  loading = false;\n  constructor() {\n    makeAutoObservable(this);\n  }\n  closeLoader() {\n    this.loading = false;\n  }\n  openLoader() {\n    this.loading = true;\n  }\n}\n\nexport default new LoaderStore();\n","import { z } from \"zod\";\n\nexport const MangaFromCharacterResponseZod = z.object({\n  mal_id: z.number(),\n  type: z.literal(\"manga\"),\n  name: z.string(),\n  url: z.string(),\n});\nexport const AnimeFromCharacterResponseZod = z.object({\n  mal_id: z.number(),\n  type: z.literal(\"anime\"),\n  name: z.string(),\n  url: z.string(),\n});\nexport const TopAnimeZod = z.object({\n  mal_id: z.number(),\n  episodes: z.number(),\n  score: z.number(),\n  title: z.string(),\n  rank: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n});\nexport const TopCharactersZod = z.object({\n  mal_id: z.number(),\n  name_kanji: z.string(),\n  title: z.string(),\n  rank: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n});\nexport const CharacterZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  name: z.string(),\n  alternative_names: z.string().array(),\n  anime: z.array(AnimeFromCharacterResponseZod),\n});\n\nexport const AnimeZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  title: z.string(),\n  synopsis: z.string(),\n});\nexport const FullCharacterZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  name: z.string(),\n  name_kanji: z.string(),\n  nicknames: z.array(z.string()),\n  about: z.string(),\n  animeography: z.array(AnimeFromCharacterResponseZod),\n});\nexport const FullAnimeZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  title: z.string(),\n  episodes: z.number(),\n  aired: z.object({\n    prop: z.object({\n      from: z.object({ day: z.number(), month: z.number(), year: z.number() }),\n      to: z.object({ day: z.number(), month: z.number(), year: z.number() }),\n    }),\n  }),\n  synopsis: z.string(),\n  score: z.number(),\n  rank: z.number(),\n});\n","import { makeAutoObservable } from \"mobx\";\nimport store from \"./store\";\n\nclass FavoriteStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  initialCheckFavorite = (mal_id: number) => {\n    return store.favorite\n      .map((el) => {\n        return el.mal_id;\n      })\n      .includes(mal_id);\n  };\n}\nexport default new FavoriteStore();\n","import {\n  AnimeType,\n  CharacterType,\n  FullAnimeType,\n  FullCharactersType,\n  TopAnimeType,\n  TopCharactersType,\n} from \"./types/types\";\nimport {\n  AnimeZod,\n  CharacterZod,\n  FullAnimeZod,\n  FullCharacterZod,\n} from \"./types/zod\";\nimport favoriteStore from \"./favoriteStore\";\n\nexport const animeShortFactory = (data: AnimeType): CardGeneral => {\n  console.log(\"animeShortFactory\");\n  AnimeZod.parse(data);\n  let card: CardGeneral = {\n    isFavorite: favoriteStore.initialCheckFavorite(data.mal_id), //проверка\n    type: \"short\",\n    entity: \"anime\",\n    mal_id: data.mal_id,\n    image_url: data.image_url,\n    title: data.title,\n    body: data.synopsis,\n  };\n  return card;\n};\nexport const characterShortFactory = (data: CharacterType): CardGeneral => {\n  CharacterZod.parse(data);\n  let card: CardGeneral = {\n    isFavorite: favoriteStore.initialCheckFavorite(data.mal_id),\n    type: \"short\",\n    entity: \"character\",\n    mal_id: data.mal_id,\n    image_url: data.image_url,\n    title: data.name,\n    body: data.anime,\n  };\n  return card;\n};\nexport const characterTopFactory = (data: TopCharactersType): CardGeneral => {\n  let card: CardGeneral = {\n    isFavorite: favoriteStore.initialCheckFavorite(data.mal_id),\n    type: \"top\",\n    entity: \"character\",\n    mal_id: data.mal_id,\n    image_url: data.image_url,\n    title: data.title,\n    body: data.name_kanji,\n  };\n  return card;\n};\n\nexport const animeTopFactory = (data: TopAnimeType): CardGeneral => {\n  let card: CardGeneral = {\n    isFavorite: favoriteStore.initialCheckFavorite(data.mal_id),\n    type: \"top\",\n    entity: \"anime\",\n    mal_id: data.mal_id,\n    image_url: data.image_url,\n    title: data.title,\n    body: {\n      rank: data.rank,\n      score: data.score,\n      episodes: data.episodes,\n    },\n  };\n  return card;\n};\n\nexport const characterFullFactory = (data: FullCharactersType): CardGeneral => {\n  FullCharacterZod.parse(data);\n  let card: CardGeneral = {\n    isFavorite: favoriteStore.initialCheckFavorite(data.mal_id),\n    type: \"full\",\n    entity: \"character\",\n    mal_id: data.mal_id,\n    image_url: data.image_url,\n    title: data.name,\n    body: {\n      about: data.about,\n      nicknames: data.nicknames,\n      name_kanji: data.name_kanji,\n      animeography: data.animeography,\n    },\n  };\n  return card;\n};\n\nexport const animeFullFactory = (data: FullAnimeType): CardGeneral => {\n  FullAnimeZod.parse(data);\n  let card: CardGeneral = {\n    isFavorite: favoriteStore.initialCheckFavorite(data.mal_id),\n    type: \"full\",\n    entity: \"anime\",\n    mal_id: data.mal_id,\n    image_url: data.image_url,\n    title: data.title,\n    body: {\n      episodes: data.episodes,\n      aired: data.aired,\n      synopsis: data.synopsis,\n      score: data.score,\n      rank: data.rank,\n    },\n  };\n  return card;\n};\n\n//todo переместить в types\nexport interface CardGeneral {\n  isFavorite: boolean;\n  type: \"top\" | \"full\" | \"short\";\n  entity: \"anime\" | \"character\";\n  mal_id: number;\n  image_url: string;\n  title: string;\n  body: Body;\n}\n\nexport type Body =\n  | ShortCharacterBody\n  | ShortAnimeBody\n  | TopAnimeBody\n  | TopCharactersType\n  | FullAnimeBody\n  | FullCharacterBody;\nexport type FullCharacterBody = {\n  about: string;\n  nicknames: string[];\n  name_kanji: string;\n  animeography: {\n    mal_id: number;\n    name: string;\n    type: string;\n    url: string;\n  }[];\n};\nexport type FullAnimeBody = {\n  episodes: number;\n  aired: {\n    prop: {\n      from: { day: number; month: number; year: number };\n      to: { day: number; month: number; year: number };\n    };\n  };\n  synopsis: string;\n  score: number;\n  rank: number;\n};\n\nexport type ShortAnimeBody = string;\n\nexport type ShortCharacterBody = {\n  mal_id: number;\n  name: string;\n  type: string;\n  url: string;\n}[];\nexport type TopCharacterBody = string;\n\nexport type TopAnimeBody = {\n  episodes: number;\n  rank: number;\n  score: number;\n};\n","import {\n  AnimeType,\n  CardType,\n  CharacterType,\n  FullCharactersType,\n  TopAnimeType,\n  TopCharactersType,\n} from \"./types\";\nimport {\n  Body,\n  FullAnimeBody,\n  FullCharacterBody,\n  ShortCharacterBody,\n  TopAnimeBody,\n} from \"../factory\";\n\nexport function characterGuard(data: CardType): data is CharacterType {\n  return (data as CharacterType).alternative_names !== undefined;\n}\n\nexport function animeGuard(data: CardType): data is AnimeType {\n  return (data as AnimeType).synopsis !== undefined;\n}\n\nexport function topAnimeGuard(data: CardType): data is TopAnimeType {\n  return (data as TopAnimeType).score !== undefined;\n}\n\nexport function topCharactersGuard(data: CardType): data is TopCharactersType {\n  return (data as TopCharactersType).name_kanji !== undefined;\n}\n\nexport function ShortCharacterBodyGuard(\n  body: Body\n): body is ShortCharacterBody {\n  return Array.isArray(body as ShortCharacterBody);\n}\nexport function ShortAnimeBodyGuard(body: Body): body is string {\n  return typeof (body as string) === \"string\";\n}\nexport function TopCharacterBodyGuard(body: Body): body is string {\n  return typeof (body as string) === \"string\";\n}\n\nexport function TopAnimeGuard(body: Body): body is TopAnimeBody {\n  return (body as TopAnimeBody).episodes !== undefined;\n}\nexport function FullCharacterBodyGuard(body: Body): body is FullCharacterBody {\n  return (body as FullCharacterBody).nicknames !== undefined;\n}\nexport function FullAnimeBodyGuard(body: Body): body is FullAnimeBody {\n  return (body as FullAnimeBody).aired !== undefined;\n}\n\n// | ShortCharacterBody\n// | ShortAnimeBody\n// | TopAnimeBody\n// | TopCharactersType\n// | FullAnimeBody\n// | FullCharacterBody;\n","import { makeAutoObservable } from \"mobx\";\nimport { CardType, CategoriesViewType } from \"./types/types\";\nimport axios from \"axios\";\nimport store from \"./store\";\nimport LayoutStore from \"./LayoutStore\";\nimport loaderStore from \"./loaderStore\";\nimport {\n  animeShortFactory,\n  animeTopFactory,\n  CardGeneral,\n  characterShortFactory,\n  characterTopFactory,\n} from \"./factory\";\nimport {\n  animeGuard,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"./types/guards\";\n\nclass Pagination {\n  fetching = false;\n  active: CategoriesViewType = \"topAnime\";\n  currentPage = {\n    topAnime: 1,\n    topCharacters: 1,\n    characters: 1,\n    anime: 1,\n    favorite: 0,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setFetching(fetchingBoolean: boolean) {\n    this.fetching = fetchingBoolean;\n  }\n\n  favoriteCheck(data: CardGeneral[]) {\n    data.forEach((e) => {\n      store.favorite\n        .map((event) => {\n          return event.mal_id;\n        })\n        .includes(e.mal_id)\n        ? (e.isFavorite = true)\n        : (e.isFavorite = false);\n    });\n  }\n\n  createPaginationString() {\n    console.log(\"зашли в создание\");\n    switch (this.active) {\n      case \"topAnime\": {\n        return `https://api.jikan.moe/v3/top/anime/${this.currentPage.topAnime}`;\n      }\n      case \"topCharacters\": {\n        return `https://api.jikan.moe/v3/top/characters/${this.currentPage.topCharacters}`;\n      }\n      case \"character\": {\n        console.log(\"создан запрос для персонажей\");\n        return `https://api.jikan.moe/v3/${store.action}/character?q=${store.textSearch}&limit=30&page=${this.currentPage.characters}`;\n      }\n      case \"anime\": {\n        console.log(\"создан запрос для Аниме\");\n        return `https://api.jikan.moe/v3/${store.action}/anime?q=${store.textSearch}&limit=30&page=${this.currentPage.anime}`;\n      }\n      case \"favorite\": {\n        return \"\";\n      }\n    }\n  }\n\n  async startPagination() {\n    console.log(\"pagination start\");\n    if (store.category !== \"favorite\") loaderStore.loading = true;\n    await axios\n      .get(\n        //todo proverka\n        this.createPaginationString()\n      )\n      .then((res) => {\n        console.log(this.createPaginationString());\n        if (res.data.top !== undefined) {\n          return res.data.top as CardType[];\n        }\n        if (res.data.results !== undefined) {\n          return res.data.results as CardType[];\n        }\n      })\n      .then((res) => {\n        if (res === undefined) return;\n        this.setFetching(false);\n        console.log(\"проверка\");\n        store.data = [];\n        let newCards = res.map((el) => {\n          if (animeGuard(el)) {\n            return animeShortFactory(el);\n          }\n          if (characterGuard(el)) {\n            return characterShortFactory(el);\n          }\n          if (topCharactersGuard(el)) {\n            return characterTopFactory(el);\n          }\n          if (topAnimeGuard(el)) {\n            return animeTopFactory(el);\n          }\n        });\n        console.log(newCards);\n        if (LayoutStore.categoryView === \"anime\") {\n          console.log(\"конкат\");\n          store.lastAnime = store.lastAnime.concat(newCards as CardGeneral[]);\n          store.data = store.lastAnime;\n          this.currentPage.anime += 1;\n        }\n\n        if (LayoutStore.categoryView === \"character\") {\n          //todo протипизировать нормально\n          store.lastCharacter = store.lastCharacter.concat(\n            newCards as CardGeneral[]\n          );\n          store.data = store.lastCharacter;\n          this.currentPage.characters += 1;\n        }\n        if (LayoutStore.categoryView === \"topAnime\") {\n          console.log(\"я присваиваю к топАниме\");\n          store.topAnime = store.topAnime.concat(newCards as CardGeneral[]);\n          store.data = store.topAnime;\n          this.currentPage.topAnime += 1;\n        }\n        if (LayoutStore.categoryView === \"topCharacters\") {\n          console.log(\"я присваиваю к топПерсонажам\");\n          store.topCharacter = store.topCharacter.concat(\n            newCards as CardGeneral[]\n          );\n          store.data = store.topCharacter;\n          this.currentPage.topCharacters += 1;\n        }\n        this.favoriteCheck(store.data);\n      })\n      .catch((error) => {\n        // ErrorStore.catchingErrors(error);\n        console.log(error);\n      })\n      .then(() => {\n        setTimeout(() => {\n          loaderStore.loading = false;\n        }, 500);\n      })\n      .finally(() => this.setFetching(false));\n  }\n\n  async startPaginationWithDelay() {\n    console.log(\"start\");\n    await setTimeout(async () => {\n      if (store.isThrottle) {\n        setTimeout(() => {\n          store.isThrottle = false;\n        }, 2000);\n        return;\n      }\n      await this.startPagination();\n    }, 2000);\n    store.isThrottle = true;\n  }\n  // startPaginationWithDelay() {\n  //   console.log(\"pagination\");\n  //   if (store.isThrottle) {\n  //     console.log(\"тротл\");\n  //     store.isWaiting = true;\n  //     console.log(\"ждем снятия ограничения\");\n  //     return;\n  //   } else {\n  //     console.log(\"startsearch\");\n  //     store.isThrottle = true;\n  //     this.startPagination();\n  //   }\n  //   setTimeout(() => {\n  //     console.log(\"4сек прошло снимаем ограничение\");\n  //     store.isThrottle = false;\n  //     if (store.isWaiting) {\n  //       console.log(\"ограничение снято, запрос отправлен\");\n  //       this.startPagination();\n  //     } else {\n  //       console.log(\"ограничение снято, запрос не отправлялся\");\n  //       return;\n  //     }\n  //   }, 4000);\n  //\n  //   store.isWaiting = false;\n  // }\n}\n\nexport const paginationStore = new Pagination();\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport axios from \"axios\";\nimport {\n  CategoriesType,\n  IResponseNew,\n  TopAnimeType,\n  TopCharactersType,\n} from \"./types/types\";\nimport LayoutStore from \"./LayoutStore\";\nimport ErrorStore from \"./ErrorStore\";\nimport { paginationStore } from \"./pagination\";\nimport loaderStore from \"./loaderStore\";\nimport {\n  animeShortFactory,\n  animeTopFactory,\n  CardGeneral,\n  characterShortFactory,\n  characterTopFactory,\n} from \"./factory\";\nimport { animeGuard, characterGuard } from \"./types/guards\";\n\nclass store {\n  textSearch = \"\";\n  favoriteBtnFilter = \"all\";\n  action = \"search\";\n  category: CategoriesType = \"anime\";\n  content: CardGeneral | null = null;\n  data: CardGeneral[] = [];\n  topAnime: CardGeneral[] = [];\n  topCharacter: CardGeneral[] = [];\n  lastAnime: CardGeneral[] = [];\n  lastCharacter: CardGeneral[] = [];\n  favorite: CardGeneral[] = [];\n  isThrottle = false;\n  isWaiting = false;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.startProgram();\n    this.getTopCharacters();\n    this.getTopAnime().then(() => {\n      //----------------->\n      //this.data = this.topAnime\n      LayoutStore.setCategoriesView(\"topAnime\");\n    });\n  }\n\n  startProgram() {\n    let locStorage = localStorage.getItem(\"favoriteArr\");\n    if (locStorage !== null) {\n      this.favorite = JSON.parse(locStorage);\n      // this.scrollFavorite(locStorage)\n    }\n  }\n\n  async setCategory(select: CategoriesType) {\n    this.content = null;\n    this.data = [];\n    this.category = select;\n    switch (select) {\n      case \"character\":\n        this.data = this.topCharacter;\n        //todo сменить top\n        paginationStore.active = \"topCharacters\";\n        LayoutStore.categoryView = \"topCharacters\";\n        this.textSearch = ''\n        break;\n      case \"anime\":\n        this.data = this.topAnime;\n        paginationStore.active = \"topAnime\";\n        LayoutStore.categoryView = \"topAnime\";\n        this.textSearch = ''\n        break;\n      case \"favorite\":\n        //this.data = this.favorite;\n        LayoutStore.categoryView = \"favorite\";\n        this.textSearch = '';\n        this.startSearch(this.textSearch)\n        break;\n      default:\n        console.error(select);\n    }\n  }\n\n  setContent(content: CardGeneral) {\n    this.content = content;\n    console.log(toJS(this.content));\n  }\n\n  setFavorite() {\n    if (this.content === null) return;\n    let pos = this.favorite.findIndex(\n      (item) => item.mal_id == this.content?.mal_id\n    );\n\n    if (pos !== -1) {\n      this.content.isFavorite = false;\n      this.favorite.splice(pos, 1);\n    } else {\n      this.content.isFavorite = true;\n      this.favorite.unshift(this.content);\n    }\n    localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite));\n  }\n\n  async getTopAnime() {\n    loaderStore.loading = true;\n    await axios\n      .get(`https://api.jikan.moe/v3/top/anime/1`)\n\n      .then<TopAnimeType[]>((res) => res.data.top)\n\n      .then((res) => {\n        let newCard = res.map((el) => animeTopFactory(el));\n        this.topAnime = newCard;\n        this.data = this.topAnime;\n        paginationStore.active = \"topAnime\";\n        paginationStore.currentPage.topAnime = 2;\n\n        this.favoriteCheck(this.topAnime);\n        return newCard;\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        loaderStore.loading = false;\n      });\n  }\n\n  async getTopCharacters() {\n    loaderStore.loading = true;\n    await axios\n      .get(`https://api.jikan.moe/v3/top/characters/1`)\n      .then<TopCharactersType[]>((res) => res.data.top)\n      .then((res) => {\n        let newCard = res.map((el) => characterTopFactory(el));\n        this.topCharacter = newCard;\n        this.data = this.topCharacter;\n        paginationStore.active = \"topCharacters\";\n        paginationStore.currentPage.topCharacters = 2;\n        this.favoriteCheck(this.topCharacter);\n        return newCard;\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        loaderStore.loading = false;\n      });\n  }\n\n  favoriteCheck(data: CardGeneral[]) {\n    data.forEach((e) => {\n      this.favorite\n        .map((event) => {\n          return event.mal_id;\n        })\n        .includes(e.mal_id)\n        ? (e.isFavorite = true)\n        : (e.isFavorite = false);\n    });\n  }\n\n  async startSearch(textInput: string) {\n    if (this.category === \"favorite\") {\n      let filterFavorite : CardGeneral[] = []\n      switch(this.favoriteBtnFilter) {\n        case \"all\" :  filterFavorite = this.favorite.filter((item) => {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n        });\n        break;\n        case \"anime\" : filterFavorite = this.favorite.filter((item) => {\n          return item.entity === \"anime\" && item.title.toLowerCase().includes(textInput.toLowerCase())\n        })\n        break;\n        case \"character\" : filterFavorite = this.favorite.filter((item) => {\n        \n           return item.entity === \"character\" && item.title.toLowerCase().includes(textInput.toLowerCase())\n         \n        })\n        break;\n      }\n\n      // let filterFavorite = this.favorite.filter((item) => {\n      //   return item.title.toLowerCase().includes(textInput.toLowerCase());\n      // });\n      // return item.title?.toLowerCase().includes(textInput.toLowerCase())\n      console.log(filterFavorite);\n      this.data = filterFavorite;\n      return;\n    }\n    loaderStore.loading = true;\n\n    await axios\n      .get(\n        `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=10&page=1`\n      )\n      .then<IResponseNew>((res) => res.data)\n      .then((res) => {\n        this.data = [];\n        let newCards = res.results.map((el) => {\n          if (animeGuard(el)) {\n            return animeShortFactory(el);\n          }\n          if (characterGuard(el)) {\n            return characterShortFactory(el);\n          }\n        });\n\n        if (this.category === \"anime\") {\n          this.lastAnime = newCards as CardGeneral[];\n          this.data = this.lastAnime;\n          paginationStore.active = \"anime\";\n          paginationStore.currentPage.anime = 2;\n        }\n        if (this.category === \"character\") {\n          this.lastCharacter = newCards as CardGeneral[];\n          this.data = this.lastCharacter;\n          paginationStore.active = \"character\";\n          paginationStore.currentPage.characters = 2;\n        }\n\n        this.favoriteCheck(this.data);\n      })\n      .catch((error) => {\n        ErrorStore.catchingErrors(error);\n      })\n      .then(() => {\n        paginationStore.setFetching(false);\n        setTimeout(() => {\n          loaderStore.loading = false;\n        }, 500);\n      });\n  }\n\n  startSearchWithDelay(ms: number, textInput: string) {\n    this.textSearch = textInput;\n    if (this.isThrottle) {\n      console.log(\"тротл\");\n      this.isWaiting = true;\n      console.log(\"ждем снятия ограничения\");\n      return;\n    } else {\n      console.log(\"startsearch\");\n      this.isThrottle = true;\n      this.startSearch(textInput);\n    }\n    setTimeout(() => {\n      console.log(\"4сек прошло снимаем ограничение\");\n      this.isThrottle = false;\n      if (this.isWaiting) {\n        console.log(\"ограничение снято, запрос отправлен\");\n        this.startSearch(textInput);\n      } else {\n        console.log(\"ограничение снято, запрос не отправлялся\");\n        return;\n      }\n    }, ms);\n\n    this.isWaiting = false;\n  }\n}\n\nexport default new store();\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport {\n  CategoriesType,\n  ActiveViewType,\n  CategoriesViewType,\n} from \"./types/types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView: CategoriesViewType = \"anime\";\n  isContentOpen = false;\n  constructor() {\n    makeAutoObservable(this);\n  }\n  toggleContent(isOpen: boolean) {\n    this.isContentOpen = isOpen;\n  }\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n    console.log(this.mobPanel);\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\n  setCategoriesView(category: CategoriesViewType) {\n    this.categoryView = category;\n  }\n}\n\nexport default new LayoutStore();\n","export const colors = {\n  bg: \"rgba(48, 68, 78, 1)\",\n  darkBG: \"rgba(31, 36, 43, 1)\",\n  primaryBG: \"rgba(34, 52, 60, 1)\",\n  secondaryBG: \"rgba(150, 167, 175, 1)\",\n  tertiaryBG: \"rgba(71, 94, 105, 1)\",\n  primaryText: \"rgba(241, 241, 241, 1)\",\n  secondaryText: \"rgba(150, 167, 175, 1)\",\n  yellow: \"rgba(255, 197, 66, 1)\",\n  orange: \"rgba(255, 151, 74, 1)\",\n  red: \"rgba(255, 86, 94, 1)\",\n  blue: \"rgba(0, 98, 255, 1)\",\n  green: \"rgba(64, 223, 159, 1)\",\n  gray: \"rgba(200,200,200,0.5)\",\n  white: \"rgba(250,250,250,1)\",\n};\n","import React from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    background: colors.darkBG,\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position={\"static\"} className={classes.wrapper} elevation={8}>\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\">\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types/types\";\nimport { observer } from \"mobx-react-lite\";\nimport { colors } from \"../../store/colors\";\nimport LayoutStore from \"../../store/LayoutStore\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    color: colors.secondaryText,\n\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n        console.log(store.category + \"  ctore.category\");\n        console.log(LayoutStore.categoryView + \"  LayoutStore.categoryView\");\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles} from \"@material-ui/core\";\r\nimport store from '../../../store/store';\r\nimport { observe } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginLeft: \"10px\"\r\n   \r\n  },\r\n}));\r\n\r\n\r\nexport const FavoriteFilterBtn = observer(() => {\r\n  const classes = useStyles();\r\n  \r\n  const handleChange = (event: any) => {\r\n    store.favoriteBtnFilter = event.target.value\r\n    store.startSearch(store.textSearch)\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   store.favoriteBtnFilter = \"all\"\r\n  // }, [])\r\n\r\n\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup defaultValue={store.favoriteBtnFilter} className={classes.root} aria-label=\"gender\" name=\"gender1\" value = {store.favoriteBtnFilter} onChange={handleChange}>\r\n        <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\r\n        <FormControlLabel value=\"anime\" control={<Radio />} label=\"Anime\" />\r\n        <FormControlLabel value=\"character\" control={<Radio />} label=\"Character\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n})","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types/types\";\nimport { CategoryButton } from \"./CategoryButton\";\nimport { colors } from \"../../store/colors\";\nimport { FavoriteFilterBtn } from \"./favoriteFilterBtn/favoriteBtnFilter\";\nimport store from \"../../store/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: colors.tertiaryBG,\n    height: \"calc(100vh - 96px)\",\n    boxShadow: \"4px 4px 8px 0px rgba(74, 97, 114, 0.2)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n        {\n          store.category === 'favorite' ?\n          <FavoriteFilterBtn /> : \"\"\n        }\n        \n      </ButtonGroup>\n      \n    </Paper>\n  );\n});\n","import React from \"react\";\nimport { CardMedia, Fab, Hidden, makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport interface GeneralInfoProp {\n  img: string;\n  title: string;\n  favoriteIcon: JSX.Element;\n  toggleFavorite: () => void;\n}\nconst useStyle = makeStyles({\n  generalInfo: {\n    display: \"flex\",\n    height: \"25vh\",\n  },\n  img: {\n    height: \"25vh\",\n    width: \"16vh\",\n    minHeight: \"25vh\",\n    minWidth: \"16vh\",\n    borderRadius: 20,\n  },\n  block: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n  title: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    margin: 4,\n  },\n  fabButton: {\n    position: \"absolute\",\n    right: 16,\n    bottom: 16,\n  },\n});\nexport const GeneralInfo = ({\n  img,\n  title,\n  favoriteIcon,\n  toggleFavorite,\n}: GeneralInfoProp) => {\n  const classes = useStyle();\n  return (\n    <div className={classes.generalInfo}>\n      <CardMedia image={img} className={classes.img} />\n      <div className={classes.block}>\n        <Hidden smUp>\n          <Typography\n            className={classes.title}\n            variant={\"body1\"}\n            component={\"h3\"}\n          >\n            {title}\n          </Typography>\n        </Hidden>\n        <Hidden xsDown>\n          <Typography className={classes.title} variant={\"h4\"} component={\"h3\"}>\n            {title}\n          </Typography>\n          <Fab\n            className={classes.fabButton}\n            color=\"secondary\"\n            aria-label=\"edit\"\n            onClick={() => toggleFavorite()}\n          >\n            {favoriteIcon}\n          </Fab>\n        </Hidden>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface SpecificProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  specificInfo: {\n    overflowY: \"scroll\",\n    height: \"calc(100vh - 25vh - 64px - 16px - 80px)\",\n    padding: 8,\n  },\n});\nexport const Specific = ({ children }: SpecificProp) => {\n  const classes = useStyle();\n  return <div className={classes.specificInfo}>{children}</div>;\n};\n","import React from \"react\";\nimport { Fab, Hidden, makeStyles } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nexport interface FooterProp {\n  favoriteIcon: JSX.Element;\n  toggleFavorite: () => void;\n  toggleContent: () => void;\n}\n\nconst useStyle = makeStyles({\n  footer: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    background: \"rgba(0,0,0,0.1)\",\n    borderBottomRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    height: 60,\n  },\n  fab: {},\n  fabButton: {},\n});\nexport const Footer = ({\n  favoriteIcon,\n  toggleFavorite,\n  toggleContent,\n}: FooterProp) => {\n  const classes = useStyle();\n  return (\n    <div className={classes.footer}>\n      <Hidden smUp>\n        <Fab\n          className={classes.fab}\n          style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n          color=\"primary\"\n          onClick={() => {\n            toggleContent();\n          }}\n        >\n          <ArrowBackIcon />\n        </Fab>\n        <Fab\n          className={classes.fabButton}\n          color=\"secondary\"\n          aria-label=\"edit\"\n          onClick={() => toggleFavorite()}\n        >\n          {favoriteIcon}\n        </Fab>\n      </Hidden>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { GeneralInfo } from \"./jsx/GeneralInfo\";\nimport { Specific } from \"./jsx/Specific/Specific\";\nimport { Footer } from \"./jsx/Footer\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { colors } from \"../../store/colors\";\ninterface IContent {\n  title: string;\n  img: string;\n  favoriteIcon: JSX.Element;\n  children: JSX.Element;\n  toggleFavorite: () => void;\n  toggleContent: () => void;\n}\nconst useStyle = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: 8,\n    width: \"calc(100% - 16px)\",\n    minWidth: 320,\n    background: colors.primaryBG,\n    height: \"calc(100vh - 64px)\",\n    overflow: \"hidden\",\n    position: \"relative\",\n  },\n  contentWrapper: {\n    position: \"absolute\",\n    display: \"grid\",\n    width: \"calc(100% - 16px)\",\n    height: \"calc(100vh - 64px - 16px)\",\n    gridTemplateRows: \"1fr 60px\",\n    background: \"rgba(250,250,250,0.01)\",\n    borderRadius: 20,\n  },\n\n  body: {\n    margin: 8,\n    position: \"relative\",\n    maxWidth: \"100%\",\n  },\n});\nexport const Content = observer(\n  ({\n    title,\n    favoriteIcon,\n    children,\n    toggleFavorite,\n    img,\n    toggleContent,\n  }: IContent) => {\n    const classes = useStyle();\n    return (\n      <div className={classes.root}>\n        <div className={classes.contentWrapper}>\n          <div className={classes.body}>\n            <GeneralInfo\n              favoriteIcon={favoriteIcon}\n              toggleFavorite={toggleFavorite}\n              title={title}\n              img={img}\n            />\n            <Specific>{children}</Specific>\n          </div>\n\n          <Footer\n            toggleContent={toggleContent}\n            favoriteIcon={favoriteIcon}\n            toggleFavorite={toggleFavorite}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { colors } from \"../../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: 8,\n    width: \"calc(100% - 16px)\",\n    minWidth: 320,\n    background: colors.primaryBG,\n    height: \"calc(100vh - 64px)\",\n    overflow: \"hidden\",\n    position: \"relative\",\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root} />;\n};\n","import React, { useState } from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\n\ninterface ToggleTypeCardProp {\n  children?: React.ReactNode;\n}\nconst useStyle = makeStyles({\n  root: {},\n});\nexport const ToggleTypeCard = ({ children }: ToggleTypeCardProp) => {\n  const classes = useStyle();\n  return <Button>Go to Full Card</Button>;\n};\n","import React from \"react\";\nimport { CardGeneral } from \"../../../../store/factory\";\nimport { TopAnimeGuard } from \"../../../../store/types/guards\";\nimport { ToggleTypeCard } from \"../ToggleTypeCard\";\n\ninterface TopAnimeProp {\n  data: CardGeneral;\n}\n\nexport const TopAnime = ({ data }: TopAnimeProp) => {\n  if (!TopAnimeGuard(data.body)) return null;\n  const { episodes, rank, score } = data.body;\n  return (\n    <div>\n      episodes={episodes}\n      rank={rank}\n      score={score}\n      <ToggleTypeCard />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CardGeneral } from \"../../../../store/factory\";\nimport { TopCharacterBodyGuard } from \"../../../../store/types/guards\";\nimport { ToggleTypeCard } from \"../ToggleTypeCard\";\n\ninterface TopCharacterProp {\n  data: CardGeneral;\n}\n\nexport const TopCharacter = ({ data }: TopCharacterProp) => {\n  if (!TopCharacterBodyGuard(data.body)) return null;\n  return (\n    <div>\n      nameJapan={data.body}\n      <ToggleTypeCard />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CardGeneral } from \"../../../../store/factory\";\nimport {\n  ShortCharacterBodyGuard,\n  TopCharacterBodyGuard,\n} from \"../../../../store/types/guards\";\nimport { ToggleTypeCard } from \"../ToggleTypeCard\";\n\ninterface TopCharacterProp {\n  data: CardGeneral;\n}\n\nexport const ShortCharacter = ({ data }: TopCharacterProp) => {\n  if (!ShortCharacterBodyGuard(data.body)) return null;\n  return (\n    <div>\n      animeographia=\n      {data.body.map((el) => (\n        <div>{el.mal_id}</div>\n      ))}\n      <ToggleTypeCard />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CardGeneral } from \"../../../../store/factory\";\nimport { ShortAnimeBodyGuard } from \"../../../../store/types/guards\";\nimport { ToggleTypeCard } from \"../ToggleTypeCard\";\n\ninterface TopCharacterProp {\n  data: CardGeneral;\n}\n\nexport const ShortAnime = ({ data }: TopCharacterProp) => {\n  if (!ShortAnimeBodyGuard(data.body)) return null;\n  return (\n    <div>\n      about=\n      {data.body}\n      <ToggleTypeCard />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { Placeholder } from \"./jsx/Placeholder\";\nimport { Specific } from \"./jsx/Specific/Specific\";\nimport { TopAnime } from \"./jsx/Specific/TopAnime\";\nimport { TopCharacter } from \"./jsx/Specific/TopCharacter\";\nimport { ShortCharacter } from \"./jsx/Specific/ShortCharacter\";\nimport { ShortAnime } from \"./jsx/Specific/ShortAnime\";\n\nexport const ContentContainer = observer(() => {\n  const content = store.content;\n  if (content === null) return <Placeholder />;\n  const title = content.title;\n  const favoriteIcon = content.isFavorite ? (\n    <FavoriteIcon />\n  ) : (\n    <FavoriteBorderIcon />\n  );\n  const subtitle = \"dddd\";\n  const img = content.image_url;\n  const toggleFavorite = () => {\n    store.setFavorite();\n  };\n  const toggleContent = () => {\n    LayoutStore.toggleContent(false);\n  };\n\n  const specificBody = () => {\n    switch (content.type) {\n      case \"full\":\n        return content.entity === \"anime\" ? (\n          <TopAnime data={content} />\n        ) : (\n          <TopAnime data={content} />\n        );\n      case \"short\":\n        return content.entity === \"anime\" ? (\n          <ShortAnime data={content} />\n        ) : (\n          <ShortCharacter data={content} />\n        );\n      case \"top\":\n        return content.entity === \"anime\" ? (\n          <TopAnime data={content} />\n        ) : (\n          <TopCharacter data={content} />\n        );\n    }\n  };\n  return (\n    <>\n      <Content\n        toggleContent={toggleContent}\n        img={img}\n        title={title}\n        toggleFavorite={toggleFavorite}\n        favoriteIcon={favoriteIcon}\n      >\n        <Specific>{specificBody()}</Specific>\n      </Content>\n    </>\n  );\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"../Category/Category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React from \"react\";\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport ErrorStore from \"../store/ErrorStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\n\ninterface ErrorAlertProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  root: {},\n});\nexport const ErrorAlert = observer(({ children }: ErrorAlertProp) => {\n  const classes = useStyle();\n  console.log(toJS(ErrorStore.errorText));\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={ErrorStore.isOpenError}\n      autoHideDuration={6000}\n      onClose={() => {\n        ErrorStore.isOpenError = false;\n      }}\n    >\n      <Alert severity=\"error\">{ErrorStore.errorText}</Alert>\n    </Snackbar>\n  );\n});\n","import React from \"react\";\nimport { Backdrop, Box, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface LoaderProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\",\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\",\n  },\n});\nexport const Loader = observer(({ children }: LoaderProp) => {\n  const classes = useStyle();\n  return (\n    <Box className={classes.loader}>\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress />\n      </Backdrop>\n    </Box>\n  );\n});\n","import React from \"react\";\nimport { Loader } from \"./Loader\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const LoaderContainer = observer(() => {\n  return <Loader />;\n});\n","import React, { ReactNode } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { observer } from \"mobx-react-lite\";\nimport { colors } from \"../../../store/colors\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // width: 312,\n    width: 300,\n    height: 60,\n    margin: \"16px 0\",\n    background: \"transparent\",\n  },\n  media: {\n    width: 60,\n    height: 60,\n    minWidth: 60,\n    minHeight: 60,\n    maxWidth: 60,\n    maxHeight: 60,\n    borderRadius: 99,\n  },\n  titleBox: {\n    position: \"relative\",\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: 8,\n    borderBottom: \"1px solid \" + colors.gray,\n  },\n  title: {\n    position: \"absolute\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    maxWidth: \"calc(100% - 16px)\",\n    color: colors.white,\n    fontWeight: 200,\n  },\n  fav: {},\n});\n\ninterface ICardSmall {\n  title: string;\n  img: string;\n  favorite: JSX.Element | null;\n  onClick: () => void;\n}\n\nexport const CardSmall = observer(\n  ({ img, favorite, onClick, title }: ICardSmall) => {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.root} onClick={onClick}>\n        <CardMedia className={classes.media} image={img} title=\"img\" />\n        <div className={classes.titleBox}>\n          <Typography className={classes.title} variant={\"h5\"}>\n            {title}\n          </Typography>\n        </div>\n        <Box className={classes.fav}>{favorite}</Box>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { CardSmall } from \"./CardSmall\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport store from \"../../../store/store\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { observer } from \"mobx-react-lite\";\nimport { CardGeneral } from \"../../../store/factory\";\n\ninterface CardSmallContainerProp {\n  data: CardGeneral;\n}\n\nfunction TextDescription() {\n  return null;\n}\n\n// export const CardSmallContainer = ({data}: CardSmallContainerProp) => {\n//     const title = data.title || data.name\n//     const img = data.image_url\n//     const favorite = store.category !== \"favorite\" && data.isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : null\n//     const textDescription = <TextBlock description={data.synopsis} category={layoutStore.categoryView} title={title}/>\n//     const onClick = () => {\n//         store.setContent(data);\n//         LayoutStore.toggleActiveView(\"content\");\n//     }\n//     return (\n//         <CardSmall key={data.mal_id} textDescription={textDescription} img={img} favorite={favorite} onClick={onClick}/>\n//     );\n// };\nexport const CardSmallContainer = observer(\n  ({ data }: CardSmallContainerProp) => {\n    const img = data.image_url;\n    const favorite =\n      store.category !== \"favorite\" && data.isFavorite ? (\n        <FavoriteIcon style={{ fontSize: 25, color: \"indigo\" }} />\n      ) : null;\n    const onClick = () => {\n      store.setContent(data);\n      LayoutStore.toggleContent(true);\n    };\n    const title = data.title;\n\n    return (\n      <CardSmall\n        key={data.mal_id}\n        title={title}\n        img={img}\n        favorite={favorite}\n        onClick={onClick}\n      />\n      // <CardSmall\n      //   ent={ent}\n      //   type={type}\n      //   key={data.mal_id}\n      //   img={img}\n      //   title={data.title}\n      //   favorite={favorite}\n      //   onClick={onClick}\n      // />\n    );\n  }\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { observer } from \"mobx-react-lite\";\nimport { Typography } from \"@material-ui/core\";\nimport { colors } from \"../../../store/colors\";\nimport { CategoriesType, CategoriesViewType } from \"../../../store/types/types\";\nimport store from \"../../../store/store\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: 300,\n    height: 60,\n  },\n  input: {\n    width: 216,\n    borderRadius: 12,\n    background: \"rgba(26, 40, 47, 1)\",\n    color: colors.white,\n    border: \"1px solid \" + colors.gray,\n    padding: 4,\n  },\n  divider: {},\n  label: {\n    position: \"absolute\",\n  },\n\n  iconButton: {\n    width: 60,\n    height: 60,\n    background: colors.green,\n    borderRadius: 13,\n  },\n});\n\ninterface SearchProps {\n  startSearch: () => void;\n  activeCategory: CategoriesViewType;\n  categories: { value: CategoriesType; text: string }[];\n  setTextInput: React.Dispatch<React.SetStateAction<string>>;\n  textInput: string;\n}\n\n//todo onEnter\nexport const Search = observer(\n  ({\n    startSearch,\n    activeCategory,\n    categories,\n    setTextInput,\n    textInput,\n  }: SearchProps) => {\n    const classes = useStyles();\n    const activeCategoryText = categories.map((el) =>\n      el.value === activeCategory ? el.text : null\n    );\n    const onChangeText = (e: any) => {\n      store.textSearch = e;\n\n    }\n    return (\n      <form onSubmit = { (e) => {\n          e.preventDefault()\n          startSearch();\n        }\n      } className={classes.root}>\n        <Typography className={classes.label}>{activeCategoryText}</Typography>\n        <InputBase\n          value={store.textSearch}\n          onChange={(e) => {\n            setTextInput(e.target.value);\n            onChangeText(e.target.value)\n          }}\n          className={classes.input}\n          //todo а если не аниме?\n          placeholder={`Start searching ${activeCategory}`}\n          inputProps={{ \"aria-label\": \"search Anime\" }}\n        />\n\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"search\"\n          onClick={() => {\n            startSearch();\n          }}\n        >\n          <SearchIcon />\n        </IconButton>\n      </form>\n    );\n  }\n);\n","import React, { useEffect, useState } from \"react\";\nimport store from \"../../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport { categories } from \"../../Category/Category\";\nimport ErrorStore from \"../../../store/ErrorStore\";\nimport { Search } from \"./Search\";\nimport { paginationStore } from \"../../../store/pagination\";\n\nexport const SearchContainer = observer(() => {\n  const [textInput, setTextInput] = useState(\"\");\n  const onChangeTextInput = (e: any) => {\n\n  }\n  const validator = () => {\n    if (textInput.length <= 3) {\n      ErrorStore.changeTextError(\"Введите больше 3 букв\");\n      ErrorStore.toggleAlertError(true);\n      return;\n    } else {\n      store.startSearchWithDelay(4000, textInput);\n      LayoutStore.setActiveCategory();\n    }\n  };\n  useEffect(() => {\n    if (store.category === \"favorite\") store.startSearch(store.textSearch);\n  }, [textInput]);\n  const activeCategory = LayoutStore.categoryView;\n  const startSearch = () => {\n    paginationStore.active = activeCategory;\n    store.category === \"favorite\" ? store.startSearch(textInput) : validator();\n  };\n\n  return (\n    <Search\n      textInput={textInput}\n      setTextInput={setTextInput}\n      startSearch={startSearch}\n      activeCategory={activeCategory}\n      categories={categories}\n    />\n  );\n});\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport { CardSmallContainer } from \"./CardSmall/CardSmallContainer\";\nimport { CardType } from \"../../store/types/types\";\nimport { colors } from \"../../store/colors\";\nimport { SearchContainer } from \"./Search/SearchContainer\";\nimport { CardGeneral } from \"../../store/factory\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    padding: 8,\n    minWidth: 320,\n    background: colors.primaryBG,\n    height: \"calc(100vh - 64px)\",\n    overflow: \"hidden\",\n  },\n  cardsList: {\n    overflowY: \"auto\",\n  },\n  resultsLabel: {\n    padding: 4,\n    color: colors.green,\n  },\n  cardsListScroll: {\n    overflowY: \"auto\",\n  },\n}));\n\nexport const Results = ({\n  resultsTitle,\n  data,\n  toResultRef,\n  scrollResult,\n}: ResultsProp) => {\n  const classes = useStyles();\n\n  //todo если нет поиска, то надо показывать всё подряд\n  const cardList = data.map((el) => {\n    if (el !== undefined)\n      return (\n        <CardSmallContainer key={`${el.mal_id}${Math.random()}`} data={el} />\n      );\n  });\n\n  return (\n    <Paper className={classes.root}>\n      <SearchContainer />\n      <Box className={classes.resultsLabel}>\n        <Typography variant={\"button\"}>{resultsTitle}</Typography>\n      </Box>\n      <div\n        ref={toResultRef}\n        onScroll={scrollResult}\n        className={classes.cardsListScroll}\n      >\n        {cardList}\n      </div>\n    </Paper>\n  );\n};\n\ninterface ResultsProp {\n  resultsTitle: string;\n  data: CardGeneral[];\n  toResultRef: React.RefObject<HTMLDivElement>;\n  scrollResult: (e: any) => void;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Results } from \"./Results\";\nimport { observer } from \"mobx-react-lite\";\nimport { paginationStore } from \"../../store/pagination\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport store from \"../../store/store\";\n\ninterface ResultsContainerProp {\n  children?: React.ReactNode;\n}\n\nexport const ResultsContainer = observer(\n  ({ children }: ResultsContainerProp) => {\n    const toResultRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      toResultRef.current?.scrollTo(0, 0);\n    }, [LayoutStore.categoryView]);\n\n    function scrollResult(e: any) {\n      if (\n        e.target.scrollHeight -\n          (e.target.scrollTop +\n            (window.innerHeight - e.target.getBoundingClientRect().top)) <\n        100\n      ) {\n        paginationStore.setFetching(true);\n      }\n    }\n    useEffect(() => {\n      if (paginationStore.fetching) {\n        if (store.category === 'favorite') {\n          paginationStore.setFetching(false);\n          return\n        }\n        paginationStore.startPagination();\n      }\n    }, [paginationStore.fetching]);\n    const resultsTitle = LayoutStore.categoryView;\n    //todo поменять с отображения resultsData на конкретные массивы\n    let data = store.data;\n    return (\n      <Results\n        resultsTitle={resultsTitle}\n        data={data}\n        toResultRef={toResultRef}\n        scrollResult={scrollResult}\n      />\n    );\n  }\n);\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport \"./index.css\";\nimport {\n  Box,\n  Container,\n  CssBaseline,\n  Hidden,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/AppBar/MobPanel\";\nimport { ErrorAlert } from \"./components/ErrorAlert\";\nimport { colors } from \"./store/colors\";\nimport loaderStore from \"./store/loaderStore\";\nimport { LoaderContainer } from \"./components/Loader/LoaderContainer\";\nimport { ResultsContainer } from \"./components/Results/ResultsContainer\";\nimport store from \"./store/store\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxHeight: \"100vh\",\n    background: colors.bg,\n    color: colors.orange,\n    maxWidth: \"100vw\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: \"transparent\",\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\",\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\",\n  },\n});\nconst App = observer(() => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {loaderStore.loading ? <LoaderContainer /> : null}\n      <CssBaseline />\n      <Appbar />\n      <Hidden mdUp>\n        <MobPanel />\n      </Hidden>\n      <Container className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <ResultsContainer />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.isContentOpen ? (\n              <ContentContainer />\n            ) : (\n              <ResultsContainer />\n            )}\n          </Box>\n        </Hidden>\n        <Hidden xsDown>\n          <ContentContainer />\n        </Hidden>\n      </Container>\n      <ErrorAlert />\n    </div>\n  );\n});\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createTheme, MuiThemeProvider } from \"@material-ui/core\";\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 800,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />{\" \"}\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}