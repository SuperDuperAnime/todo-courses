{"version":3,"sources":["store/LayoutStore.ts","store/ErrorStore.ts","store/store.ts","store/colors.ts","components/AppBar/AppBar.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Results/input/AnimeSearchInput.tsx","components/Results/CardSmall/CardSmall.tsx","store/types.ts","components/Results/CardSmall/TextBlock.tsx","components/Results/CardSmall/CardSmallContainer.tsx","components/Results/Results.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/BodyContent.tsx","components/Content/Character/AnimeListFromAnime.tsx","components/Content/ContentContainer.tsx","components/MobPanel.tsx","components/ErrorAlert.tsx","App.tsx","index.tsx","components/Content/Content.module.css"],"names":["activeView","mobPanel","categoryView","makeAutoObservable","this","isOpen","console","log","store","category","errorStatus","errorText","isOpenError","open","text","status","error","toggleAlertError","changeStatusError","response","changeTextError","data","message","textSearch","action","content","topAnime","topCharacter","searchData","favorite","favoriteData","loading","isThrottle","isWaiting","fetching","currentPage","topCharacters","animeCharacters","startProgram","getTopAnime","then","LayoutStore","setCategoriesView","getTopCharacters","locStorage","localStorage","getItem","JSON","parse","fetchingBoolean","select","toJS","pos","findIndex","item","mal_id","isFavorite","splice","unshift","setItem","stringify","a","axios","get","res","setFetching","concat","top","favoriteCheck","catch","finally","forEach","e","map","event","includes","textInput","results","ErrorStore","catchingErrors","setTimeout","ms","startSearch","locStorageData","length","arr","slice","colors","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","button","width","backgroundColor","buttonActive","CategoryButton","observer","Button","value","setCategory","root","margin","boxShadow","rootRow","container","categories","border","flexDirection","categoriesRow","Category","categoriesButton","el","Paper","ButtonGroup","cursor","input","marginLeft","flex","divider","label","left","fontSize","opacity","iconButton","AnimeSearchInput","useState","setTextInput","validator","startSearchWithDelay","setActiveCategory","onSubmit","preventDefault","InputBase","onChange","target","placeholder","inputProps","aria-label","media","borderRadius","fav","right","CardSmall","img","textDescription","Card","CardMedia","image","title","Box","AnimeFromCharacterResponseZod","z","object","number","type","literal","name","string","url","MangaFromCharacterResponseZod","image_url","alternative_names","array","anime","manga","synopsis","episodes","score","rank","animeography","characterGuard","undefined","animeGuard","topAnimeGuard","topCharactersGuard","useStyle","textWrapper","justifyContent","overflow","padding","textOverflow","subtitle","onlyTitle","TextBlock","description","gutterBottom","CardContent","CardSmallContainer","style","setContent","toggleActiveView","layoutStore","cardSmall","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","toResultRef","useRef","useEffect","current","scrollTo","cardList","Math","random","ref","onScroll","scrollHeight","scrollTop","window","innerHeight","getBoundingClientRect","Content","favoriteIcon","children","contentWrapper","header","smUp","Fab","fab","minHeight","minWidth","setFavorite","headerTitle","maxWidth","Placeholder","BodyContent","preSubtitle","preTitle","alt","src","preSubTitle","subTitle","AnimeListFromAnime","animeList","Link","href","ContentContainer","contentJSX","MobPanel","SwipeableDrawer","anchor","onClose","onOpen","ErrorAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","backdrop","loader","zIndex","App","CssBaseline","Backdrop","CircularProgress","smDown","xsDown","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4bf449b6.chunk.js","sourcesContent":["import { makeAutoObservable, toJS } from \"mobx\";\nimport {CategoriesType, ActiveViewType, CategoriesViewType} from \"./types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  \n  activeView: ActiveViewType = \"results\";\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView:CategoriesViewType= \"anime\";\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n    console.log(this.mobPanel)\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\nsetCategoriesView(category: CategoriesViewType){\n    this.categoryView = category\n}\n  toggleActiveView(activeView: ActiveViewType) {\n    this.activeView = activeView;\n  }\n}\n\nexport default new LayoutStore();\n","import {makeAutoObservable} from \"mobx\";\n\nclass ErrorStore {\n    errorStatus: number = 0\n    errorText: string = ''\n    isOpenError = false\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    toggleAlertError(open: boolean) {\n        this.isOpenError = open\n    }\n\n    changeTextError(text: string) {\n        this.errorText = text\n    }\n\n    changeStatusError(status: number) {\n        this.errorStatus = status\n    }\n\n    catchingErrors(error: any) {\n\n        this.toggleAlertError(true)\n        this.changeStatusError(error.response.status)\n        this.changeTextError(error.response.data.message)\n    }\n}\n\nexport default new ErrorStore()","import React, {useRef} from 'react'\nimport {makeAutoObservable} from \"mobx\";\nimport axios from \"axios\";\nimport {toJS} from \"mobx\";\nimport {animeData} from \"./Category/anime\";\nimport {naruto} from \"./Category/q=Naruto\";\nimport {CardType, CategoriesType, IResponse, IResponseTop} from \"./types\";\nimport LayoutStore from \"./LayoutStore\";\nimport ErrorStore from \"./ErrorStore\";\nimport {string} from \"zod\";\n\n\nclass store {\n\n    textSearch = '';\n    action = \"search\";\n    category: CategoriesType = \"anime\";\n    content: CardType | null = null;\n    data: CardType[] = [];\n    topAnime: CardType[] = [];\n    topCharacter: CardType[] = [];\n    searchData: CardType[] = [];\n    favorite: CardType[] = [];\n    favoriteData: CardType[] = [];\n    loading = false;\n    isThrottle = false;\n    isWaiting = false;\n    fetching = false;\n    currentPage = {\n        topAnime: 1,\n        topCharacters: 1,\n        animeCharacters: 1,\n        // characters: 1,\n        // anime: 1,\n        favorite: 0\n    };\n\n    constructor() {\n        makeAutoObservable(this);\n        this.startProgram();\n        this.getTopAnime().then(() => {\n            //----------------->\n            //this.data = this.topAnime\n            LayoutStore.setCategoriesView(\"topAnime\")\n        })\n\n        this.getTopCharacters()\n\n    }\n\n\n    startProgram() {\n        let locStorage = localStorage.getItem(\"favoriteArr\");\n        if (locStorage !== null) {\n           this.favorite = JSON.parse(locStorage);\n          // this.scrollFavorite(locStorage)\n        }\n        \n    }\n\n    setFetching(fetchingBoolean: boolean) {\n        this.fetching = fetchingBoolean\n    }\n\n\n    setCategory(select: CategoriesType) {\n        this.content = null;\n        this.data = [];\n        this.searchData = []\n        switch (select) {\n            case \"character\":\n                this.data = this.topCharacter\n                //todo сменить top\n                LayoutStore.categoryView = \"topCharacters\";\n                break\n            case \"anime\":\n                this.data = this.topAnime\n                LayoutStore.categoryView = \"topAnime\";\n                break\n            case \"favorite\":\n                this.data = this.favorite;\n                LayoutStore.categoryView = \"favorite\";\n                break\n            default:\n                console.error(select)\n        }\n        this.category = select;\n        console.log(this.category);\n\n    }\n\n    setContent(content: CardType) {\n        this.content = content;\n        console.log(toJS(this.content));\n    }\n\n    setFavorite() {\n        if (this.content === null) return;\n        let pos = this.favorite.findIndex(item => item.mal_id == this.content?.mal_id)\n\n        if (pos !== -1) {\n            this.content.isFavorite = false;\n            this.favorite.splice(pos, 1);\n        } else {\n            this.content.isFavorite = true;\n            this.favorite.unshift(this.content);\n        }\n        localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite));\n\n    }\n\n    async getTopAnime() {\n        this.loading = true;\n        await axios.get<IResponseTop>(`https://api.jikan.moe/v3/top/anime/${this.currentPage.topAnime}`)\n            .then((res) => {\n                this.setFetching(false)\n                this.topAnime = this.topAnime.concat(res.data.top)\n\n                this.data = this.topAnime\n                this.currentPage.topAnime += 1;\n\n                this.favoriteCheck(this.topAnime)\n\n            })\n            .catch((error) => console.log(error.response))\n            .then(() => {\n                this.loading = false;\n            })\n\n            .finally(\n                () => this.setFetching(false)\n            )\n\n    }\n\n    async getTopCharacters() {\n        this.loading = true;\n        axios.get<IResponseTop>(`https://api.jikan.moe/v3/top/characters/${this.currentPage.topCharacters}`)\n            .then(res => {\n                this.setFetching(false)\n                this.topCharacter = this.topCharacter.concat(res.data.top)\n                if (this.category === \"character\") {\n                    this.data = this.topCharacter\n                    this.currentPage.topCharacters += 1;\n                }\n                this.favoriteCheck(this.topCharacter)\n            })\n            .catch((error) => console.log(error.response))\n            .then(() => {\n                this.loading = false;\n            })\n            .finally(\n                () => this.setFetching(false)\n            )\n\n\n    }\n\n    favoriteCheck(data: CardType[]) {\n        data.forEach((e) => {\n            this.favorite\n                .map((event) => {\n                    return event.mal_id;\n                })\n                .includes(e.mal_id)\n                ? (e.isFavorite = true)\n                : (e.isFavorite = false);\n        });\n    }\n\n    async startSearch(textInput: string) {\n\n        if (this.category === \"favorite\") {\n            return;\n        }\n        this.loading = true;\n        let a =`https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=10&page=${this.currentPage.animeCharacters}`\n        console.log(a)\n        await axios\n            .get<IResponse>(\n                `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=10&page=${this.currentPage.animeCharacters}`\n            )\n            .then((res) => {\n                this.setFetching(false)\n                this.data = []\n                this.searchData = this.searchData.concat(res.data.results);\n                this.data = this.searchData;\n                this.favoriteCheck(this.data)\n                this.currentPage.animeCharacters +=1\n            })\n            .catch((error) => {\n                ErrorStore.catchingErrors(error)\n            })\n            .then(() => {\n                setTimeout(() => {\n                    this.loading = false;\n                }, 500);\n            })\n            .finally(\n                () => this.setFetching(false)\n            );\n    }\n\n\n    startSearchWithDelay(ms: number, textInput: string) {\n        this.textSearch = textInput;\n        if (this.isThrottle) {\n            console.log('тротл')\n            this.isWaiting = true\n            console.log('ждем снятия ограничения')\n            return\n        } else {\n            console.log('startsearch')\n            this.isThrottle = true\n            this.startSearch(textInput)\n\n        }\n        setTimeout(() => {\n            console.log('4сек прошло снимаем ограничение')\n            this.isThrottle = false\n            if (this.isWaiting) {\n                console.log('ограничение снято, запрос отправлен')\n                this.startSearch(textInput)\n            } else {\n                console.log('ограничение снято, запрос не отправлялся')\n                return\n            }\n        }, ms)\n\n        this.isWaiting = false\n    }\n//пока не вызывается, тестим\n    scrollFavorite(locStorageData: any) {\n        this.favoriteData = JSON.parse(locStorageData);\n        console.log(this.currentPage.favorite)\n        if(this.favoriteData.length > this.favorite.length ) {\n            this.setFetching(true)\n            let arr = this.favoriteData.slice(this.currentPage.favorite, this.currentPage.favorite+10)\n            this.setFetching(false)\n            //console.log(toJS(arr))\n            this.favorite = this.favorite.concat(arr);\n            this.data = this.favorite\n            this.currentPage.favorite +=5\n            console.log(toJS(this.favorite))\n            \n        }\n    }\n\n}\n\nexport default new store();\n","export const colors = {\n    darkBG: \"rgba(32, 40, 48, 1)\",\n    primaryBG: \"rgba(42, 60, 68, 1)\",\n    secondaryBG: 'rgba(150, 167, 175, 1)',\n    tertiaryBG: 'rgba(71, 94, 105, 1)',\n    primaryText: 'rgba(241, 241, 241, 1)',\n    secondaryText: 'rgba(150, 167, 175, 1)',\n    firstFill: 'rgba(255, 197, 66, 1)',\n    secondFill: 'rgba(255, 151, 74, 1)',\n    thirdFill: 'rgba(255, 86, 94, 1)',\n    fourthFill: 'rgba(255, 86, 94, 1)',\n    fifthFill: 'rgba(0, 98, 255, 1)',\n}","import React from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"64px\",\n    display: \"flex\",\n    background: colors.secondFill,\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position={\"static\"}\n      className={classes.wrapper}\n      color={\"transparent\"}\n      elevation={8}\n    >\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\">\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { observer } from \"mobx-react-lite\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    color: colors.secondaryText,\n\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { CategoryButton } from \"./CategoryButton\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: colors.tertiaryBG,\n    height: \"calc(100vh - 96px)\",\n    boxShadow: \"4px 4px 8px 0px rgba(74, 97, 114, 0.2)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n      </ButtonGroup>\n    </Paper>\n  );\n});\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport store from \"../../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport { Typography } from \"@material-ui/core\";\nimport { categories } from \"../../Category/Category\";\nimport ErrorStore from \"../../../store/ErrorStore\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 244,\n    height: 64,\n    cursor: \"pointer\",\n    margin: \"8px auto\",\n  },\n  input: {\n    marginLeft: 2,\n    flex: 1,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  label: {\n    position: \"absolute\",\n    top: 2,\n    left: 8,\n    fontSize: 10,\n    opacity: 0.7,\n  },\n\n  iconButton: {},\n});\n\nexport const AnimeSearchInput = observer(() => {\n  const classes = useStyles();\n  const [textInput, setTextInput] = useState(\"\");\n  const validator = () => {\n    if (textInput.length <= 3) {\n      ErrorStore.changeTextError(\"Введите больше 3 букв\");\n      ErrorStore.toggleAlertError(true);\n      return;\n    } else {\n      store.startSearchWithDelay(4000, textInput);\n      LayoutStore.setActiveCategory();\n    }\n  };\n  return (\n    <Paper\n      component=\"form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        validator();\n      }}\n      className={classes.root}\n    >\n      <Typography className={classes.label}>\n        {categories.map((el) => (el.value === store.category ? el.text : null))}\n      </Typography>\n      <InputBase\n        value={textInput}\n        onChange={(e) => {\n          setTextInput(e.target.value);\n        }}\n        className={classes.input}\n        //todo а если не аниме?\n        placeholder=\"Start searching Anime\"\n        inputProps={{ \"aria-label\": \"search Anime\" }}\n      />\n\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={validator}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n});\n","import React, { ReactNode } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 240,\n    background: \"rgba(255,255,255,0.5)\",\n    // minWidth: 250,\n    height: 64,\n    cursor: \"pointer\",\n    margin: \"8px auto\",\n  },\n  media: {\n    border: \"1px solid rgba(255,255,255,0.8)\",\n    width: 56,\n    height: 56,\n    borderRadius: \"100%\",\n    margin: 4,\n  },\n\n  fav: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    width: 25,\n    height: 25,\n  },\n});\n\ninterface ICardSmall {\n  textDescription: ReactNode;\n  img: string;\n  favorite: JSX.Element | null;\n\n  onClick: () => void;\n}\n\nexport const CardSmall = observer(\n  ({ img, favorite, textDescription, onClick }: ICardSmall) => {\n    const classes = useStyles();\n\n    return (\n      <Card className={classes.root} onClick={onClick}>\n        <CardMedia\n          className={classes.media}\n          image={img}\n          title=\"Contemplative Reptile\"\n        />\n        {textDescription}\n        <Box className={classes.fav}>{favorite}</Box>\n      </Card>\n    );\n  }\n);\n","import {z} from \"zod\";\n\nexport type CategoriesType = \"anime\" | \"character\" | \"favorite\"\nexport type ActiveViewType = 'results' | 'content'\nexport type CategoriesViewType = CategoriesType | 'topAnime' | 'topCharacters'\n\nexport  type CardType = (CharacterType | AnimeType | TopAnimeType| TopCharactersType) & IIsFavorite\nexport type CardType1 = {\n    mal_id: number,\n    title: string,\n    description: string,\n    image_url: string,\n    isFavorite: boolean,\n    category: CategoriesViewType\n}\n\nexport interface IIsFavorite {\n    isFavorite?: boolean;\n}\n\nexport interface IResponse {\n    request_hash: string;\n    request_cached: boolean;\n    request_cache_expiry: number;\n    results: CardType[];\n}\n\nexport interface IResponseTop {\n    request_hash: string,\n    request_cached: boolean,\n    request_cache_expiry: number,\n    top: TopAnimeType[]|TopCharactersType[]\n}\n\n\n const AnimeFromCharacterResponseZod = z.object({\n    mal_id: z.number(),\n    type: z.literal('anime'),\n    name: z.string(),\n    url: z.string(),\n})\nexport type  AnimeFromCharacterResponseType = z.infer<typeof AnimeFromCharacterResponseZod>\n\n\nconst MangaFromCharacterResponseZod = z.object({\n    mal_id: z.number(),\n    type: z.literal('manga'),\n    name: z.string(),\n    url: z.string(),\n})\ntype MangaFromCharacterResponseType = z.infer<typeof MangaFromCharacterResponseZod>\n\n\nconst CharacterZod = z.object({\n    mal_id: z.number(),\n    url: z.string(),\n    image_url: z.string(),\n    name: z.string(),\n    alternative_names: z.string().array(),\n    anime: z.array(AnimeFromCharacterResponseZod),\n    manga: z.array(MangaFromCharacterResponseZod),\n})\n\nconst AnimeZod = z.object({\n    mal_id: z.number(),\n    url: z.string(),\n    image_url: z.string(),\n    title: z.string(),\n    synopsis: z.string(),\n})\n\nconst TopAnimeZod = z.object({\n    mal_id: z.number(),\n    episodes: z.number(),\n    score: z.number(),\n    title: z.string(),\n    rank: z.number(),\n    url: z.string(),\n    image_url: z.string(),\n})\nconst TopCharactersZod = z.object({\n    mal_id: z.number(),\n    animeography: z.array(AnimeFromCharacterResponseZod),\n    title: z.string(),\n    rank: z.number(),\n    url: z.string(),\n    image_url: z.string(),\n})\n\nexport  type CharacterType = z.infer<typeof CharacterZod>\nexport  type AnimeType = z.infer<typeof AnimeZod>\nexport type TopAnimeType = z.infer<typeof TopAnimeZod>\nexport type TopCharactersType = z.infer<typeof TopCharactersZod>\n\nexport function characterGuard(data: CardType): data is CharacterType{\n    return (data as CharacterType).alternative_names !== undefined\n}\nexport function animeGuard(data: CardType): data is AnimeType{\n    return (data as AnimeType).synopsis !== undefined\n}\nexport function topAnimeGuard(data: CardType): data is TopAnimeType{\n    return (data as TopAnimeType).score!== undefined\n}\nexport function topCharactersGuard(data: CardType): data is TopCharactersType{\n    return (data as TopCharactersType).animeography!== undefined\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CategoriesViewType } from \"../../../store/types\";\n\ninterface TextBlockProp {\n  category: CategoriesViewType;\n  title?: string;\n  description?: string;\n}\n\nconst useStyle = makeStyles({\n  textWrapper: {\n    width: 140,\n    height: 64,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    overflow: \"hidden\",\n    padding: 0,\n  },\n  title: {\n    width: 144,\n    height: 28,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  subtitle: {\n    width: 144,\n    height: 36,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  onlyTitle: {\n    width: 164,\n    height: 64,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n});\nexport const TextBlock = ({ category, title, description }: TextBlockProp) => {\n  const classes = useStyle();\n\n  const textDescription =\n    category === \"anime\" ? (\n      <>\n        <Typography\n          gutterBottom\n          variant=\"button\"\n          component=\"h2\"\n          className={classes.title}\n        >\n          {title}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.subtitle}\n        >\n          {description}\n        </Typography>\n      </>\n    ) : (\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n        component=\"h2\"\n        className={classes.onlyTitle}\n      >\n        {title}\n      </Typography>\n    );\n  const t = <CardContent />;\n  return (\n    <CardContent className={classes.textWrapper}>{textDescription}</CardContent>\n  );\n};\n","import React from \"react\";\nimport { CardSmall } from \"./CardSmall\";\nimport {\n  animeGuard,\n  CardType,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"../../../store/types\";\nimport { TextBlock } from \"./TextBlock\";\nimport layoutStore from \"../../../store/LayoutStore\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport store from \"../../../store/store\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface CardSmallContainerProp {\n  data: CardType;\n}\n\nfunction TextDescription() {\n  return null;\n}\n\n// export const CardSmallContainer = ({data}: CardSmallContainerProp) => {\n//     const title = data.title || data.name\n//     const img = data.image_url\n//     const favorite = store.category !== \"favorite\" && data.isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : null\n//     const textDescription = <TextBlock description={data.synopsis} category={layoutStore.categoryView} title={title}/>\n//     const onClick = () => {\n//         store.setContent(data);\n//         LayoutStore.toggleActiveView(\"content\");\n//     }\n//     return (\n//         <CardSmall key={data.mal_id} textDescription={textDescription} img={img} favorite={favorite} onClick={onClick}/>\n//     );\n// };\nexport const CardSmallContainer = observer(\n  ({ data }: CardSmallContainerProp) => {\n    const img = data.image_url;\n    const favorite =\n      store.category !== \"favorite\" && data.isFavorite ? (\n        <FavoriteIcon style={{ fontSize: 25, color: \"indigo\" }} />\n      ) : null;\n    const onClick = () => {\n      store.setContent(data);\n      LayoutStore.toggleActiveView(\"content\");\n    };\n\n    const cardSmall = () => {\n      if (animeGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={data.synopsis}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (characterGuard(data)) {\n        const title = data.name;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (topAnimeGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (topCharactersGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else {\n        let unrealType: never = data;\n      }\n    };\n\n    return <>{cardSmall()}</>;\n  }\n);\n","import React, { useEffect, useRef } from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Box, makeStyles, Paper } from \"@material-ui/core\";\nimport { AnimeSearchInput } from \"./input/AnimeSearchInput\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { CardSmallContainer } from \"./CardSmall/CardSmallContainer\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"280px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 8,\n    height: \"calc(100vh - 64px - 32px)\",\n    background: colors.tertiaryBG,\n  },\n  cardsList: {\n    position: \"relative\",\n    flexGrow: 1,\n    width: \"260px\",\n  },\n  cardsListScroll: {\n    position: \"absolute\",\n    height: \"calc(100vh - 64px - 132px)\",\n    width: \"260px\",\n    overflowY: \"auto\",\n  },\n}));\n\nexport const Results = observer(() => {\n  const classes = useStyles();\n\n  const toResultRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    toResultRef.current?.scrollTo(0, 0);\n  }, [LayoutStore.categoryView]);\n\n  function scrollResult(e: any) {\n    if (\n      e.target.scrollHeight -\n        (e.target.scrollTop +\n          (window.innerHeight - e.target.getBoundingClientRect().top)) <\n      100\n    ) {\n      store.setFetching(true);\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"Store Fetching\", store.fetching);\n    if (store.fetching) {\n      console.log(LayoutStore.categoryView);\n      switch (LayoutStore.categoryView) {\n        case \"topAnime\":\n          store.getTopAnime();\n          break;\n        case \"topCharacters\":\n          store.getTopCharacters();\n          break;\n        case \"character\":\n        case \"anime\":\n          store.startSearchWithDelay(4000, store.textSearch);\n          break;\n        // case 'favorite' : store.scrollFavorite(localStorage.getItem(\"favoriteArr\"))\n        // break;\n        default:\n          store.setFetching(false);\n      }\n    }\n  }, [store.fetching]);\n\n  //todo если нет поиска, то надо показывать всё подряд\n  const cardList =\n    store.data === null ? (\n      <div>Введите данные</div>\n    ) : (\n      store.data.map((el) => {\n        return (\n          <CardSmallContainer key={`${el.mal_id}${Math.random()}`} data={el} />\n        );\n      })\n    );\n\n  return (\n    <Paper className={classes.root}>\n      <Box className={classes.cardsList}>\n        <AnimeSearchInput />\n\n        <Box>{LayoutStore.categoryView}</Box>\n\n        <div\n          ref={toResultRef}\n          onScroll={scrollResult}\n          className={classes.cardsListScroll}\n        >\n          {cardList}\n        </div>\n      </Box>\n    </Paper>\n  );\n});\n","import React from \"react\";\nimport { Box, Fab, Hidden } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport classes from \"./Content.module.css\";\n\n// interface IContent {\n//   title?: string;\n//   prefixTitle: string;\n//   subtitle?: string | string[];\n//   prefixSubtitle: string;\n//   favoriteIcon: JSX.Element;\n//   img?: string;\n// }\n\n// export const Content = observer(\n//     ({\n//          title,\n//          prefixTitle,\n//          subtitle,\n//          prefixSubtitle,\n//          favoriteIcon,\n//          img,\n//      }: IContent) => {\n//\n//         return (\n//             <Paper className={classes.root}>\n//                 <Box className={classes.contentWrapper}>\n//                     <Paper className={classes.header}>\n//                         <Hidden mdUp smUp>\n//                             <Fab\n//                                 className={classes.fab}\n//                                 color=\"primary\"\n//                                 onClick={() => {\n//                                     LayoutStore.toggleActiveView(\"results\");\n//                                 }}\n//                             >\n//                                 <ArrowBackIcon />\n//                             </Fab>\n//                         </Hidden>\n//                         <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n//                             {favoriteIcon}\n//                         </Fab>\n//\n//                         <Typography\n//                             className={classes.title}\n//                             variant={\"h4\"}\n//                             component={\"h2\"}\n//                         >\n//                             {title}\n//                         </Typography>\n//                     </Paper>\n//                     <Typography\n//                         className={classes.subtitle}\n//                         variant={\"body1\"}\n//                         component={\"p\"}\n//                     >\n//                         <img className={classes.img} alt={\"#\"} src={img} />\n//                         {prefixTitle}: {title} <br />\n//                         {prefixSubtitle}: {subtitle}\n//                     </Typography>\n//                 </Box>\n//             </Paper>\n//         );\n//     }\n// );\ninterface IContent {\n  title: string;\n  favoriteIcon: JSX.Element;\n  children: JSX.Element;\n}\n\nexport const Content = observer(\n  ({ title, favoriteIcon, children }: IContent) => {\n    return (\n      <Box className={classes.root}>\n        <Box className={classes.contentWrapper}>\n          <Box className={classes.header}>\n            <Hidden smUp>\n              <Fab\n                className={classes.fab}\n                style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n                color=\"primary\"\n                onClick={() => {\n                  LayoutStore.toggleActiveView(\"results\");\n                }}\n              >\n                <ArrowBackIcon />\n              </Fab>\n            </Hidden>\n            <Fab\n              className={classes.fab}\n              style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n              onClick={() => store.setFavorite()}\n            >\n              {favoriteIcon}\n            </Fab>\n\n            <Typography\n              className={classes.headerTitle}\n              variant={\"h5\"}\n              component={\"h3\"}\n            >\n              {title}\n            </Typography>\n          </Box>\n          {children}\n        </Box>\n      </Box>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: colors.tertiaryBG,\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root}></Box>;\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classes from \"./Content.module.css\";\n\ninterface BodyContentProp {\n  img: string;\n  preTitle: string;\n  title: string;\n  preSubtitle: string;\n  subtitle?: string | number | JSX.Element;\n}\n\nexport const BodyContent = ({\n  img,\n  title,\n  subtitle,\n  preSubtitle,\n  preTitle,\n}: BodyContentProp) => {\n  return (\n    <Typography\n      className={classes.subtitle}\n      variant={\"body1\"}\n      component={\"div\"}\n    >\n      <img className={classes.img} alt={\"#\"} src={img} />\n      <Typography variant={\"h6\"} component={\"div\"} className={classes.preTitle}>\n        {preTitle}\n      </Typography>\n      <Typography className={classes.title} variant={\"h4\"}>\n        {\" \"}\n        {title}\n      </Typography>\n      <br />\n      <Typography variant={\"h4\"} className={classes.preSubTitle}>\n        {\" \"}\n        {preSubtitle}\n      </Typography>\n      <Typography className={classes.subTitle} variant={\"h4\"}>\n        {\" \"}\n        {subtitle}\n      </Typography>\n    </Typography>\n  );\n};\n","import React from \"react\";\nimport { AnimeFromCharacterResponseType } from \"../../../store/types\";\nimport { Box, Link } from \"@material-ui/core\";\n\nexport interface AnimeListFromAnimeProp {\n  animeList: AnimeFromCharacterResponseType[];\n}\n\nexport const AnimeListFromAnime = ({ animeList }: AnimeListFromAnimeProp) => {\n  return (\n    <Box>\n      {animeList.map((el) => (\n        <Box>\n          {el.name}{\" \"}\n          <Link href={el.url} color={\"primary\"}>\n            ccskrf\n          </Link>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { Placeholder } from \"./Placeholder\";\nimport {\n  animeGuard,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"../../store/types\";\nimport { BodyContent } from \"./BodyContent\";\nimport { AnimeListFromAnime } from \"./Character/AnimeListFromAnime\";\n\nexport const ContentContainer = observer(() => {\n  const content = store.content;\n  let contentJSX = () => {\n    if (content) {\n      const img = content.image_url;\n      const favoriteIcon = content.isFavorite ? (\n        <FavoriteIcon />\n      ) : (\n        <FavoriteBorderIcon />\n      );\n\n      if (animeGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              img={img}\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"Synopsis: \"}\n              subtitle={content.synopsis}\n            />\n          </Content>\n        );\n      } else if (characterGuard(content)) {\n        const animeList = <AnimeListFromAnime animeList={content.anime} />;\n        return (\n          <Content title={content.name} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              img={img}\n              preTitle={\"Name: \"}\n              title={content.name}\n              preSubtitle={\"This character from: \"}\n              subtitle={animeList}\n            />\n          </Content>\n        );\n      } else if (topAnimeGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"RANK: \"}\n              subtitle={content.rank}\n              img={img}\n            />\n          </Content>\n        );\n      } else if (topCharactersGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"RANK: \"}\n              subtitle={content.rank}\n              img={img}\n            />\n          </Content>\n        );\n      } else {\n        let unrealType: never = content;\n      }\n    } else {\n      return <Placeholder />;\n    }\n  };\n\n  return <>{contentJSX()}</>;\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"./Category/Category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React from \"react\";\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport ErrorStore from \"../store/ErrorStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\n\ninterface ErrorAlertProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  root: {},\n});\nexport const ErrorAlert = observer(({ children }: ErrorAlertProp) => {\n  const classes = useStyle();\n  console.log(toJS(ErrorStore.errorText));\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={ErrorStore.isOpenError}\n      autoHideDuration={6000}\n      onClose={() => {\n        ErrorStore.isOpenError = false;\n      }}\n    >\n      <Alert severity=\"error\">{ErrorStore.errorText}</Alert>\n    </Snackbar>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport store from \"./store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport './index.css'\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  CssBaseline,\n  makeStyles,\n  Grid,\n\n  Hidden,\n  CircularProgress,\n  Backdrop, Snackbar\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Content } from \"./components/Content/Content\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/MobPanel\";\nimport {Alert} from \"@material-ui/lab\";\nimport {ErrorAlert} from \"./components/ErrorAlert\";\nimport {colors} from \"./store/colors\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100vw\",\n    height: \"100vh\",\n    background: colors.primaryBG,\n    flexDirection: \"column\",\n    color: colors.firstFill,\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: 'transparent'\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\"\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\"\n  }\n});\nconst App = observer(() => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Appbar />\n      {store.loading ? (\n        <Box className={classes.loader}>\n          <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress />\n          </Backdrop>{\" \"}\n        </Box>\n      ) : null}\n      <Hidden mdUp>\n        <MobPanel />\n      </Hidden>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <Results />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.activeView === \"content\" ? (\n              <ContentContainer />\n            ) : (\n              <Results />\n            )}\n          </Box>\n        </Hidden>\n        <Hidden xsDown>\n          <Box className={classes.contentWrapper}>\n            <ContentContainer />\n          </Box>\n        </Hidden>\n      </Container>\n     <ErrorAlert/>\n    </div>\n  );\n});\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Content_root__2QAnb\",\"contentWrapper\":\"Content_contentWrapper__1_Z_u\",\"header\":\"Content_header__TjYHc\",\"headerTitle\":\"Content_headerTitle__31VRS\",\"img\":\"Content_img__2YsyD\",\"fab\":\"Content_fab__wbXtp\",\"preTitle\":\"Content_preTitle__2LKov\",\"title\":\"Content_title__2SIw7\",\"preSubTitle\":\"Content_preSubTitle__mMOUj\",\"subTitle\":\"Content_subTitle__3RIp9\"};"],"sourceRoot":""}