{"version":3,"sources":["store/types.ts","store/LayoutStore.ts","store/ErrorStore.ts","store/pagination.ts","store/store.ts","store/colors.ts","components/AppBar/AppBar.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Results/input/AnimeSearchInput.tsx","components/Results/CardSmall/CardSmall.tsx","components/Results/CardSmall/TextBlock.tsx","components/Results/CardSmall/CardSmallContainer.tsx","components/Results/Results.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/BodyContent.tsx","components/Content/Character/AnimeListFromAnime.tsx","components/Content/ContentContainer.tsx","components/MobPanel.tsx","components/ErrorAlert.tsx","App.tsx","index.tsx","components/Content/Content.module.css"],"names":["AnimeFromCharacterResponseZod","z","object","mal_id","number","type","literal","name","string","url","MangaFromCharacterResponseZod","image_url","alternative_names","array","anime","manga","title","synopsis","episodes","score","rank","animeography","characterGuard","data","undefined","animeGuard","topAnimeGuard","topCharactersGuard","activeView","mobPanel","categoryView","makeAutoObservable","this","isOpen","console","log","store","category","errorStatus","errorText","isOpenError","open","text","status","error","toggleAlertError","changeStatusError","response","changeTextError","message","paginationStore","textSearch","fetching","active","currentPage","topAnime","topCharacters","characters","favorite","fetchingBoolean","forEach","e","map","event","includes","isFavorite","action","a","loading","axios","get","createPaginationString","then","res","setFetching","LayoutStore","lastAnime","concat","results","el","lastCharacter","top","topCharacter","favoriteCheck","catch","setTimeout","finally","isThrottle","isWaiting","startPagination","content","startProgram","getTopAnime","setCategoriesView","getTopCharacters","locStorage","localStorage","getItem","JSON","parse","select","toJS","pos","findIndex","item","splice","unshift","setItem","stringify","textInput","filterFavorite","filter","toLowerCase","ErrorStore","catchingErrors","ms","startSearch","colors","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","button","width","backgroundColor","buttonActive","CategoryButton","observer","Button","value","setCategory","root","margin","boxShadow","rootRow","container","categories","border","flexDirection","categoriesRow","Category","categoriesButton","Paper","ButtonGroup","cursor","input","marginLeft","flex","divider","label","left","fontSize","opacity","iconButton","AnimeSearchInput","useState","setTextInput","validator","length","startSearchWithDelay","setActiveCategory","useEffect","onSubmit","preventDefault","InputBase","onChange","target","placeholder","inputProps","aria-label","media","borderRadius","fav","right","CardSmall","img","textDescription","Card","CardMedia","image","Box","useStyle","textWrapper","justifyContent","overflow","padding","textOverflow","subtitle","onlyTitle","TextBlock","description","gutterBottom","CardContent","CardSmallContainer","style","setContent","toggleActiveView","layoutStore","cardSmall","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","toResultRef","useRef","current","scrollTo","startPaginationWithDelay","cardList","Math","random","ref","onScroll","scrollHeight","scrollTop","window","innerHeight","getBoundingClientRect","Content","favoriteIcon","children","contentWrapper","header","smUp","Fab","fab","minHeight","minWidth","setFavorite","headerTitle","maxWidth","Placeholder","BodyContent","preSubtitle","preTitle","alt","src","preSubTitle","subTitle","AnimeListFromAnime","animeList","Link","href","ContentContainer","contentJSX","MobPanel","SwipeableDrawer","anchor","onClose","onOpen","ErrorAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","backdrop","loader","zIndex","App","CssBaseline","Backdrop","CircularProgress","smDown","xsDown","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dee96ff4.chunk.js","sourcesContent":["import { z } from \"zod\";\n\nexport type CategoriesType = \"anime\" | \"character\" | \"favorite\";\nexport type ActiveViewType = \"results\" | \"content\";\nexport type CategoriesViewType = CategoriesType | \"topAnime\" | \"topCharacters\";\n\nexport type CardType = (\n  | CharacterType\n  | AnimeType\n  | TopAnimeType\n  | TopCharactersType\n) &\n  ExtraTypes;\n\nexport type CardType1 = {\n  mal_id: number;\n  title: string;\n  description: string;\n  image_url: string;\n  isFavorite: boolean;\n  category: CategoriesViewType;\n};\n\nexport interface ExtraTypes {\n  isFavorite?: boolean;\n  category?: CategoriesViewType;\n}\n\nexport interface IResponse {\n  request_hash: string;\n  request_cached: boolean;\n  request_cache_expiry: number;\n  results: CardType[];\n}\nexport interface IResponseTop {\n  request_hash: string;\n  request_cached: boolean;\n  request_cache_expiry: number;\n  top: TopAnimeType[] | TopCharactersType[];\n}\n\nconst AnimeFromCharacterResponseZod = z.object({\n  mal_id: z.number(),\n  type: z.literal(\"anime\"),\n  name: z.string(),\n  url: z.string(),\n});\nexport type AnimeFromCharacterResponseType = z.infer<\n  typeof AnimeFromCharacterResponseZod\n>;\n\nconst MangaFromCharacterResponseZod = z.object({\n  mal_id: z.number(),\n  type: z.literal(\"manga\"),\n  name: z.string(),\n  url: z.string(),\n});\ntype MangaFromCharacterResponseType = z.infer<\n  typeof MangaFromCharacterResponseZod\n>;\n\nconst CharacterZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  name: z.string(),\n  alternative_names: z.string().array(),\n  anime: z.array(AnimeFromCharacterResponseZod),\n  manga: z.array(MangaFromCharacterResponseZod),\n});\n\nconst AnimeZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  title: z.string(),\n  synopsis: z.string(),\n});\n\nconst TopAnimeZod = z.object({\n  mal_id: z.number(),\n  episodes: z.number(),\n  score: z.number(),\n  title: z.string(),\n  rank: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n});\nconst TopCharactersZod = z.object({\n  mal_id: z.number(),\n  animeography: z.array(AnimeFromCharacterResponseZod),\n  title: z.string(),\n  rank: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n});\n\nexport type CharacterType = z.infer<typeof CharacterZod>;\nexport type AnimeType = z.infer<typeof AnimeZod>;\nexport type TopAnimeType = z.infer<typeof TopAnimeZod>;\nexport type TopCharactersType = z.infer<typeof TopCharactersZod>;\n\nexport function characterGuard(data: CardType): data is CharacterType {\n  return (data as CharacterType).alternative_names !== undefined;\n}\nexport function animeGuard(data: CardType): data is AnimeType {\n  return (data as AnimeType).synopsis !== undefined;\n}\nexport function topAnimeGuard(data: CardType): data is TopAnimeType {\n  return (data as TopAnimeType).score !== undefined;\n}\nexport function topCharactersGuard(data: CardType): data is TopCharactersType {\n  return (data as TopCharactersType).animeography !== undefined;\n}\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport {CategoriesType, ActiveViewType, CategoriesViewType} from \"./types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  \n  activeView: ActiveViewType = \"results\";\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView:CategoriesViewType= \"anime\";\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n    console.log(this.mobPanel)\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\nsetCategoriesView(category: CategoriesViewType){\n    this.categoryView = category\n}\n  toggleActiveView(activeView: ActiveViewType) {\n    this.activeView = activeView;\n  }\n}\n\nexport default new LayoutStore();\n","import {makeAutoObservable} from \"mobx\";\n\nclass ErrorStore {\n    errorStatus: number = 0\n    errorText: string = ''\n    isOpenError = false\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    toggleAlertError(open: boolean) {\n        this.isOpenError = open\n    }\n\n    changeTextError(text: string) {\n        this.errorText = text\n    }\n\n    changeStatusError(status: number) {\n        this.errorStatus = status\n    }\n\n    catchingErrors(error: any) {\n\n        this.toggleAlertError(true)\n        this.changeStatusError(error.response.status)\n        this.changeTextError(error.response.data.message)\n    }\n}\n\nexport default new ErrorStore()","import { makeAutoObservable } from \"mobx\";\nimport { CardType, CategoriesViewType } from \"./types\";\nimport axios from \"axios\";\nimport store from \"./store\";\nimport LayoutStore from \"./LayoutStore\";\n\nclass Pagination {\n  textSearch = \"\";\n\n  fetching = false;\n  active: CategoriesViewType = \"topAnime\";\n  currentPage = {\n    topAnime: 1,\n    topCharacters: 1,\n    characters: 1,\n    anime: 1,\n    favorite: 0,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setFetching(fetchingBoolean: boolean) {\n    this.fetching = fetchingBoolean;\n  }\n\n  favoriteCheck(data: CardType[]) {\n    data.forEach((e) => {\n      store.favorite\n        .map((event) => {\n          return event.mal_id;\n        })\n        .includes(e.mal_id)\n        ? (e.isFavorite = true)\n        : (e.isFavorite = false);\n    });\n  }\n\n  createPaginationString() {\n    switch (this.active) {\n      case \"topAnime\": {\n        return `https://api.jikan.moe/v3/top/anime/${this.currentPage.topAnime}`;\n      }\n      case \"topCharacters\": {\n        return `https://api.jikan.moe/v3/top/characters/${this.currentPage.topCharacters}`;\n      }\n      case \"character\": {\n        return `https://api.jikan.moe/v3/${store.action}/character?q=${store.textSearch}&limit=10&page=${this.currentPage.characters}`;\n      }\n      case \"anime\": {\n        return `https://api.jikan.moe/v3/${store.action}/anime?q=${store.textSearch}&limit=10&page=${this.currentPage.anime}`;\n      }\n      case \"favorite\": {\n        return \"\";\n      }\n    }\n  }\n\n  async startPagination() {\n    if (store.category !== \"favorite\") store.loading = true;\n    await axios\n      .get(\n        //todo proverka\n        this.createPaginationString()\n      )\n      .then((res) => {\n        this.setFetching(false);\n        console.log(\"проверка\");\n        store.data = [];\n        if (LayoutStore.categoryView === \"anime\") {\n          store.lastAnime = store.lastAnime.concat(\n            res.data.results as CardType[]\n          );\n          store.lastAnime.forEach((el) => (el.category = \"anime\"));\n          store.data = store.lastAnime;\n          this.currentPage.anime += 1;\n        }\n        if (LayoutStore.categoryView === \"character\") {\n          //todo протипизировать нормально\n          store.lastCharacter = store.lastCharacter.concat(\n            res.data.results as CardType[]\n          );\n          store.lastCharacter.forEach((el) => (el.category = \"character\"));\n          store.data = store.lastCharacter;\n          this.currentPage.characters += 1;\n        }\n        if (LayoutStore.categoryView === \"topAnime\") {\n          store.topAnime = store.topAnime.concat(res.data.top as CardType[]);\n          store.topAnime.forEach((el) => (el.category = \"topAnime\"));\n          store.data = store.topAnime;\n\n          this.currentPage.topAnime += 1;\n        }\n        if (LayoutStore.categoryView === \"topCharacters\") {\n          store.topCharacter = store.topCharacter.concat(\n            res.data.results as CardType[]\n          );\n          store.topCharacter.forEach((el) => (el.category = \"topCharacters\"));\n          store.data = store.topCharacter;\n\n          this.currentPage.topCharacters += 1;\n        }\n        this.favoriteCheck(store.data);\n      })\n      .catch((error) => {\n        // ErrorStore.catchingErrors(error);\n        console.log(error);\n      })\n      .then(() => {\n        setTimeout(() => {\n          store.loading = false;\n        }, 500);\n      })\n      .finally(() => this.setFetching(false));\n  }\n\n  startPaginationWithDelay() {\n    if (store.isThrottle) {\n      console.log(\"тротл\");\n      store.isWaiting = true;\n      console.log(\"ждем снятия ограничения\");\n      return;\n    } else {\n      console.log(\"startsearch\");\n      store.isThrottle = true;\n      this.startPagination();\n    }\n    setTimeout(() => {\n      console.log(\"4сек прошло снимаем ограничение\");\n      store.isThrottle = false;\n      if (store.isWaiting) {\n        console.log(\"ограничение снято, запрос отправлен\");\n        this.startPagination();\n      } else {\n        console.log(\"ограничение снято, запрос не отправлялся\");\n        return;\n      }\n    }, 4000);\n\n    store.isWaiting = false;\n  }\n}\n\nexport const paginationStore = new Pagination();\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport axios from \"axios\";\nimport {\n  animeGuard,\n  CardType,\n  CategoriesType,\n  characterGuard,\n  IResponse,\n  IResponseTop,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"./types\";\nimport LayoutStore from \"./LayoutStore\";\nimport ErrorStore from \"./ErrorStore\";\nimport { paginationStore } from \"./pagination\";\n\nclass store {\n  textSearch = \"\";\n  action = \"search\";\n  category: CategoriesType = \"anime\";\n  content: CardType | null = null;\n  data: CardType[] = [];\n  topAnime: CardType[] = [];\n  topCharacter: CardType[] = [];\n  lastAnime: CardType[] = [];\n  lastCharacter: CardType[] = [];\n  favorite: CardType[] = [];\n  loading = false;\n  isThrottle = false;\n  isWaiting = false;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.startProgram();\n    this.getTopAnime().then(() => {\n      //----------------->\n      //this.data = this.topAnime\n      LayoutStore.setCategoriesView(\"topAnime\");\n    });\n\n    this.getTopCharacters();\n  }\n\n  startProgram() {\n    let locStorage = localStorage.getItem(\"favoriteArr\");\n    if (locStorage !== null) {\n      this.favorite = JSON.parse(locStorage);\n      // this.scrollFavorite(locStorage)\n    }\n  }\n\n  setCategory(select: CategoriesType) {\n    this.content = null;\n    this.data = [];\n    switch (select) {\n      case \"character\":\n        this.data = this.topCharacter;\n        //todo сменить top\n        LayoutStore.categoryView = \"topCharacters\";\n        break;\n      case \"anime\":\n        this.data = this.topAnime;\n        LayoutStore.categoryView = \"topAnime\";\n        break;\n      case \"favorite\":\n        this.data = this.favorite;\n        LayoutStore.categoryView = \"favorite\";\n        break;\n      default:\n        console.error(select);\n    }\n    this.category = select;\n    console.log(this.category);\n  }\n\n  setContent(content: CardType) {\n    this.content = content;\n    console.log(toJS(this.content));\n  }\n\n  setFavorite() {\n    if (this.content === null) return;\n    let pos = this.favorite.findIndex(\n      (item) => item.mal_id == this.content?.mal_id\n    );\n\n    if (pos !== -1) {\n      this.content.isFavorite = false;\n      this.favorite.splice(pos, 1);\n    } else {\n      this.content.isFavorite = true;\n      this.favorite.unshift(this.content);\n    }\n    localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite));\n  }\n\n  async getTopAnime() {\n    this.loading = true;\n    await axios\n      .get<IResponseTop>(`https://api.jikan.moe/v3/top/anime/1`)\n      .then((res) => {\n        this.topAnime = res.data.top;\n\n        this.topAnime.forEach((el) => (el.category = \"topAnime\"));\n        this.data = this.topAnime;\n        paginationStore.currentPage.topAnime = 2;\n\n        this.favoriteCheck(this.topAnime);\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        this.loading = false;\n      });\n  }\n\n  async getTopCharacters() {\n    this.loading = true;\n    axios\n      .get<IResponseTop>(`https://api.jikan.moe/v3/top/characters/1`)\n      .then((res) => {\n        this.topCharacter = this.topCharacter.concat(res.data.top);\n        this.topCharacter.forEach((el) => (el.category = \"topCharacters\"));\n        paginationStore.currentPage.topCharacters = 2;\n        this.favoriteCheck(this.topAnime);\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        this.loading = false;\n      });\n  }\n\n  favoriteCheck(data: CardType[]) {\n    data.forEach((e) => {\n      this.favorite\n        .map((event) => {\n          return event.mal_id;\n        })\n        .includes(e.mal_id)\n        ? (e.isFavorite = true)\n        : (e.isFavorite = false);\n    });\n  }\n\n  async startSearch(textInput: string) {\n    if (this.category === \"favorite\") {\n      //let filterFavorite\n      let filterFavorite = this.favorite.filter((item) => {\n        if (animeGuard(item)) {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n        if (characterGuard(item)) {\n          return item.name.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n        if (topAnimeGuard(item)) {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n        if (topCharactersGuard(item)) {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n      });\n      // return item.title?.toLowerCase().includes(textInput.toLowerCase())\n      console.log(filterFavorite);\n      this.data = filterFavorite;\n      return;\n    }\n    this.loading = true;\n\n    await axios\n      .get<IResponse>(\n        `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=10&page=1`\n      )\n      .then((res) => {\n        this.data = [];\n        if (this.category === \"anime\") {\n          this.lastAnime = res.data.results;\n          this.lastAnime.forEach((el) => (el.category = \"anime\"));\n          this.data = this.lastAnime;\n\n          paginationStore.currentPage.anime = 2;\n        }\n        if (this.category === \"character\") {\n          this.lastCharacter = res.data.results;\n          this.lastCharacter.forEach((el) => (el.category = \"character\"));\n          this.data = this.lastCharacter;\n\n          paginationStore.currentPage.characters = 2;\n        }\n\n        paginationStore.active = LayoutStore.categoryView;\n        this.favoriteCheck(this.data);\n      })\n      .catch((error) => {\n        ErrorStore.catchingErrors(error);\n      })\n      .then(() => {\n        setTimeout(() => {\n          this.loading = false;\n        }, 500);\n      });\n  }\n\n  startSearchWithDelay(ms: number, textInput: string) {\n    this.textSearch = textInput;\n    if (this.isThrottle) {\n      console.log(\"тротл\");\n      this.isWaiting = true;\n      console.log(\"ждем снятия ограничения\");\n      return;\n    } else {\n      console.log(\"startsearch\");\n      this.isThrottle = true;\n      this.startSearch(textInput);\n    }\n    setTimeout(() => {\n      console.log(\"4сек прошло снимаем ограничение\");\n      this.isThrottle = false;\n      if (this.isWaiting) {\n        console.log(\"ограничение снято, запрос отправлен\");\n        this.startSearch(textInput);\n      } else {\n        console.log(\"ограничение снято, запрос не отправлялся\");\n        return;\n      }\n    }, ms);\n\n    this.isWaiting = false;\n  }\n}\n\nexport default new store();\n","export const colors = {\n    darkBG: \"rgba(32, 40, 48, 1)\",\n    primaryBG: \"rgba(42, 60, 68, 1)\",\n    secondaryBG: 'rgba(150, 167, 175, 1)',\n    tertiaryBG: 'rgba(71, 94, 105, 1)',\n    primaryText: 'rgba(241, 241, 241, 1)',\n    secondaryText: 'rgba(150, 167, 175, 1)',\n    firstFill: 'rgba(255, 197, 66, 1)',\n    secondFill: 'rgba(255, 151, 74, 1)',\n    thirdFill: 'rgba(255, 86, 94, 1)',\n    fourthFill: 'rgba(255, 86, 94, 1)',\n    fifthFill: 'rgba(0, 98, 255, 1)',\n}","import React from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"64px\",\n    display: \"flex\",\n    background: colors.secondFill,\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position={\"static\"}\n      className={classes.wrapper}\n      color={\"transparent\"}\n      elevation={8}\n    >\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\">\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { observer } from \"mobx-react-lite\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    color: colors.secondaryText,\n\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { CategoryButton } from \"./CategoryButton\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: colors.tertiaryBG,\n    height: \"calc(100vh - 96px)\",\n    boxShadow: \"4px 4px 8px 0px rgba(74, 97, 114, 0.2)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n      </ButtonGroup>\n    </Paper>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport store from \"../../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport { Typography } from \"@material-ui/core\";\nimport { categories } from \"../../Category/Category\";\nimport ErrorStore from \"../../../store/ErrorStore\";\nimport { animeGuard, characterGuard, topAnimeGuard, topCharactersGuard } from \"../../../store/types\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 244,\n    height: 64,\n    cursor: \"pointer\",\n    margin: \"8px auto\",\n  },\n  input: {\n    marginLeft: 2,\n    flex: 1,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  label: {\n    position: \"absolute\",\n    top: 2,\n    left: 8,\n    fontSize: 10,\n    opacity: 0.7,\n  },\n\n  iconButton: {},\n});\n\nexport const AnimeSearchInput = observer(() => {\n  const classes = useStyles();\n  const [textInput, setTextInput] = useState(\"\");\n  const validator = () => {\n    if (textInput.length <= 3) {\n      ErrorStore.changeTextError(\"Введите больше 3 букв\");\n      ErrorStore.toggleAlertError(true);\n      return;\n    } else {\n      store.startSearchWithDelay(4000, textInput);\n      LayoutStore.setActiveCategory();\n    }\n  };\n  \n  \n  // const searchDataFavorite = store.favorite.filter(item => {\n  //   return item.title?.tolowerCase().includes(textInput.toLowerCase())\n  // })\n\n  \n//   let filterFavorite = store.favorite.filter(item => {\n//     if(animeGuard(item)) {\n//         return item.title.toLowerCase().includes(textInput.toLowerCase())\n//         console.log(item)\n//     }\n//     if (characterGuard(item)){\n//         return item.name.toLowerCase().includes(textInput.toLowerCase())\n//         console.log(item)\n//     }\n//     if (topAnimeGuard(item)){\n//         return item.title.toLowerCase().includes(textInput.toLowerCase())\n//         console.log(item)\n//     }\n//     if (topCharactersGuard(item)){\n//         return item.title.toLowerCase().includes(textInput.toLowerCase())\n//         console.log(item)\n//     }\n    \n// })\nuseEffect(() => {\n  if (store.category === \"favorite\") store.startSearch(textInput);\n}, [textInput])\n\n\n\n\n\n  return (\n    <Paper\n      component=\"form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n          store.category === \"favorite\" ?\n          store.startSearch(textInput) :\n          validator();\n        \n      }}\n      className={classes.root}\n    >\n      <Typography className={classes.label}>\n        {categories.map((el) => (el.value === store.category ? el.text : null))}\n      </Typography>\n      <InputBase\n        value={textInput}\n        onChange={(e) => {\n          setTextInput(e.target.value);\n        }}\n        className={classes.input}\n        //todo а если не аниме?\n        placeholder=\"Start searching Anime\"\n        inputProps={{ \"aria-label\": \"search Anime\" }}\n      />\n\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={validator}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n});\n","import React, { ReactNode } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 240,\n    background: \"rgba(255,255,255,0.5)\",\n    // minWidth: 250,\n    height: 64,\n    cursor: \"pointer\",\n    margin: \"8px auto\",\n  },\n  media: {\n    border: \"1px solid rgba(255,255,255,0.8)\",\n    width: 56,\n    height: 56,\n    borderRadius: \"100%\",\n    margin: 4,\n  },\n\n  fav: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    width: 25,\n    height: 25,\n  },\n});\n\ninterface ICardSmall {\n  textDescription: ReactNode;\n  img: string;\n  favorite: JSX.Element | null;\n\n  onClick: () => void;\n}\n\nexport const CardSmall = observer(\n  ({ img, favorite, textDescription, onClick }: ICardSmall) => {\n    const classes = useStyles();\n\n    return (\n      <Card className={classes.root} onClick={onClick}>\n        <CardMedia\n          className={classes.media}\n          image={img}\n          title=\"Contemplative Reptile\"\n        />\n        {textDescription}\n        <Box className={classes.fav}>{favorite}</Box>\n      </Card>\n    );\n  }\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CategoriesViewType } from \"../../../store/types\";\n\ninterface TextBlockProp {\n  category: CategoriesViewType;\n  title?: string;\n  description?: string;\n}\n\nconst useStyle = makeStyles({\n  textWrapper: {\n    width: 140,\n    height: 64,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    overflow: \"hidden\",\n    padding: 0,\n  },\n  title: {\n    width: 144,\n    height: 28,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  subtitle: {\n    width: 144,\n    height: 36,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  onlyTitle: {\n    width: 164,\n    height: 64,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n});\nexport const TextBlock = ({ category, title, description }: TextBlockProp) => {\n  const classes = useStyle();\n\n  const textDescription =\n    category === \"anime\" ? (\n      <>\n        <Typography\n          gutterBottom\n          variant=\"button\"\n          component=\"h2\"\n          className={classes.title}\n        >\n          {title}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.subtitle}\n        >\n          {description}\n        </Typography>\n      </>\n    ) : (\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n        component=\"h2\"\n        className={classes.onlyTitle}\n      >\n        {title}\n      </Typography>\n    );\n  const t = <CardContent />;\n  return (\n    <CardContent className={classes.textWrapper}>{textDescription}</CardContent>\n  );\n};\n","import React from \"react\";\nimport { CardSmall } from \"./CardSmall\";\nimport {\n  animeGuard,\n  CardType,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"../../../store/types\";\nimport { TextBlock } from \"./TextBlock\";\nimport layoutStore from \"../../../store/LayoutStore\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport store from \"../../../store/store\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface CardSmallContainerProp {\n  data: CardType;\n}\n\nfunction TextDescription() {\n  return null;\n}\n\n// export const CardSmallContainer = ({data}: CardSmallContainerProp) => {\n//     const title = data.title || data.name\n//     const img = data.image_url\n//     const favorite = store.category !== \"favorite\" && data.isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : null\n//     const textDescription = <TextBlock description={data.synopsis} category={layoutStore.categoryView} title={title}/>\n//     const onClick = () => {\n//         store.setContent(data);\n//         LayoutStore.toggleActiveView(\"content\");\n//     }\n//     return (\n//         <CardSmall key={data.mal_id} textDescription={textDescription} img={img} favorite={favorite} onClick={onClick}/>\n//     );\n// };\nexport const CardSmallContainer = observer(\n  ({ data }: CardSmallContainerProp) => {\n    const img = data.image_url;\n    const favorite =\n      store.category !== \"favorite\" && data.isFavorite ? (\n        <FavoriteIcon style={{ fontSize: 25, color: \"indigo\" }} />\n      ) : null;\n    const onClick = () => {\n      store.setContent(data);\n      LayoutStore.toggleActiveView(\"content\");\n    };\n\n    const cardSmall = () => {\n      if (animeGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={data.synopsis}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (characterGuard(data)) {\n        const title = data.name;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (topAnimeGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (topCharactersGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else {\n        let unrealType: never = data;\n      }\n    };\n\n    return <>{cardSmall()}</>;\n  }\n);\n","import React, { useEffect, useRef } from \"react\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Box, makeStyles, Paper } from \"@material-ui/core\";\nimport { AnimeSearchInput } from \"./input/AnimeSearchInput\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { CardSmallContainer } from \"./CardSmall/CardSmallContainer\";\nimport { colors } from \"../../store/colors\";\nimport { paginationStore } from \"../../store/pagination\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"280px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 8,\n    height: \"calc(100vh - 64px - 32px)\",\n    background: colors.tertiaryBG,\n  },\n  cardsList: {\n    position: \"relative\",\n    flexGrow: 1,\n    width: \"260px\",\n  },\n  cardsListScroll: {\n    position: \"absolute\",\n    height: \"calc(100vh - 64px - 132px)\",\n    width: \"260px\",\n    overflowY: \"auto\",\n  },\n}));\n\nexport const Results = observer(() => {\n  const classes = useStyles();\n\n  const toResultRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    toResultRef.current?.scrollTo(0, 0);\n  }, [LayoutStore.categoryView]);\n\n  function scrollResult(e: any) {\n    if (\n      e.target.scrollHeight -\n        (e.target.scrollTop +\n          (window.innerHeight - e.target.getBoundingClientRect().top)) <\n      100\n    ) {\n      paginationStore.setFetching(true);\n    }\n  }\n\n  useEffect(() => {\n    if (paginationStore.fetching) {\n      console.log(LayoutStore.categoryView);\n\n      paginationStore.startPaginationWithDelay();\n    }\n  }, [paginationStore.fetching]);\n\n  //todo если нет поиска, то надо показывать всё подряд\n  const cardList =\n    store.data === null ? (\n      <div>Введите данные</div>\n    ) : (\n      store.data.map((el) => {\n        return (\n          <CardSmallContainer key={`${el.mal_id}${Math.random()}`} data={el} />\n        );\n      })\n    );\n\n  return (\n    <Paper className={classes.root}>\n      <Box className={classes.cardsList}>\n        <AnimeSearchInput />\n\n        <Box>{LayoutStore.categoryView}</Box>\n\n        <div\n          ref={toResultRef}\n          onScroll={scrollResult}\n          className={classes.cardsListScroll}\n        >\n          {cardList}\n        </div>\n      </Box>\n    </Paper>\n  );\n});\n","import React from \"react\";\nimport { Box, Fab, Hidden } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport classes from \"./Content.module.css\";\n\n// interface IContent {\n//   title?: string;\n//   prefixTitle: string;\n//   subtitle?: string | string[];\n//   prefixSubtitle: string;\n//   favoriteIcon: JSX.Element;\n//   img?: string;\n// }\n\n// export const Content = observer(\n//     ({\n//          title,\n//          prefixTitle,\n//          subtitle,\n//          prefixSubtitle,\n//          favoriteIcon,\n//          img,\n//      }: IContent) => {\n//\n//         return (\n//             <Paper className={classes.root}>\n//                 <Box className={classes.contentWrapper}>\n//                     <Paper className={classes.header}>\n//                         <Hidden mdUp smUp>\n//                             <Fab\n//                                 className={classes.fab}\n//                                 color=\"primary\"\n//                                 onClick={() => {\n//                                     LayoutStore.toggleActiveView(\"results\");\n//                                 }}\n//                             >\n//                                 <ArrowBackIcon />\n//                             </Fab>\n//                         </Hidden>\n//                         <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n//                             {favoriteIcon}\n//                         </Fab>\n//\n//                         <Typography\n//                             className={classes.title}\n//                             variant={\"h4\"}\n//                             component={\"h2\"}\n//                         >\n//                             {title}\n//                         </Typography>\n//                     </Paper>\n//                     <Typography\n//                         className={classes.subtitle}\n//                         variant={\"body1\"}\n//                         component={\"p\"}\n//                     >\n//                         <img className={classes.img} alt={\"#\"} src={img} />\n//                         {prefixTitle}: {title} <br />\n//                         {prefixSubtitle}: {subtitle}\n//                     </Typography>\n//                 </Box>\n//             </Paper>\n//         );\n//     }\n// );\ninterface IContent {\n  title: string;\n  favoriteIcon: JSX.Element;\n  children: JSX.Element;\n}\n\nexport const Content = observer(\n  ({ title, favoriteIcon, children }: IContent) => {\n    return (\n      <Box className={classes.root}>\n        <Box className={classes.contentWrapper}>\n          <Box className={classes.header}>\n            <Hidden smUp>\n              <Fab\n                className={classes.fab}\n                style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n                color=\"primary\"\n                onClick={() => {\n                  LayoutStore.toggleActiveView(\"results\");\n                }}\n              >\n                <ArrowBackIcon />\n              </Fab>\n            </Hidden>\n            <Fab\n              className={classes.fab}\n              style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n              onClick={() => store.setFavorite()}\n            >\n              {favoriteIcon}\n            </Fab>\n\n            <Typography\n              className={classes.headerTitle}\n              variant={\"h5\"}\n              component={\"h3\"}\n            >\n              {title}\n            </Typography>\n          </Box>\n          {children}\n        </Box>\n      </Box>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: colors.tertiaryBG,\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root}></Box>;\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classes from \"./Content.module.css\";\n\ninterface BodyContentProp {\n  img: string;\n  preTitle: string;\n  title: string;\n  preSubtitle: string;\n  subtitle?: string | number | JSX.Element;\n}\n\nexport const BodyContent = ({\n  img,\n  title,\n  subtitle,\n  preSubtitle,\n  preTitle,\n}: BodyContentProp) => {\n  return (\n    <Typography\n      className={classes.subtitle}\n      variant={\"body1\"}\n      component={\"div\"}\n    >\n      <img className={classes.img} alt={\"#\"} src={img} />\n      <Typography variant={\"h6\"} component={\"div\"} className={classes.preTitle}>\n        {preTitle}\n      </Typography>\n      <Typography className={classes.title} variant={\"h4\"}>\n        {\" \"}\n        {title}\n      </Typography>\n      <br />\n      <Typography variant={\"h4\"} className={classes.preSubTitle}>\n        {\" \"}\n        {preSubtitle}\n      </Typography>\n      <Typography className={classes.subTitle} variant={\"h4\"}>\n        {\" \"}\n        {subtitle}\n      </Typography>\n    </Typography>\n  );\n};\n","import React from \"react\";\nimport { AnimeFromCharacterResponseType } from \"../../../store/types\";\nimport { Box, Link } from \"@material-ui/core\";\n\nexport interface AnimeListFromAnimeProp {\n  animeList: AnimeFromCharacterResponseType[];\n}\n\nexport const AnimeListFromAnime = ({ animeList }: AnimeListFromAnimeProp) => {\n  return (\n    <Box>\n      {animeList.map((el) => (\n        <Box>\n          {el.name}{\" \"}\n          <Link href={el.url} color={\"primary\"}>\n            ccskrf\n          </Link>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { Placeholder } from \"./Placeholder\";\nimport {\n  animeGuard,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"../../store/types\";\nimport { BodyContent } from \"./BodyContent\";\nimport { AnimeListFromAnime } from \"./Character/AnimeListFromAnime\";\n\nexport const ContentContainer = observer(() => {\n  const content = store.content;\n  let contentJSX = () => {\n    if (content) {\n      const img = content.image_url;\n      const favoriteIcon = content.isFavorite ? (\n        <FavoriteIcon />\n      ) : (\n        <FavoriteBorderIcon />\n      );\n\n      if (animeGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              img={img}\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"Synopsis: \"}\n              subtitle={content.synopsis}\n            />\n          </Content>\n        );\n      } else if (characterGuard(content)) {\n        const animeList = <AnimeListFromAnime animeList={content.anime} />;\n        return (\n          <Content title={content.name} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              img={img}\n              preTitle={\"Name: \"}\n              title={content.name}\n              preSubtitle={\"This character from: \"}\n              subtitle={animeList}\n            />\n          </Content>\n        );\n      } else if (topAnimeGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"RANK: \"}\n              subtitle={content.rank}\n              img={img}\n            />\n          </Content>\n        );\n      } else if (topCharactersGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"RANK: \"}\n              subtitle={content.rank}\n              img={img}\n            />\n          </Content>\n        );\n      } else {\n        let unrealType: never = content;\n      }\n    } else {\n      return <Placeholder />;\n    }\n  };\n\n  return <>{contentJSX()}</>;\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"./Category/Category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React from \"react\";\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport ErrorStore from \"../store/ErrorStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\n\ninterface ErrorAlertProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  root: {},\n});\nexport const ErrorAlert = observer(({ children }: ErrorAlertProp) => {\n  const classes = useStyle();\n  console.log(toJS(ErrorStore.errorText));\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={ErrorStore.isOpenError}\n      autoHideDuration={6000}\n      onClose={() => {\n        ErrorStore.isOpenError = false;\n      }}\n    >\n      <Alert severity=\"error\">{ErrorStore.errorText}</Alert>\n    </Snackbar>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport store from \"./store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport './index.css'\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  CssBaseline,\n  makeStyles,\n  Grid,\n\n  Hidden,\n  CircularProgress,\n  Backdrop, Snackbar\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Content } from \"./components/Content/Content\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/MobPanel\";\nimport {Alert} from \"@material-ui/lab\";\nimport {ErrorAlert} from \"./components/ErrorAlert\";\nimport {colors} from \"./store/colors\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100vw\",\n    height: \"100vh\",\n    background: colors.primaryBG,\n    flexDirection: \"column\",\n    color: colors.firstFill,\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: 'transparent'\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\"\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\"\n  }\n});\nconst App = observer(() => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Appbar />\n      {store.loading ? (\n        <Box className={classes.loader}>\n          <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress />\n          </Backdrop>{\" \"}\n        </Box>\n      ) : null}\n      <Hidden mdUp>\n        <MobPanel />\n      </Hidden>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <Results />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.activeView === \"content\" ? (\n              <ContentContainer />\n            ) : (\n              <Results />\n            )}\n          </Box>\n        </Hidden>\n        <Hidden xsDown>\n          <Box className={classes.contentWrapper}>\n            <ContentContainer />\n          </Box>\n        </Hidden>\n      </Container>\n     <ErrorAlert/>\n    </div>\n  );\n});\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Content_root__2QAnb\",\"contentWrapper\":\"Content_contentWrapper__1_Z_u\",\"header\":\"Content_header__TjYHc\",\"headerTitle\":\"Content_headerTitle__31VRS\",\"img\":\"Content_img__2YsyD\",\"fab\":\"Content_fab__wbXtp\",\"preTitle\":\"Content_preTitle__2LKov\",\"title\":\"Content_title__2SIw7\",\"preSubTitle\":\"Content_preSubTitle__mMOUj\",\"subTitle\":\"Content_subTitle__3RIp9\"};"],"sourceRoot":""}