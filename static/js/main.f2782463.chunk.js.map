{"version":3,"sources":["store/layoutStore.ts","store/store.ts","components/AppBar/AppBar.tsx","components/Results/CardSmall.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Results/input/AnimeSearchInput.tsx","components/Results/Results.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/ContentContainer.tsx","components/MobPanel.tsx","App.js","index.js"],"names":["activeView","mobPanel","categoryView","makeAutoObservable","this","isOpen","store","category","textInput","action","content","data","favorite","canIStartSearch","loading","input","console","log","select","layoutStore","toJS","pos","map","e","mal_id","indexOf","isFavorite","splice","localStorage","setItem","JSON","stringify","unshift","locStorage","getItem","parse","axios","get","then","res","results","forEach","event","includes","catch","error","response","setTimeout","useStyles","makeStyles","theme","wrapper","height","display","background","toolbar","Appbar","classes","AppBar","position","className","color","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","root","width","cursor","margin","media","border","borderRadius","textWrapper","flexDirection","justifyContent","overflow","padding","title","textOverflow","subtitle","fav","onlyTitle","CardSmall","observer","img","synopsis","alternative_names","name","card","style","fontSize","text","gutterBottom","Card","setContent","toggleActiveView","CardMedia","image","CardContent","Box","button","backgroundColor","buttonActive","CategoryButton","Button","value","setCategory","rootRow","container","categories","categoriesRow","Category","categoriesButton","el","Paper","ButtonGroup","createStyles","marginLeft","spacing","flex","divider","label","top","left","opacity","iconButton","AnimeSearchInput","InputBase","onChange","setTextInput","target","placeholder","inputProps","aria-label","startSearch","setActiveCategory","alignItems","cardsList","flexGrow","cardsListScroll","overflowY","Results","cardList","item","image_url","Math","random","maxWidth","contentWrapper","maxHeight","header","float","textAlign","fab","minWidth","minHeight","Content","prefixTitle","prefixSubtitle","favoriteIcon","Fab","setFavorite","alt","src","Placeholder","ContentContainer","SmsFailedOutlined","MobPanel","SwipeableDrawer","anchor","open","onClose","onOpen","direction","backdrop","loader","zIndex","App","useEffect","apiDelay4second","startProgram","CssBaseline","Backdrop","CircularProgress","smDown","xsDown","smUp","styled","div","props","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2782463.chunk.js","sourcesContent":["import {makeAutoObservable, toJS} from \"mobx\";\nimport {CategoriesType} from \"./types\";\nimport store from \"./store\";\n\nclass layoutStore {\n    activeView = 'results'\n    mobPanel = false\n    categoryView = 'anime'\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    toggleMobPanel(isOpen: boolean) {\n        this.mobPanel = isOpen\n    }\n\n    setActiveCategory() {\n        this.categoryView = store.category\n    }\n\n    toggleActiveView(activeView: string) {\n        this.activeView = activeView\n    }\n}\n\nexport default new layoutStore()","import {makeAutoObservable} from \"mobx\";\nimport axios from \"axios\";\nimport {toJS} from 'mobx'\nimport {animeData} from \"./Category/anime\";\nimport {naruto} from \"./Category/q=Naruto\";\nimport {CardType, CategoriesType, IResponse} from \"./types\";\nimport {log} from \"util\";\nimport layoutStore from \"./layoutStore\";\n\nclass store {\n    textInput = ''\n    action = 'search'\n    category: CategoriesType = \"anime\"\n    content: CardType | null = null\n    data: CardType[] = []\n    favorite: CardType[] = []\n    canIStartSearch = true\nloading=false\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setTextInput(input: string) {\n        this.textInput = input\n        console.log(this.textInput)\n    }\n\n    setCategory(select: CategoriesType) {\n        layoutStore.categoryView = ''\n        this.content = null\n        this.data = []\n        if (select === 'favorite') {\n            this.data = this.favorite || null\n            layoutStore.categoryView = 'favorite'\n        }\n        this.category = select\n        console.log(this.category)\n\n    }\n\n    setContent(content: CardType) {\n        this.content = content\n        console.log(toJS(this.content))\n    }\n\n\n    setFavorite() {\n        if (this.content === null) return\n        let pos = this.favorite.map(function (e) {\n            return e.mal_id;\n        }).indexOf(this.content.mal_id)\n        //let indexOfCheck2 = this.favorite.filter(item => item.mal_id !== this.content.mal_id)\n\n        // @ts-ignore\n        if (pos !== -1 || pos === 0) {\n            this.content.isFavorite = false;\n            this.favorite.splice(pos, 1)\n            localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite))\n        } else {\n            this.content.isFavorite = true;\n            this.favorite.unshift(this.content)\n            localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite))\n        }\n    }\n\n    startProgram() {\n        let locStorage = localStorage.getItem(\"favoriteArr\")\n        if (locStorage !== null) {\n            this.favorite = JSON.parse(locStorage)\n        }\n        console.log(toJS(this.favorite))\n    }\n\n\n    apiDelay4second() {\n        this.canIStartSearch = true\n    }\n\n    //\n    // startSearch(array) {\n    //     if (this.category === 'favorite') {\n    //         return\n    //     }\n    //     if (this.canIStartSearch === false) return\n    //     console.log('запрос отправлен')\n    //     this.data = array\n    //     console.log(toJS(this.data))\n    //     console.log('ответ получен')\n    //     this.canIStartSearch = false\n    // }\n\n    startSearch() {\n        console.log('Кнопка нажата')\n        if (this.category === 'favorite') {\n            return\n        }\n        this.loading = true\n\n        axios.get<IResponse>(`https://api.jikan.moe/v3/${this.action}/${this.category}?q=${this.textInput}&limit=5&page=1`).then(res => {\n            res.data.results.forEach(e => {\n                console.log(e)\n                this.favorite.map(event => {\n                    return event.mal_id\n                }).includes(e.mal_id)\n                    ? e.isFavorite = true\n                    : e.isFavorite = false\n            })\n            this.data = res.data.results\n            console.log(toJS(this.data))\n        }).catch(error => console.log(error.response))\n        setTimeout(()=>{\n            this.loading=false\n        }, 500)\n        console.log(\"ответ получен\")\n        this.canIStartSearch = false\n    }\n}\n\nexport default new store()\n\n","import React, {useState} from 'react';\nimport {\n    AppBar,\n\tContainer,\n\tHidden,\n    IconButton,\n    makeStyles,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport layoutStore from \"../../store/layoutStore\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        height: '64px',\n\t   display: \"flex\",\n\t   background: \"rgba(130, 188, 255, 1)\",\n    },\n    toolbar: {}\n\n\n}))\n\nexport const Appbar = () => {\n    const classes = useStyles()\n    return (\n\t   <AppBar position={\"static\"} className={classes.wrapper} color={'transparent'} elevation={0}>\n\t\t  <Container>\n\t\t\t <Toolbar className={classes.toolbar}>\n\t\t\t\t<Hidden mdUp>\n\t\t\t\t<IconButton onClick={()=>{\n\t\t\t\tlayoutStore.toggleMobPanel(true)\n\t\t\t\t}}>\n\t\t\t\t    <MenuIcon/>\n\t\t\t\t</IconButton>\n\t\t\t\t</Hidden>\n\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t    SuperDuperAnime\n\t\t\t\t</Typography>\n\t\t\t </Toolbar>\n\t\t  </Container>\n\t   </AppBar>\n    )\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Grid, Fab, Box} from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {observer} from \"mobx-react-lite\";\nimport store from \"../../store/store\";\nimport layoutStore from \"../../store/layoutStore\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport {CardType} from \"../../store/types\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        position: \"relative\",\n        width: 244,\n        background: 'rgba(255,255,255,0.5)',\n        // minWidth: 250,\n        height: 64,\n        cursor: \"pointer\",\n        margin: \"8px auto\"\n    },\n    media: {\n        border: \"1px solid rgba(255,255,255,0.8)\",\n        width: 56,\n        height: 56,\n        borderRadius: \"100%\",\n        margin: 4\n\n    },\n    textWrapper: {\n        width: 144,\n        height: 64,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        overflow: \"hidden\",\n        padding: 0\n    },\n    title: {\n        width: 144,\n        height: 28,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: '0 4px'\n    },\n    subtitle: {\n        width: 144,\n        height: 36,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: '0 4px'\n    },\n    fav: {\n        width: 56,\n        height: 56,\n    },\n    onlyTitle: {\n        width: 164,\n        height: 64,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        padding: '0 4px'\n    }\n});\n\n\ninterface ICardSmall {\n    img: string\n    title?: string\n    synopsis?: string\n    isFavorite?: boolean\n    alternative_names?: string []\n    name?: string\n    card: CardType\n    category: string\n}\n\nexport const CardSmall = observer(({\n                                       img,\n                                       title,\n                                       synopsis,\n                                       alternative_names,\n                                       name,\n                                       isFavorite,\n                                       card,\n                                       category\n                                   }: ICardSmall) => {\n    const classes = useStyles();\n    const favorite = isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : <FavoriteBorderIcon style={{fontSize: 54}}/>\n\n    const text = category === 'anime' ? <>\n        <Typography gutterBottom variant=\"button\" component=\"h2\" className={classes.title}>\n            {title || name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.subtitle}>\n            {synopsis || alternative_names}\n        </Typography>\n    </> : <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.onlyTitle}>\n        {title || name}\n    </Typography>\n    return (\n        <Card className={classes.root} onClick={() => {\n            store.setContent(card)\n            layoutStore.toggleActiveView('content')\n        }}>\n            <CardMedia\n                className={classes.media}\n                image={img}\n                title=\"Contemplative Reptile\"\n            />\n            <CardContent className={classes.textWrapper}>\n                {text}\n            </CardContent>\n            <Box className={classes.fav}>\n                {favorite}\n            </Box>\n\n        </Card>\n    );\n})","import React from 'react';\nimport store from \"../../store/store\";\nimport {Button, makeStyles} from \"@material-ui/core\";\nimport {CategoriesType} from \"../../store/types\";\nimport {observer} from \"mobx-react-lite\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: \"100%\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(0, 0, 0, .35)\"\n        }\n    },\n    buttonActive: {\n        backgroundColor: \"rgba(0, 0, 0, .35)\",\n\n    }\n}))\nexport const CategoryButton = observer(({data}: CategoryButtonProp) => {\n    const classes = useStyles()\n    return (\n        <Button\n            variant=\"outlined\"\n            className={`${classes.button} ${store.category === data.value ? classes.buttonActive : null}`}\n            onClick={(e) => {\n                store.setCategory(data.value)\n            }}>{data.text}</Button>\n    );\n})\n\ninterface CategoryButtonProp {\n    data: {\n        value: CategoriesType\n        text: string\n    }\n}","import React from 'react';\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, ButtonGroup, makeStyles, Paper,} from \"@material-ui/core\";\nimport {CategoriesType} from \"../../store/types\";\nimport {CategoryButton} from \"./CategoryButton\";\n\n\nconst useStyles = makeStyles((theme) => ({\n            root: {\n                width: \"150px\",\n                margin: 8,\n                background: 'linear-gradient(246.82deg, #FFCADC 0%, #C8FFFD 58.33%)',\n                height: \"calc(100vh - 96px)\"\n            },\n            rootRow: {\n                width: 280\n            },\n            container: {\n                display: \"flex\"\n            },\n            categories: {\n                display: \"flex\",\n                height: \"100%\",\n                width: \"100%\",\n                border: \"none\",\n                flexDirection: \"column\"\n\n            },\n            categoriesRow: {\n                flexDirection: \"row\",\n            },\n        }\n    )\n)\nexport const categories: { value: CategoriesType, text: string }[] = [\n    {value: 'favorite', text: \"Favorite\"},\n    {value: 'anime', text: \"Anime\"},\n    {value: 'character', text: \"Characters\"},\n]\nexport const Category = observer(() => {\n    const classes = useStyles()\n    const categoriesButton = categories.map(el => {\n        return <CategoryButton key={el.value} data={el}/>\n    })\n    return (\n        <Paper className={classes.root}>\n            <ButtonGroup className={classes.categories}>\n                {categoriesButton}\n            </ButtonGroup>\n\n\n        </Paper>\n\n    );\n})\n\n","import React from 'react';\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport store from \"../../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {animeData} from \"../../../store/Category/anime\";\nimport {naruto} from \"../../../store/Category/q=Naruto\";\nimport layoutStore from \"../../../store/layoutStore\";\nimport {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport {categories} from \"../../Category/Category\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            display: \"flex\",\n            position: \"relative\",\n            width: 244,\n            height: 64,\n            cursor: \"pointer\",\n            margin: \"8px auto\"\n\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1,\n        },\n        divider: {\n            height: 28,\n            margin: 4,\n        },\n        label: {\n            position: \"absolute\",\n            top: 2,\n            left: 8,\n            fontSize: 10,\n            opacity: 0.7\n        },\n\n        iconButton: {},\n    }),\n);\n\nexport const AnimeSearchInput = observer(() => {\n    const classes = useStyles();\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <Typography\n                className={classes.label}>{categories.map(el => el.value === store.category ? el.text : null)}</Typography>\n            <InputBase\n                value={store.textInput} onChange={(e) => {\n                store.setTextInput(e.target.value)\n\n            }}\n                className={classes.input}\n                placeholder=\"Start searching Anime\"\n                inputProps={{'aria-label': 'search Anime'}}\n            />\n            <IconButton className={classes.iconButton}\n                        aria-label=\"search\"\n                        onClick={() => {\n                            store.startSearch()\n                            layoutStore.setActiveCategory()\n                            // store.category === 'anime' ? store.startFakeSearch(animeData.results) : store.category === 'character' ? store.startFakeSearch(naruto.results) : store.startFakeSearch(null)\n                        }}>\n                <SearchIcon/>\n            </IconButton>\n\n        </Paper>\n    );\n})","import React from 'react';\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {IconButton, Input, makeStyles, Paper, Box, CircularProgress} from \"@material-ui/core\";\nimport {CardSmall} from \"./CardSmall\";\nimport {AnimeSearchInput} from \"./input/AnimeSearchInput\"\nimport layoutStore from \"../../store/layoutStore\";\nimport {categories} from \"../Category/Category\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t   display: \"flex\",\n\t   flexDirection: \"column\",\n\t   width: \"280px\",\n\t   justifyContent: \"center\",\n\t   alignItems: \"center\",\n\t   margin:8,\n\t   height: \"calc(100vh - 64px - 32px)\",\n\t   background: 'linear-gradient(113.18deg, #FFCADC 0%, #C8FFFD 58.33%)'\n    },\n    cardsList: {\n\t   position: \"relative\",\n\t   flexGrow: 1,\n\t   width: \"260px\"\n    },\n    cardsListScroll: {\n\t   position: \"absolute\",\n\t   height: \"calc(100vh - 64px - 128px)\",\n\t   width: \"260px\",\n\t   overflowY: \"auto\",\n    }\n}))\n\nexport const Results = observer(() => {\n\t   const classes = useStyles()\n\t   const cardList = store.data === null ? <div>Введите данные</div> : store.data.map(item => {\n\n\t   \treturn <CardSmall\n\t\t  key={Math.random() + item.mal_id}\n\t\t  img={item.image_url}\n\t\t  title={item.title|| item.name}\n\t\t  name={item.name }\n\t\t  synopsis={item.synopsis}\n\t\t  alternative_names={item.alternative_names}\n\t\t  category={item.synopsis ? \"anime\" : \"character\"\t\t  }\n\t\t  isFavorite={item.isFavorite}\n\t\t  card={item}\n\t   />})\n\t   return <Paper className={classes.root}>\n\n\t\t  <Box className={classes.cardsList}>\n\t\t\t <AnimeSearchInput/>\n\n\t\t\t  <Box>{categories.map(el=> el.value===layoutStore.categoryView? el.text: null)}</Box>\n\t\t\t <Box className={classes.cardsListScroll}>\n\t\t\t\t{cardList}\n\t\t\t </Box>\n\t\t  </Box>\n\n\n\t   </Paper>\n    }\n)\n\n","import React from 'react';\nimport {Card, Fab, makeStyles, Grid, Box, colors, Paper} from \"@material-ui/core\";\nimport {observer} from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport layoutStore from \"../../store/layoutStore\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport {CategoriesType} from \"../../store/types\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"absolute\",\n        width: \"100%\",\n        maxWidth: \"100%\",\n        height: \"calc(100% - 32px)\",\n        margin: 8,\n        background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n\n    },\n    contentWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"start\",\n        alignItems: \"center\",\n        maxHeight: \"calc(100% - 32px)\",\n        overflowY: \"auto\",\n\n    },\n    header: {\n        display: \"flex\",\n        background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n        width: \"100%\",\n        padding: 4,\n        alignItems: \"center\",\n    },\n    img: {\n        height: \"300px\",\n        float: \"left\",\n        margin: 8,\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: \"left\",\n\t\ttextOverflow: \"ellipsis\",\n    },\n    subtitle: {\n        width: \"100%\",\n    },\n    fab: {\n\t\tminWidth: 40,\n\t\tminHeight: 40,\n\t\tmaxWidth: 40,\n\t\tmaxHeight: 40,\n        margin: 4\n    }\n\n}))\n\ninterface IContent {\n    title?: string\n    prefixTitle: string\n    subtitle?: string | string[]\n    prefixSubtitle: string\n    favoriteIcon: JSX.Element\n    img?: string\n}\n\nexport const Content = observer(({title, prefixTitle, subtitle, prefixSubtitle, favoriteIcon, img}: IContent) => {\n    const classes = useStyles()\n    return (\n        <Paper className={classes.root}>\n            <Box className={classes.contentWrapper}>\n                <Paper className={classes.header}>\n\n\n                    <Fab className={classes.fab} color=\"primary\" onClick={() => {\n                        layoutStore.toggleActiveView(\"results\")\n                    }}><ArrowBackIcon/>\n                    </Fab>\n                    <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n                        {favoriteIcon}\n                    </Fab>\n\n\n                    <Typography className={classes.title} variant={'h4'}\n                                component={'h2'}>\n                        {title}\n                    </Typography>\n\n\n                </Paper>\n                <Typography className={classes.subtitle} variant={'body1'} component={'p'}>\n                    <img className={classes.img}\n                         alt={'#'}\n                         src={img}/>\n                    {prefixTitle}: {title} <br/>\n                    {prefixSubtitle}: {subtitle}\n                </Typography>\n            </Box>\n        </Paper>\n    );\n})\n","import React from 'react';\nimport {Box, makeStyles} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        position: \"absolute\",\n        width: \"100%\",\n        maxWidth: \"100%\",\n        height: \"calc(100% - 32px)\",\n        margin: 8,\n        background: \"linear-gradient(113.18deg, #FFD3E2 0%, #6FFFF9 100%)\",\n    }\n}))\n\nexport const Placeholder = () => {\n    const classes = useStyles()\n    return (\n        <Box className={classes.root}>\n        </Box>\n\n    );\n};","import React from 'react';\nimport {Content} from \"./Content\";\nimport store from \"../../store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport {SmsFailedOutlined} from \"@material-ui/icons\";\nimport {Box} from \"@material-ui/core\";\nimport {Placeholder} from \"./Placeholder\";\n\nexport const ContentContainer = observer(() => {\n    if (store.content === null) {\n\n    }\n    const title = () => {\n        if (store.content === null) return\n        return store.content.title || store.content.name\n    }\n    const prefixTitle = store.category === 'anime' ? \"Title\" : 'Name'\n    const subtitle = () => {\n        if (store.content === null) return\n        return store.content.synopsis || store.content.alternative_names\n    }\n    const prefixSubtitle = store.category === 'anime' ? 'Description' : 'AltName'\n    const img = () => {\n        if (store.content === null) return\n        return store.content.image_url\n    }\n    const favorite = () => {\n        if (store.content === null) return <SmsFailedOutlined/>\n        return store.content.isFavorite ? <FavoriteIcon/> : <FavoriteBorderIcon/>\n    }\n    return (<>\n            {\n                store.content === null ? <Placeholder/> : <Content\n                    title={title()}\n                    prefixTitle={prefixTitle}\n                    subtitle={subtitle()}\n                    prefixSubtitle={prefixSubtitle}\n                    img={img()}\n                    favoriteIcon={favorite()}\n                />\n            }\n        </>\n    );\n})\n\n","import React from 'react';\nimport {Box, Hidden, makeStyles, SwipeableDrawer} from \"@material-ui/core\";\nimport layoutStore from \"../store/layoutStore\";\nimport {observer} from \"mobx-react-lite\";\nimport {Category} from \"./Category/Category\";\nimport {Results} from \"./Results/Results\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t   width: \"fit-content\",\n    },\n    container: {\n\t   background: \"rgba(65, 94, 127, 1)\",\n\t   padding: '60px 8px',\n\t   height: \"100vh\",\n\t   display: \"flex\",\n\t   alignItems: \"stretch\"\n    }\n}))\n\nexport const MobPanel = observer(() => {\n\n    const classes = useStyles()\n    return (\n\t   <SwipeableDrawer\n\t\t  anchor={\"left\"}\n\t\t  open={layoutStore.mobPanel}\n\t\t  onClose={() => {\n\t\t\t layoutStore.toggleMobPanel(false)\n\t\t  }}\n\t\t  onOpen={() => {\n\t\t\t layoutStore.toggleMobPanel(true)\n\t\t  }}\n\t\t  className={classes.root}\n\t   >\n\t\t  <Box className={classes.container}>\n\t\t\t <Hidden mdUp>\n\t\t\t\t<Category/>\n\t\t\t </Hidden>\n\n\t\t  </Box>\n\t   </SwipeableDrawer>\n    );\n})","import React, {useEffect, useState} from 'react'\nimport styled from \"styled-components\";\nimport store from \"./store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {\n    Box,\n    Button,\n    ButtonGroup,\n    Container,\n    CssBaseline,\n    makeStyles,\n    Grid,\n    colors,\n    Hidden,\n    CircularProgress, Backdrop\n} from \"@material-ui/core\";\nimport {Appbar} from \"./components/AppBar/AppBar\";\nimport layoutStore from \"./store/layoutStore\";\nimport {Results} from \"./components/Results/Results\";\nimport {Content} from \"./components/Content/Content\";\nimport {Category} from \"./components/Category/Category\";\nimport {ContentContainer} from \"./components/Content/ContentContainer\";\nimport {MobPanel} from \"./components/MobPanel\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t   display: \"flex\",\n\t   position: \"relative\",\n\t   width: \"100vw\",\n\t   height: \"100vh\",\n\t   background: \"linear-gradient(315deg, #FFDEE9 0%, #B5FFFC 100%)\",\n\t   flexDirection: \"column\",\n    },\n    container: {\n\t   position: \"relative\",\n\t   display: \"flex\",\n\t   justifyContent: \"center\"\n    },\n\n    button: {\n\t   display: \"flex\",\n\t   direction: \"column\",\n\t   width: \"100%\"\n    },\n    contentWrapper: {\n        position:\"relative\",\n        flexGrow: 1,\n\t   height: \"calc(100vh - 64px)\",\n\t   background: \"transparent\",\n    },\n    backdrop:{\n        color: \"rgba(0,0,0,0.3)\"\n    },\n    loader: {\n\t   position: \"fixed\",\n\t   zIndex: 999,\n\t   top: \"50%\",\n\t   left: \"50%\",\n    },\n\n}))\nconst App = observer(() => {\n    const classes = useStyles()\n\n    useEffect(() => {\n\t   setTimeout(() => {\n\t\t  store.apiDelay4second()\n\t   }, 4000)\n    }, [store.canIStartSearch]);\n    useEffect(() => {\n\t   store.startProgram();\n    }, []);\n\n    return (\n\t   <div className={classes.root}>\n\t\t  <CssBaseline/>\n\t\t  <Appbar/>\n\t\t  {store.loading ? <Box className={classes.loader}><Backdrop className={classes.backdrop} open={true}><CircularProgress/></Backdrop> </Box> : null}\n\t\t  <Hidden>\n\t\t\t <MobPanel smDown/>\n\t\t  </Hidden>\n\t\t  <Container maxWidth=\"lg\" className={classes.container}>\n\t\t\t <Hidden smDown>\n\t\t\t <Category/>\n\t\t\t </Hidden>\n\t\t\t <Hidden xsDown>\n\t\t\t <Results/>\n\t\t\t </Hidden>\n\t\t\t <Hidden smUp>\n\t\t\t <Box className={classes.contentWrapper}>\n\t\t\t     {layoutStore.activeView === 'content' ?\n\t\t\t \t   <ContentContainer/> : <Results/> }\n\t\t\t </Box>\n\t\t\t </Hidden>\n\t\t\t <Hidden xsDown>\n\t\t\t <Box className={classes.contentWrapper}>\n\t\t\t   <ContentContainer/>\n\t\t\t </Box>\n\t\t\t </Hidden>\n\n\t\t  </Container>\n\n\t   </div>\n\n    );\n})\n\nexport default App;\n\nexport const Typography = styled.div`\n\n  font-size: ${props => props.fontSize || \"40px\"};\n  font-family: Roboto;\n  cursor: pointer;\n  font-weight: ${props => props.fontWeight || \"100\"};\n  color: ${props => props.color || 'rgba(255,255,255,1)'}`\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}