{"version":3,"sources":["store/types.ts","store/ErrorStore.ts","store/loaderStore.ts","store/pagination.ts","store/store.ts","store/LayoutStore.ts","store/colors.ts","components/AppBar/AppBar.tsx","components/Category/CategoryButton.tsx","components/Category/Category.tsx","components/Content/Content.tsx","components/Content/Placeholder.tsx","components/Content/BodyContent.tsx","components/Content/Character/AnimeListFromAnime.tsx","components/Content/ContentContainer.tsx","components/AppBar/MobPanel.tsx","components/ErrorAlert.tsx","components/Loader/Loader.tsx","components/Loader/LoaderContainer.tsx","components/Results/CardSmall/CardSmall.tsx","components/Results/CardSmall/TextBlock.tsx","components/Results/CardSmall/CardSmallContainer.tsx","components/Results/Search/Search.tsx","components/Results/Search/SearchContainer.tsx","components/Results/Results.tsx","components/Results/ResultsContainer.tsx","App.tsx","index.tsx","components/Content/Content.module.css"],"names":["AnimeFromCharacterResponseZod","z","object","mal_id","number","type","literal","name","string","url","MangaFromCharacterResponseZod","CharacterZod","image_url","alternative_names","array","anime","manga","AnimeZod","title","synopsis","TopAnimeZod","episodes","score","rank","TopCharactersZod","animeography","characterGuard","data","undefined","animeGuard","topAnimeGuard","topCharactersGuard","errorStatus","errorText","isOpenError","makeAutoObservable","this","open","text","status","error","toggleAlertError","changeStatusError","response","changeTextError","message","loading","paginationStore","textSearch","fetching","active","currentPage","topAnime","topCharacters","characters","favorite","fetchingBoolean","forEach","e","store","map","event","includes","isFavorite","action","a","category","loaderStore","axios","get","createPaginationString","then","res","setFetching","console","log","LayoutStore","categoryView","lastAnime","concat","results","el","lastCharacter","top","topCharacter","favoriteCheck","catch","setTimeout","finally","isThrottle","isWaiting","startPagination","content","startProgram","getTopAnime","setCategoriesView","getTopCharacters","locStorage","localStorage","getItem","JSON","parse","select","toJS","pos","findIndex","item","splice","unshift","setItem","stringify","textInput","filterFavorite","filter","toLowerCase","ErrorStore","catchingErrors","ms","startSearch","activeView","mobPanel","isContentOpen","isOpen","colors","useStyles","makeStyles","theme","wrapper","background","toolbar","Appbar","classes","AppBar","position","className","elevation","Container","Toolbar","Hidden","mdUp","IconButton","onClick","toggleMobPanel","Typography","variant","component","button","width","color","backgroundColor","buttonActive","CategoryButton","observer","Button","value","setCategory","root","margin","height","boxShadow","rootRow","container","display","categories","border","flexDirection","categoriesRow","Category","categoriesButton","Paper","ButtonGroup","Content","favoriteIcon","children","Box","contentWrapper","header","smUp","Fab","fab","style","minHeight","minWidth","toggleActiveView","setFavorite","headerTitle","maxWidth","Placeholder","BodyContent","img","subtitle","preSubtitle","preTitle","alt","src","preSubTitle","subTitle","AnimeListFromAnime","animeList","Link","href","ContentContainer","contentJSX","padding","alignItems","MobPanel","SwipeableDrawer","anchor","onClose","onOpen","useStyle","ErrorAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","backdrop","loader","zIndex","left","Loader","Backdrop","CircularProgress","LoaderContainer","cursor","media","borderRadius","fav","right","CardSmall","textDescription","Card","CardMedia","image","textWrapper","justifyContent","overflow","textOverflow","onlyTitle","TextBlock","description","gutterBottom","CardContent","CardSmallContainer","fontSize","setContent","layoutStore","cardSmall","input","divider","label","iconButton","Search","activeCategory","setTextInput","activeCategoryText","InputBase","onChange","target","placeholder","inputProps","aria-label","SearchContainer","useState","useEffect","length","startSearchWithDelay","setActiveCategory","validator","cardsList","overflowY","resultsLabel","cardsListScroll","Results","resultsTitle","toResultRef","scrollResult","cardList","Math","random","ref","onScroll","ResultsContainer","useRef","current","scrollTo","startPaginationWithDelay","scrollHeight","scrollTop","window","innerHeight","getBoundingClientRect","maxHeight","flexGrow","App","CssBaseline","smDown","xsDown","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f7d280a8.chunk.js","sourcesContent":["import { z } from \"zod\";\n\nexport type CategoriesType = \"anime\" | \"character\" | \"favorite\";\nexport type ActiveViewType = \"results\" | \"content\";\nexport type CategoriesViewType = CategoriesType | \"topAnime\" | \"topCharacters\";\n\nexport type CardType = (\n  | CharacterType\n  | AnimeType\n  | TopAnimeType\n  | TopCharactersType\n) &\n  ExtraTypes;\n\nexport type CardType1 = {\n  mal_id: number;\n  title: string;\n  description: string;\n  image_url: string;\n  isFavorite: boolean;\n  category: CategoriesViewType;\n};\n\nexport interface ExtraTypes {\n  isFavorite?: boolean;\n  category?: CategoriesViewType;\n}\n\nexport interface IResponse {\n  request_hash: string;\n  request_cached: boolean;\n  request_cache_expiry: number;\n  results: CardType[];\n}\nexport interface IResponseTop {\n  request_hash: string;\n  request_cached: boolean;\n  request_cache_expiry: number;\n  top: TopAnimeType[] | TopCharactersType[];\n}\n\nconst AnimeFromCharacterResponseZod = z.object({\n  mal_id: z.number(),\n  type: z.literal(\"anime\"),\n  name: z.string(),\n  url: z.string(),\n});\nexport type AnimeFromCharacterResponseType = z.infer<\n  typeof AnimeFromCharacterResponseZod\n>;\n\nconst MangaFromCharacterResponseZod = z.object({\n  mal_id: z.number(),\n  type: z.literal(\"manga\"),\n  name: z.string(),\n  url: z.string(),\n});\ntype MangaFromCharacterResponseType = z.infer<\n  typeof MangaFromCharacterResponseZod\n>;\n\nexport const CharacterZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  name: z.string(),\n  alternative_names: z.string().array(),\n  anime: z.array(AnimeFromCharacterResponseZod),\n  manga: z.array(MangaFromCharacterResponseZod),\n});\n\nexport const AnimeZod = z.object({\n  mal_id: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n  title: z.string(),\n  synopsis: z.string(),\n});\n\nexport const TopAnimeZod = z.object({\n  mal_id: z.number(),\n  episodes: z.number(),\n  score: z.number(),\n  title: z.string(),\n  rank: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n});\nexport const TopCharactersZod = z.object({\n  mal_id: z.number(),\n  animeography: z.array(AnimeFromCharacterResponseZod),\n  title: z.string(),\n  rank: z.number(),\n  url: z.string(),\n  image_url: z.string(),\n});\n\nexport type CharacterType = z.infer<typeof CharacterZod>;\nexport type AnimeType = z.infer<typeof AnimeZod>;\nexport type TopAnimeType = z.infer<typeof TopAnimeZod>;\nexport type TopCharactersType = z.infer<typeof TopCharactersZod>;\n\nexport function characterGuard(data: CardType): data is CharacterType {\n  return (data as CharacterType).alternative_names !== undefined;\n}\nexport function animeGuard(data: CardType): data is AnimeType {\n  return (data as AnimeType).synopsis !== undefined;\n}\nexport function topAnimeGuard(data: CardType): data is TopAnimeType {\n  return (data as TopAnimeType).score !== undefined;\n}\nexport function topCharactersGuard(data: CardType): data is TopCharactersType {\n  return (data as TopCharactersType).animeography !== undefined;\n}\n","import {makeAutoObservable} from \"mobx\";\n\nclass ErrorStore {\n    errorStatus: number = 0\n    errorText: string = ''\n    isOpenError = false\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    toggleAlertError(open: boolean) {\n        this.isOpenError = open\n    }\n\n    changeTextError(text: string) {\n        this.errorText = text\n    }\n\n    changeStatusError(status: number) {\n        this.errorStatus = status\n    }\n\n    catchingErrors(error: any) {\n\n        this.toggleAlertError(true)\n        this.changeStatusError(error.response.status)\n        this.changeTextError(error.response.data.message)\n    }\n}\n\nexport default new ErrorStore()","import { makeAutoObservable } from \"mobx\";\n\nclass LoaderStore {\n  loading = false;\n  constructor() {\n    makeAutoObservable(this);\n  }\n  closeLoader() {\n    this.loading = false;\n  }\n  openLoader() {\n    this.loading = true;\n  }\n}\n\nexport default new LoaderStore();\n","import { makeAutoObservable } from \"mobx\";\nimport { CardType, CategoriesViewType } from \"./types\";\nimport axios from \"axios\";\nimport store from \"./store\";\nimport LayoutStore from \"./LayoutStore\";\nimport loaderStore from \"./loaderStore\";\n\nclass Pagination {\n  textSearch = \"\";\n\n  fetching = false;\n  active: CategoriesViewType = \"topAnime\";\n  currentPage = {\n    topAnime: 1,\n    topCharacters: 1,\n    characters: 1,\n    anime: 1,\n    favorite: 0,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setFetching(fetchingBoolean: boolean) {\n    this.fetching = fetchingBoolean;\n  }\n\n  favoriteCheck(data: CardType[]) {\n    data.forEach((e) => {\n      store.favorite\n        .map((event) => {\n          return event.mal_id;\n        })\n        .includes(e.mal_id)\n        ? (e.isFavorite = true)\n        : (e.isFavorite = false);\n    });\n  }\n\n  createPaginationString() {\n    switch (this.active) {\n      case \"topAnime\": {\n        return `https://api.jikan.moe/v3/top/anime/${this.currentPage.topAnime}`;\n      }\n      case \"topCharacters\": {\n        return `https://api.jikan.moe/v3/top/characters/${this.currentPage.topCharacters}`;\n      }\n      case \"character\": {\n        return `https://api.jikan.moe/v3/${store.action}/character?q=${store.textSearch}&limit=10&page=${this.currentPage.characters}`;\n      }\n      case \"anime\": {\n        return `https://api.jikan.moe/v3/${store.action}/anime?q=${store.textSearch}&limit=10&page=${this.currentPage.anime}`;\n      }\n      case \"favorite\": {\n        return \"\";\n      }\n    }\n  }\n\n  async startPagination() {\n    if (store.category !== \"favorite\") loaderStore.loading = true;\n    await axios\n      .get(\n        //todo proverka\n        this.createPaginationString()\n      )\n      .then((res) => {\n        this.setFetching(false);\n        console.log(\"проверка\");\n        store.data = [];\n        if (LayoutStore.categoryView === \"anime\") {\n          store.lastAnime = store.lastAnime.concat(\n            res.data.results as CardType[]\n          );\n          store.lastAnime.forEach((el) => (el.category = \"anime\"));\n          store.data = store.lastAnime;\n          this.currentPage.anime += 1;\n        }\n        if (LayoutStore.categoryView === \"character\") {\n          //todo протипизировать нормально\n          store.lastCharacter = store.lastCharacter.concat(\n            res.data.results as CardType[]\n          );\n          store.lastCharacter.forEach((el) => (el.category = \"character\"));\n          store.data = store.lastCharacter;\n          this.currentPage.characters += 1;\n        }\n        if (LayoutStore.categoryView === \"topAnime\") {\n          store.topAnime = store.topAnime.concat(res.data.top as CardType[]);\n          store.topAnime.forEach((el) => (el.category = \"topAnime\"));\n          store.data = store.topAnime;\n\n          this.currentPage.topAnime += 1;\n        }\n        if (LayoutStore.categoryView === \"topCharacters\") {\n          store.topCharacter = store.topCharacter.concat(\n            res.data.results as CardType[]\n          );\n          store.topCharacter.forEach((el) => (el.category = \"topCharacters\"));\n          store.data = store.topCharacter;\n\n          this.currentPage.topCharacters += 1;\n        }\n        this.favoriteCheck(store.data);\n      })\n      .catch((error) => {\n        // ErrorStore.catchingErrors(error);\n        console.log(error);\n      })\n      .then(() => {\n        setTimeout(() => {\n          loaderStore.loading = false;\n        }, 500);\n      })\n      .finally(() => this.setFetching(false));\n  }\n\n  startPaginationWithDelay() {\n    if (store.isThrottle) {\n      console.log(\"тротл\");\n      store.isWaiting = true;\n      console.log(\"ждем снятия ограничения\");\n      return;\n    } else {\n      console.log(\"startsearch\");\n      store.isThrottle = true;\n      this.startPagination();\n    }\n    setTimeout(() => {\n      console.log(\"4сек прошло снимаем ограничение\");\n      store.isThrottle = false;\n      if (store.isWaiting) {\n        console.log(\"ограничение снято, запрос отправлен\");\n        this.startPagination();\n      } else {\n        console.log(\"ограничение снято, запрос не отправлялся\");\n        return;\n      }\n    }, 4000);\n\n    store.isWaiting = false;\n  }\n}\n\nexport const paginationStore = new Pagination();\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport axios from \"axios\";\nimport {\n  animeGuard,\n  AnimeZod,\n  CardType,\n  CategoriesType,\n  characterGuard,\n  CharacterZod,\n  IResponse,\n  IResponseTop,\n  topAnimeGuard,\n  TopAnimeZod,\n  topCharactersGuard,\n  TopCharactersZod,\n} from \"./types\";\nimport LayoutStore from \"./LayoutStore\";\nimport ErrorStore from \"./ErrorStore\";\nimport { paginationStore } from \"./pagination\";\nimport loaderStore from \"./loaderStore\";\n\nclass store {\n  textSearch = \"\";\n  action = \"search\";\n  category: CategoriesType = \"anime\";\n  content: CardType | null = null;\n  data: CardType[] = [];\n  topAnime: CardType[] = [];\n  topCharacter: CardType[] = [];\n  lastAnime: CardType[] = [];\n  lastCharacter: CardType[] = [];\n  favorite: CardType[] = [];\n  isThrottle = false;\n  isWaiting = false;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.startProgram();\n    this.getTopAnime().then(() => {\n      //----------------->\n      //this.data = this.topAnime\n      LayoutStore.setCategoriesView(\"topAnime\");\n    });\n\n    this.getTopCharacters();\n  }\n\n  startProgram() {\n    let locStorage = localStorage.getItem(\"favoriteArr\");\n    if (locStorage !== null) {\n      this.favorite = JSON.parse(locStorage);\n      // this.scrollFavorite(locStorage)\n    }\n  }\n\n  setCategory(select: CategoriesType) {\n    this.content = null;\n    this.data = [];\n    switch (select) {\n      case \"character\":\n        this.data = this.topCharacter;\n        //todo сменить top\n        LayoutStore.categoryView = \"topCharacters\";\n        break;\n      case \"anime\":\n        this.data = this.topAnime;\n        LayoutStore.categoryView = \"topAnime\";\n        break;\n      case \"favorite\":\n        this.data = this.favorite;\n        LayoutStore.categoryView = \"favorite\";\n        break;\n      default:\n        console.error(select);\n    }\n    this.category = select;\n    console.log(this.category);\n  }\n\n  setContent(content: CardType) {\n    this.content = content;\n    console.log(toJS(this.content));\n  }\n\n  setFavorite() {\n    if (this.content === null) return;\n    let pos = this.favorite.findIndex(\n      (item) => item.mal_id == this.content?.mal_id\n    );\n\n    if (pos !== -1) {\n      this.content.isFavorite = false;\n      this.favorite.splice(pos, 1);\n    } else {\n      this.content.isFavorite = true;\n      this.favorite.unshift(this.content);\n    }\n    localStorage.setItem(`favoriteArr`, JSON.stringify(this.favorite));\n  }\n\n  async getTopAnime() {\n    loaderStore.loading = true;\n    await axios\n      .get<IResponseTop>(`https://api.jikan.moe/v3/top/anime/1`)\n      .then((res) => {\n        this.topAnime = res.data.top;\n        this.topAnime.forEach((el) => {\n          el.category = \"topAnime\";\n          TopAnimeZod.parse(el);\n        });\n        this.data = this.topAnime;\n        paginationStore.currentPage.topAnime = 2;\n\n        this.favoriteCheck(this.topAnime);\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        loaderStore.loading = false;\n      });\n  }\n\n  async getTopCharacters() {\n    loaderStore.loading = true;\n    axios\n      .get<IResponseTop>(`https://api.jikan.moe/v3/top/characters/1`)\n      .then((res) => {\n        this.topCharacter = this.topCharacter.concat(res.data.top);\n        this.topCharacter.forEach((el) => {\n          el.category = \"topCharacters\";\n          TopCharactersZod.parse(el);\n        });\n        paginationStore.currentPage.topCharacters = 2;\n        this.favoriteCheck(this.topAnime);\n      })\n      .catch((error) => console.log(error.response))\n      .then(() => {\n        loaderStore.loading = false;\n      });\n  }\n\n  favoriteCheck(data: CardType[]) {\n    data.forEach((e) => {\n      this.favorite\n        .map((event) => {\n          return event.mal_id;\n        })\n        .includes(e.mal_id)\n        ? (e.isFavorite = true)\n        : (e.isFavorite = false);\n    });\n  }\n\n  async startSearch(textInput: string) {\n    if (this.category === \"favorite\") {\n      //let filterFavorite\n      let filterFavorite = this.favorite.filter((item) => {\n        if (animeGuard(item)) {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n        if (characterGuard(item)) {\n          return item.name.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n        if (topAnimeGuard(item)) {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n        if (topCharactersGuard(item)) {\n          return item.title.toLowerCase().includes(textInput.toLowerCase());\n          console.log(item);\n        }\n      });\n      // return item.title?.toLowerCase().includes(textInput.toLowerCase())\n      console.log(filterFavorite);\n      this.data = filterFavorite;\n      return;\n    }\n    loaderStore.loading = true;\n\n    await axios\n      .get<IResponse>(\n        `https://api.jikan.moe/v3/${this.action}/${this.category}?q=${textInput}&limit=10&page=1`\n      )\n      .then((res) => {\n        this.data = [];\n        if (this.category === \"anime\") {\n          this.lastAnime = res.data.results;\n          this.lastCharacter.forEach((el) => AnimeZod.parse(el));\n          this.lastAnime.forEach((el) => {\n            AnimeZod.parse(el);\n            el.category = \"anime\";\n          });\n          this.data = this.lastAnime;\n\n          paginationStore.currentPage.anime = 2;\n        }\n        if (this.category === \"character\") {\n          this.lastCharacter = res.data.results;\n          this.lastCharacter.forEach((el) => {\n            CharacterZod.parse(el);\n            el.category = \"character\";\n          });\n          this.data = this.lastCharacter;\n\n          paginationStore.currentPage.characters = 2;\n        }\n\n        paginationStore.active = LayoutStore.categoryView;\n        this.favoriteCheck(this.data);\n      })\n      .catch((error) => {\n        ErrorStore.catchingErrors(error);\n      })\n      .then(() => {\n        setTimeout(() => {\n          loaderStore.loading = false;\n        }, 500);\n      });\n  }\n\n  startSearchWithDelay(ms: number, textInput: string) {\n    this.textSearch = textInput;\n    if (this.isThrottle) {\n      console.log(\"тротл\");\n      this.isWaiting = true;\n      console.log(\"ждем снятия ограничения\");\n      return;\n    } else {\n      console.log(\"startsearch\");\n      this.isThrottle = true;\n      this.startSearch(textInput);\n    }\n    setTimeout(() => {\n      console.log(\"4сек прошло снимаем ограничение\");\n      this.isThrottle = false;\n      if (this.isWaiting) {\n        console.log(\"ограничение снято, запрос отправлен\");\n        this.startSearch(textInput);\n      } else {\n        console.log(\"ограничение снято, запрос не отправлялся\");\n        return;\n      }\n    }, ms);\n\n    this.isWaiting = false;\n  }\n}\n\nexport default new store();\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport { CategoriesType, ActiveViewType, CategoriesViewType } from \"./types\";\nimport store from \"./store\";\n\n//todo классы лучше называть с большой буквы\nclass LayoutStore {\n  activeView: ActiveViewType = \"results\";\n  mobPanel = false;\n  //todo здесь тоже, будет CategoriesType\n  categoryView: CategoriesViewType = \"anime\";\n  isContentOpen = false;\n  constructor() {\n    makeAutoObservable(this);\n  }\n  toggleContent(isOpen: boolean) {\n    this.isContentOpen = isOpen;\n  }\n  toggleMobPanel(isOpen: boolean) {\n    this.mobPanel = isOpen;\n    console.log(this.mobPanel);\n  }\n\n  setActiveCategory() {\n    this.categoryView = store.category;\n  }\n  setCategoriesView(category: CategoriesViewType) {\n    this.categoryView = category;\n  }\n  toggleActiveView(activeView: ActiveViewType) {\n    this.activeView = activeView;\n  }\n}\n\nexport default new LayoutStore();\n","export const colors = {\n  bg: \"rgba(48, 68, 78, 1)\",\n  darkBG: \"rgba(31, 36, 43, 1)\",\n  primaryBG: \"rgba(34, 52, 60, 1)\",\n  secondaryBG: \"rgba(150, 167, 175, 1)\",\n  tertiaryBG: \"rgba(71, 94, 105, 1)\",\n  primaryText: \"rgba(241, 241, 241, 1)\",\n  secondaryText: \"rgba(150, 167, 175, 1)\",\n  yellow: \"rgba(255, 197, 66, 1)\",\n  orange: \"rgba(255, 151, 74, 1)\",\n  red: \"rgba(255, 86, 94, 1)\",\n  blue: \"rgba(0, 98, 255, 1)\",\n  green: \"rgba(64, 223, 159, 1)\",\n  gray: \"rgba(200,200,200,0.5)\",\n  white: \"rgba(250,250,250,1)\",\n};\n","import React from \"react\";\nimport {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    background: colors.darkBG,\n  },\n  toolbar: {},\n}));\n\nexport const Appbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position={\"static\"} className={classes.wrapper} elevation={8}>\n      <Container>\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdUp>\n            <IconButton\n              onClick={() => {\n                LayoutStore.toggleMobPanel(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography variant=\"h5\" component=\"h2\">\n            SuperDuperAnime\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport store from \"../../store/store\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { observer } from \"mobx-react-lite\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    color: colors.secondaryText,\n\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, .35)\",\n    },\n  },\n  buttonActive: {\n    backgroundColor: \"rgba(0, 0, 0, .35)\",\n  },\n}));\nexport const CategoryButton = observer(({ data }: CategoryButtonProp) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"outlined\"\n      className={`${classes.button} ${\n        store.category === data.value ? classes.buttonActive : null\n      }`}\n      onClick={(e) => {\n        store.setCategory(data.value);\n      }}\n    >\n      {data.text}\n    </Button>\n  );\n});\n\ninterface CategoryButtonProp {\n  data: {\n    value: CategoriesType;\n    text: string;\n  };\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { ButtonGroup, makeStyles, Paper } from \"@material-ui/core\";\nimport { CategoriesType } from \"../../store/types\";\nimport { CategoryButton } from \"./CategoryButton\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"150px\",\n    margin: 8,\n    background: colors.tertiaryBG,\n    height: \"calc(100vh - 96px)\",\n    boxShadow: \"4px 4px 8px 0px rgba(74, 97, 114, 0.2)\",\n  },\n  rootRow: {\n    width: 280,\n  },\n  container: {\n    display: \"flex\",\n  },\n  categories: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    flexDirection: \"column\",\n  },\n  categoriesRow: {\n    flexDirection: \"row\",\n  },\n}));\nexport const categories: { value: CategoriesType; text: string }[] = [\n  { value: \"favorite\", text: \"Favorite\" },\n  { value: \"anime\", text: \"Anime\" },\n  { value: \"character\", text: \"Characters\" },\n];\nexport const Category = observer(() => {\n  const classes = useStyles();\n  const categoriesButton = categories.map((el) => {\n    return <CategoryButton key={el.value} data={el} />;\n  });\n  return (\n    <Paper className={classes.root}>\n      <ButtonGroup className={classes.categories}>\n        {categoriesButton}\n      </ButtonGroup>\n    </Paper>\n  );\n});\n","import React from \"react\";\nimport { Box, Fab, Hidden } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport store from \"../../store/store\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport classes from \"./Content.module.css\";\n\n// interface IContent {\n//   title?: string;\n//   prefixTitle: string;\n//   subtitle?: string | string[];\n//   prefixSubtitle: string;\n//   favoriteIcon: JSX.Element;\n//   img?: string;\n// }\n\n// export const Content = observer(\n//     ({\n//          title,\n//          prefixTitle,\n//          subtitle,\n//          prefixSubtitle,\n//          favoriteIcon,\n//          img,\n//      }: IContent) => {\n//\n//         return (\n//             <Paper className={classes.root}>\n//                 <Box className={classes.contentWrapper}>\n//                     <Paper className={classes.header}>\n//                         <Hidden mdUp smUp>\n//                             <Fab\n//                                 className={classes.fab}\n//                                 color=\"primary\"\n//                                 onClick={() => {\n//                                     LayoutStore.toggleActiveView(\"results\");\n//                                 }}\n//                             >\n//                                 <ArrowBackIcon />\n//                             </Fab>\n//                         </Hidden>\n//                         <Fab className={classes.fab} onClick={() => store.setFavorite()}>\n//                             {favoriteIcon}\n//                         </Fab>\n//\n//                         <Typography\n//                             className={classes.title}\n//                             variant={\"h4\"}\n//                             component={\"h2\"}\n//                         >\n//                             {title}\n//                         </Typography>\n//                     </Paper>\n//                     <Typography\n//                         className={classes.subtitle}\n//                         variant={\"body1\"}\n//                         component={\"p\"}\n//                     >\n//                         <img className={classes.img} alt={\"#\"} src={img} />\n//                         {prefixTitle}: {title} <br />\n//                         {prefixSubtitle}: {subtitle}\n//                     </Typography>\n//                 </Box>\n//             </Paper>\n//         );\n//     }\n// );\ninterface IContent {\n  title: string;\n  favoriteIcon: JSX.Element;\n  children: JSX.Element;\n}\n\nexport const Content = observer(\n  ({ title, favoriteIcon, children }: IContent) => {\n    return (\n      <Box className={classes.root}>\n        <Box className={classes.contentWrapper}>\n          <Box className={classes.header}>\n            <Hidden smUp>\n              <Fab\n                className={classes.fab}\n                style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n                color=\"primary\"\n                onClick={() => {\n                  LayoutStore.toggleActiveView(\"results\");\n                }}\n              >\n                <ArrowBackIcon />\n              </Fab>\n            </Hidden>\n            <Fab\n              className={classes.fab}\n              style={{ minHeight: \"40px\", minWidth: \"40px\" }}\n              onClick={() => store.setFavorite()}\n            >\n              {favoriteIcon}\n            </Fab>\n\n            <Typography\n              className={classes.headerTitle}\n              variant={\"h5\"}\n              component={\"h3\"}\n            >\n              {title}\n            </Typography>\n          </Box>\n          {children}\n        </Box>\n      </Box>\n    );\n  }\n);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { colors } from \"../../store/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"calc(100% - 32px)\",\n    margin: 8,\n    background: colors.tertiaryBG,\n  },\n}));\n\nexport const Placeholder = () => {\n  const classes = useStyles();\n  return <Box className={classes.root}></Box>;\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classes from \"./Content.module.css\";\n\ninterface BodyContentProp {\n  img: string;\n  preTitle: string;\n  title: string;\n  preSubtitle: string;\n  subtitle?: string | number | JSX.Element;\n}\n\nexport const BodyContent = ({\n  img,\n  title,\n  subtitle,\n  preSubtitle,\n  preTitle,\n}: BodyContentProp) => {\n  return (\n    <Typography\n      className={classes.subtitle}\n      variant={\"body1\"}\n      component={\"div\"}\n    >\n      <img className={classes.img} alt={\"#\"} src={img} />\n      <Typography variant={\"h6\"} component={\"div\"} className={classes.preTitle}>\n        {preTitle}\n      </Typography>\n      <Typography className={classes.title} variant={\"h4\"}>\n        {\" \"}\n        {title}\n      </Typography>\n      <br />\n      <Typography variant={\"h4\"} className={classes.preSubTitle}>\n        {\" \"}\n        {preSubtitle}\n      </Typography>\n      <Typography className={classes.subTitle} variant={\"h4\"}>\n        {\" \"}\n        {subtitle}\n      </Typography>\n    </Typography>\n  );\n};\n","import React from \"react\";\nimport { AnimeFromCharacterResponseType } from \"../../../store/types\";\nimport { Box, Link } from \"@material-ui/core\";\n\nexport interface AnimeListFromAnimeProp {\n  animeList: AnimeFromCharacterResponseType[];\n}\n\nexport const AnimeListFromAnime = ({ animeList }: AnimeListFromAnimeProp) => {\n  return (\n    <Box>\n      {animeList.map((el) => (\n        <Box>\n          {el.name}{\" \"}\n          <Link href={el.url} color={\"primary\"}>\n            ccskrf\n          </Link>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Content } from \"./Content\";\nimport store from \"../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { Placeholder } from \"./Placeholder\";\nimport {\n  animeGuard,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"../../store/types\";\nimport { BodyContent } from \"./BodyContent\";\nimport { AnimeListFromAnime } from \"./Character/AnimeListFromAnime\";\n\nexport const ContentContainer = observer(() => {\n  const content = store.content;\n  let contentJSX = () => {\n    if (content) {\n      const img = content.image_url;\n      const favoriteIcon = content.isFavorite ? (\n        <FavoriteIcon />\n      ) : (\n        <FavoriteBorderIcon />\n      );\n\n      if (animeGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              img={img}\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"Synopsis: \"}\n              subtitle={content.synopsis}\n            />\n          </Content>\n        );\n      } else if (characterGuard(content)) {\n        const animeList = <AnimeListFromAnime animeList={content.anime} />;\n        return (\n          <Content title={content.name} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              img={img}\n              preTitle={\"Name: \"}\n              title={content.name}\n              preSubtitle={\"This character from: \"}\n              subtitle={animeList}\n            />\n          </Content>\n        );\n      } else if (topAnimeGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"RANK: \"}\n              subtitle={content.rank}\n              img={img}\n            />\n          </Content>\n        );\n      } else if (topCharactersGuard(content)) {\n        return (\n          <Content title={content.title} favoriteIcon={favoriteIcon}>\n            <BodyContent\n              preTitle={\"Title: \"}\n              title={content.title}\n              preSubtitle={\"RANK: \"}\n              subtitle={content.rank}\n              img={img}\n            />\n          </Content>\n        );\n      } else {\n        let unrealType: never = content;\n      }\n    } else {\n      return <Placeholder />;\n    }\n  };\n\n  return <>{contentJSX()}</>;\n});\n","import React from \"react\";\nimport { Box, Hidden, makeStyles, SwipeableDrawer } from \"@material-ui/core\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Category } from \"../Category/Category\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"fit-content\",\n  },\n  container: {\n    background: \"rgba(65, 94, 127, 1)\",\n    padding: \"60px 8px\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n}));\n\nexport const MobPanel = observer(() => {\n  const classes = useStyles();\n  return (\n    <SwipeableDrawer\n      anchor={\"left\"}\n      open={LayoutStore.mobPanel}\n      onClose={() => {\n        LayoutStore.toggleMobPanel(false);\n      }}\n      onOpen={() => {\n        LayoutStore.toggleMobPanel(true);\n      }}\n      className={classes.root}\n    >\n      <Box className={classes.container}>\n        <Hidden mdUp>\n          <Category />\n        </Hidden>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React from \"react\";\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport ErrorStore from \"../store/ErrorStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\n\ninterface ErrorAlertProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  root: {},\n});\nexport const ErrorAlert = observer(({ children }: ErrorAlertProp) => {\n  const classes = useStyle();\n  console.log(toJS(ErrorStore.errorText));\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={ErrorStore.isOpenError}\n      autoHideDuration={6000}\n      onClose={() => {\n        ErrorStore.isOpenError = false;\n      }}\n    >\n      <Alert severity=\"error\">{ErrorStore.errorText}</Alert>\n    </Snackbar>\n  );\n});\n","import React from \"react\";\nimport { Backdrop, Box, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface LoaderProp {\n  children?: React.ReactNode;\n}\n\nconst useStyle = makeStyles({\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\",\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\",\n  },\n});\nexport const Loader = observer(({ children }: LoaderProp) => {\n  const classes = useStyle();\n  return (\n    <Box className={classes.loader}>\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress />\n      </Backdrop>\n    </Box>\n  );\n});\n","import React from \"react\";\nimport { Loader } from \"./Loader\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const LoaderContainer = observer(() => {\n  return <Loader />;\n});\n","import React, { ReactNode } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 240,\n    background: \"rgba(255,255,255,0.5)\",\n    // minWidth: 250,\n    height: 64,\n    cursor: \"pointer\",\n    margin: \"8px auto\",\n  },\n  media: {\n    border: \"1px solid rgba(255,255,255,0.8)\",\n    width: 56,\n    height: 56,\n    borderRadius: \"100%\",\n    margin: 4,\n  },\n\n  fav: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    width: 25,\n    height: 25,\n  },\n});\n\ninterface ICardSmall {\n  textDescription: ReactNode;\n  img: string;\n  favorite: JSX.Element | null;\n\n  onClick: () => void;\n}\n\nexport const CardSmall = observer(\n  ({ img, favorite, textDescription, onClick }: ICardSmall) => {\n    const classes = useStyles();\n\n    return (\n      <Card className={classes.root} onClick={onClick}>\n        <CardMedia\n          className={classes.media}\n          image={img}\n          title=\"Contemplative Reptile\"\n        />\n        {textDescription}\n        <Box className={classes.fav}>{favorite}</Box>\n      </Card>\n    );\n  }\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CategoriesViewType } from \"../../../store/types\";\n\ninterface TextBlockProp {\n  category: CategoriesViewType;\n  title?: string;\n  description?: string;\n}\n\nconst useStyle = makeStyles({\n  textWrapper: {\n    width: 140,\n    height: 64,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    overflow: \"hidden\",\n    padding: 0,\n  },\n  title: {\n    width: 144,\n    height: 28,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  subtitle: {\n    width: 144,\n    height: 36,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n  onlyTitle: {\n    width: 164,\n    height: 64,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    padding: \"0 4px\",\n  },\n});\nexport const TextBlock = ({ category, title, description }: TextBlockProp) => {\n  const classes = useStyle();\n\n  const textDescription =\n    category === \"anime\" ? (\n      <>\n        <Typography\n          gutterBottom\n          variant=\"button\"\n          component=\"h2\"\n          className={classes.title}\n        >\n          {title}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.subtitle}\n        >\n          {description}\n        </Typography>\n      </>\n    ) : (\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n        component=\"h2\"\n        className={classes.onlyTitle}\n      >\n        {title}\n      </Typography>\n    );\n  const t = <CardContent />;\n  return (\n    <CardContent className={classes.textWrapper}>{textDescription}</CardContent>\n  );\n};\n","import React from \"react\";\nimport { CardSmall } from \"./CardSmall\";\nimport {\n  animeGuard,\n  CardType,\n  characterGuard,\n  topAnimeGuard,\n  topCharactersGuard,\n} from \"../../../store/types\";\nimport { TextBlock } from \"./TextBlock\";\nimport layoutStore from \"../../../store/LayoutStore\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport store from \"../../../store/store\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface CardSmallContainerProp {\n  data: CardType;\n}\n\nfunction TextDescription() {\n  return null;\n}\n\n// export const CardSmallContainer = ({data}: CardSmallContainerProp) => {\n//     const title = data.title || data.name\n//     const img = data.image_url\n//     const favorite = store.category !== \"favorite\" && data.isFavorite ? <FavoriteIcon style={{fontSize: 54}}/> : null\n//     const textDescription = <TextBlock description={data.synopsis} category={layoutStore.categoryView} title={title}/>\n//     const onClick = () => {\n//         store.setContent(data);\n//         LayoutStore.toggleActiveView(\"content\");\n//     }\n//     return (\n//         <CardSmall key={data.mal_id} textDescription={textDescription} img={img} favorite={favorite} onClick={onClick}/>\n//     );\n// };\nexport const CardSmallContainer = observer(\n  ({ data }: CardSmallContainerProp) => {\n    const img = data.image_url;\n    const favorite =\n      store.category !== \"favorite\" && data.isFavorite ? (\n        <FavoriteIcon style={{ fontSize: 25, color: \"indigo\" }} />\n      ) : null;\n    const onClick = () => {\n      store.setContent(data);\n      LayoutStore.toggleActiveView(\"content\");\n    };\n\n    const cardSmall = () => {\n      if (animeGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={data.synopsis}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (characterGuard(data)) {\n        const title = data.name;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (topAnimeGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else if (topCharactersGuard(data)) {\n        const title = data.title;\n        const textDescription = (\n          <TextBlock\n            description={undefined}\n            category={layoutStore.categoryView}\n            title={title}\n          />\n        );\n        return (\n          <CardSmall\n            key={data.mal_id}\n            textDescription={textDescription}\n            img={img}\n            favorite={favorite}\n            onClick={onClick}\n          />\n        );\n      } else {\n        let unrealType: never = data;\n      }\n    };\n\n    return <>{cardSmall()}</>;\n  }\n);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { observer } from \"mobx-react-lite\";\nimport { Typography } from \"@material-ui/core\";\nimport { colors } from \"../../../store/colors\";\nimport { CategoriesType, CategoriesViewType } from \"../../../store/types\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: 300,\n    height: 60,\n  },\n  input: {\n    width: 216,\n    borderRadius: 12,\n    background: \"rgba(26, 40, 47, 1)\",\n    color: colors.white,\n    border: \"1px solid \" + colors.gray,\n    padding: 4,\n  },\n  divider: {},\n  label: {\n    position: \"absolute\",\n  },\n\n  iconButton: {\n    width: 60,\n    height: 60,\n    background: colors.green,\n    borderRadius: 13,\n  },\n});\n\ninterface SearchProps {\n  startSearch: () => void;\n  activeCategory: CategoriesViewType;\n  categories: { value: CategoriesType; text: string }[];\n  setTextInput: React.Dispatch<React.SetStateAction<string>>;\n  textInput: string;\n}\n\n//todo onEnter\nexport const Search = observer(\n  ({\n    startSearch,\n    activeCategory,\n    categories,\n    setTextInput,\n    textInput,\n  }: SearchProps) => {\n    const classes = useStyles();\n    const activeCategoryText = categories.map((el) =>\n      el.value === activeCategory ? el.text : null\n    );\n    return (\n      <div className={classes.root}>\n        <Typography className={classes.label}>{activeCategoryText}</Typography>\n        <InputBase\n          value={textInput}\n          onChange={(e) => {\n            setTextInput(e.target.value);\n          }}\n          className={classes.input}\n          //todo а если не аниме?\n          placeholder={`Start searching ${activeCategory}`}\n          inputProps={{ \"aria-label\": \"search Anime\" }}\n        />\n\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"search\"\n          onClick={() => {\n            startSearch();\n          }}\n        >\n          <SearchIcon />\n        </IconButton>\n      </div>\n    );\n  }\n);\n","import React, { useEffect, useState } from \"react\";\nimport store from \"../../../store/store\";\nimport { observer } from \"mobx-react-lite\";\nimport LayoutStore from \"../../../store/LayoutStore\";\nimport { categories } from \"../../Category/Category\";\nimport ErrorStore from \"../../../store/ErrorStore\";\nimport { Search } from \"./Search\";\n\nexport const SearchContainer = observer(() => {\n  const [textInput, setTextInput] = useState(\"\");\n  const validator = () => {\n    if (textInput.length <= 3) {\n      ErrorStore.changeTextError(\"Введите больше 3 букв\");\n      ErrorStore.toggleAlertError(true);\n      return;\n    } else {\n      store.startSearchWithDelay(4000, textInput);\n      LayoutStore.setActiveCategory();\n    }\n  };\n  useEffect(() => {\n    if (store.category === \"favorite\") store.startSearch(textInput);\n  }, [textInput]);\n  const activeCategory = LayoutStore.categoryView;\n  const startSearch = () => {\n    store.category === \"favorite\" ? store.startSearch(textInput) : validator();\n  };\n\n  return (\n    <Search\n      textInput={textInput}\n      setTextInput={setTextInput}\n      startSearch={startSearch}\n      activeCategory={activeCategory}\n      categories={categories}\n    />\n  );\n});\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport { CardSmallContainer } from \"./CardSmall/CardSmallContainer\";\nimport { CardType } from \"../../store/types\";\nimport { colors } from \"../../store/colors\";\nimport { SearchContainer } from \"./Search/SearchContainer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    padding: 8,\n    minWidth: 320,\n    background: colors.primaryBG,\n    height: \"calc(100vh - 64px)\",\n    overflow: \"hidden\",\n  },\n  cardsList: {\n    overflowY: \"auto\",\n  },\n  resultsLabel: {\n    padding: 4,\n    color: colors.green,\n  },\n  cardsListScroll: {\n    overflowY: \"auto\",\n  },\n}));\n\nexport const Results = observer(\n  ({ resultsTitle, data, toResultRef, scrollResult }: ResultsProp) => {\n    const classes = useStyles();\n\n    //todo если нет поиска, то надо показывать всё подряд\n    const cardList = data.map((el) => {\n      if (el !== undefined)\n        return (\n          <CardSmallContainer key={`${el.mal_id}${Math.random()}`} data={el} />\n        );\n    });\n\n    return (\n      <Paper className={classes.root}>\n        <SearchContainer />\n        <Box className={classes.resultsLabel}>\n          <Typography variant={\"button\"}>{resultsTitle}</Typography>\n        </Box>\n        <div\n          ref={toResultRef}\n          onScroll={scrollResult}\n          className={classes.cardsListScroll}\n        >\n          {cardList}\n        </div>\n      </Paper>\n    );\n  }\n);\n\ninterface ResultsProp {\n  resultsTitle: string;\n  data: (CardType | undefined)[];\n  toResultRef: React.RefObject<HTMLDivElement>;\n  scrollResult: (e: any) => void;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Results } from \"./Results\";\nimport { observer } from \"mobx-react-lite\";\nimport { paginationStore } from \"../../store/pagination\";\nimport LayoutStore from \"../../store/LayoutStore\";\nimport store from \"../../store/store\";\n\ninterface ResultsContainerProp {\n  children?: React.ReactNode;\n}\n\nexport const ResultsContainer = observer(\n  ({ children }: ResultsContainerProp) => {\n    const toResultRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n      toResultRef.current?.scrollTo(0, 0);\n    }, [LayoutStore.categoryView]);\n\n    function scrollResult(e: any) {\n      if (\n        e.target.scrollHeight -\n          (e.target.scrollTop +\n            (window.innerHeight - e.target.getBoundingClientRect().top)) <\n        100\n      ) {\n        paginationStore.setFetching(true);\n      }\n    }\n\n    useEffect(() => {\n      if (paginationStore.fetching) {\n        console.log(LayoutStore.categoryView);\n\n        paginationStore.startPaginationWithDelay();\n      }\n    }, [paginationStore.fetching]);\n\n    const resultsTitle = LayoutStore.categoryView;\n    //todo поменять с отображения resultsData на конкретные массивы\n    let data = store.data;\n    return (\n      <Results\n        resultsTitle={resultsTitle}\n        toResultRef={toResultRef}\n        scrollResult={scrollResult}\n        data={data}\n      />\n    );\n  }\n);\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport \"./index.css\";\nimport {\n  Box,\n  Container,\n  CssBaseline,\n  Hidden,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Appbar } from \"./components/AppBar/AppBar\";\nimport LayoutStore from \"./store/LayoutStore\";\nimport { Results } from \"./components/Results/Results\";\nimport { Category } from \"./components/Category/Category\";\nimport { ContentContainer } from \"./components/Content/ContentContainer\";\nimport { MobPanel } from \"./components/AppBar/MobPanel\";\nimport { ErrorAlert } from \"./components/ErrorAlert\";\nimport { colors } from \"./store/colors\";\nimport loaderStore from \"./store/loaderStore\";\nimport { LoaderContainer } from \"./components/Loader/LoaderContainer\";\nimport { ResultsContainer } from \"./components/Results/ResultsContainer\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxHeight: \"100vh\",\n    background: colors.bg,\n    color: colors.orange,\n    maxWidth: \"100vw\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  contentWrapper: {\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    background: \"transparent\",\n  },\n  backdrop: {\n    color: \"rgba(0,0,0,0.3)\",\n  },\n  loader: {\n    position: \"fixed\",\n    zIndex: 999,\n    top: \"50%\",\n    left: \"50%\",\n  },\n});\nconst App = observer(() => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {loaderStore.loading ? <LoaderContainer /> : null}\n      <CssBaseline />\n      <Appbar />\n      <Hidden mdUp>\n        <MobPanel />\n      </Hidden>\n      <Container className={classes.container}>\n        <Hidden smDown>\n          <Category />\n        </Hidden>\n        <Hidden xsDown>\n          <ResultsContainer />\n        </Hidden>\n        <Hidden smUp>\n          <Box className={classes.contentWrapper}>\n            {LayoutStore.isContentOpen ? (\n              <ContentContainer />\n            ) : (\n              <ResultsContainer />\n            )}\n          </Box>\n          {/*  {LayoutStore.activeView === \"content\" ? (*/}\n          {/*    <ContentContainer />*/}\n          {/*  ) : (*/}\n          {/*    <Results />*/}\n          {/*  )}*/}\n          {/*</Box>*/}\n        </Hidden>\n        <Hidden xsDown>\n          <Box className={classes.contentWrapper}>\n            <ContentContainer />\n          </Box>\n        </Hidden>\n      </Container>\n      <ErrorAlert />\n    </div>\n  );\n});\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Content_root__2QAnb\",\"contentWrapper\":\"Content_contentWrapper__1_Z_u\",\"header\":\"Content_header__TjYHc\",\"headerTitle\":\"Content_headerTitle__31VRS\",\"img\":\"Content_img__2YsyD\",\"fab\":\"Content_fab__wbXtp\",\"preTitle\":\"Content_preTitle__2LKov\",\"title\":\"Content_title__2SIw7\",\"preSubTitle\":\"Content_preSubTitle__mMOUj\",\"subTitle\":\"Content_subTitle__3RIp9\"};"],"sourceRoot":""}